"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("../shared/utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

var YearSelector = function YearSelector(_ref) {
  var isOpen = _ref.isOpen,
      activeDate = _ref.activeDate,
      onYearSelect = _ref.onYearSelect,
      startingYear = _ref.startingYear,
      endingYear = _ref.endingYear,
      maximumDate = _ref.maximumDate,
      minimumDate = _ref.minimumDate;
  var wrapperElement = (0, _react.useRef)(null);
  var yearListElement = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    var classToggleMethod = isOpen ? 'add' : 'remove';
    var activeSelectorYear = wrapperElement.current.querySelector('.Calendar__yearSelectorText.-active');
    wrapperElement.current.classList[classToggleMethod]('-faded');
    yearListElement.current.scrollTop = activeSelectorYear.offsetTop - activeSelectorYear.offsetHeight * 5.8;
    yearListElement.current.classList[classToggleMethod]('-open');
  }, [isOpen]);

  var renderSelectorYears = function renderSelectorYears() {
    var items = [];

    for (var i = startingYear; i <= endingYear; i += 1) {
      items.push(i);
    }

    return items.map(function (item) {
      var isAfterMaximumDate = maximumDate && item > maximumDate.year;
      var isBeforeMinimumDate = minimumDate && item < minimumDate.year;
      return _react["default"].createElement("div", {
        key: item,
        className: "Calendar__yearSelectorItem"
      }, _react["default"].createElement("button", {
        tabIndex: "-1",
        className: "Calendar__yearSelectorText ".concat(activeDate.year === item ? '-active' : ''),
        type: "button",
        onClick: function onClick() {
          onYearSelect(item);
        },
        disabled: isAfterMaximumDate || isBeforeMinimumDate
      }, (0, _utils.toPersianNumber)(item)));
    });
  };

  return _react["default"].createElement("div", {
    className: "Calendar__yearSelectorAnimationWrapper"
  }, _react["default"].createElement("div", {
    ref: wrapperElement,
    className: "Calendar__yearSelectorWrapper"
  }, _react["default"].createElement("div", {
    ref: yearListElement,
    className: "Calendar__yearSelector"
  }, renderSelectorYears())));
};

YearSelector.propTypes = {
  startingYear: _propTypes["default"].number,
  endingYear: _propTypes["default"].number
};
YearSelector.defaultProps = {
  startingYear: 1300,
  endingYear: 1450
};
var _default = YearSelector;
exports["default"] = _default;