import * as React from "react";
import { Moment } from "jalali-moment";
import { IDays } from "./utils/daysInMonth";
import { IRangeDate, IRangeDatePickerTheme, IRangeDays } from "./types";
export interface IRangeDatePickerProps {
    start: string;
    end: string;
    ArrowLeft: React.ReactType;
    ArrowRight: React.ReactType;
    modalZIndex?: number;
    theme?: IRangeDatePickerTheme;
    weekend?: number[];
    isRenderingButtons?: boolean;
    onClickSubmitButton?: (arg: any) => any;
}
export interface IRangeDatePickerState {
    startDate: Moment;
    endDate: Moment;
    monthName?: string;
    days?: IDays[];
    rangeDays?: IRangeDays;
    isOpenModal: boolean;
    isSelecting: boolean;
    rangeStatus: string;
    cloneDays: Moment;
    initialRange?: IRangeDate;
}
export declare class RangeDatePicker extends React.Component<IRangeDatePickerProps, IRangeDatePickerState> {
    static defaultProps: Partial<IRangeDatePickerProps>;
    constructor(props: any);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Readonly<IRangeDatePickerProps>, prevState: Readonly<IRangeDatePickerState>, snapshot?: any): void;
    changeMonth: (amount: any) => void;
    toggleModalOpen: () => void;
    changeStartDay: (e: React.SyntheticEvent<EventTarget>) => {};
    changeEndDay: (e: React.SyntheticEvent<EventTarget>) => void;
    daysEventListeners: () => {
        onClick: (e: React.SyntheticEvent<EventTarget>) => {};
        onMouseOver?: undefined;
    } | {
        onMouseOver: (e: React.SyntheticEvent<EventTarget>) => void;
        onClick: () => void;
    };
    endSelecting: () => void;
    changeInputValues: (e: React.ChangeEvent<HTMLInputElement>, start?: boolean) => void;
    cancelButton: () => void;
    submitButton: () => void;
    render(): React.ReactNode;
}
//# sourceMappingURL=rangeDatePicker.d.ts.map