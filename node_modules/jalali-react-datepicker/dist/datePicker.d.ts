import * as React from "react";
import { IDatePickerTheme } from "./types";
import { Moment } from "jalali-moment";
import { IDays } from "./utils/daysInMonth";
interface IDatePickerProps {
    value: number | Date | Moment;
    ArrowLeft?: React.ReactType;
    ArrowRight?: React.ReactType;
    ClockIcon?: React.ReactType;
    DateIcon?: React.ReactType;
    modalZIndex?: number;
    theme?: IDatePickerTheme;
    weekend?: number[];
    isRenderingButtons?: boolean;
    timePicker?: boolean;
    onClickSubmitButton?: (arg: any) => any;
}
interface IDatePickerState {
    value: Moment;
    cloneDays: Moment;
    initialValue?: Moment;
    monthName?: string;
    days?: IDays[];
    isOpenModal: boolean;
    dayStatus: string;
    timePickerView: boolean;
}
export declare class DatePicker extends React.PureComponent<IDatePickerProps, IDatePickerState> {
    static defaultProps: Partial<IDatePickerProps>;
    constructor(props: any);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Readonly<IDatePickerProps>, prevState: Readonly<IDatePickerState>): void;
    changeMonth: (amount: any) => void;
    toggleModalOpen: () => void;
    toggleTimePickerView: () => void;
    selectDay: (e: React.SyntheticEvent<EventTarget>) => void;
    daysEventListeners: () => {
        onClick: (e: React.SyntheticEvent<EventTarget>) => void;
    };
    cancelButton: () => void;
    submitButton: () => void;
    render(): React.ReactNode;
}
export {};
//# sourceMappingURL=datePicker.d.ts.map