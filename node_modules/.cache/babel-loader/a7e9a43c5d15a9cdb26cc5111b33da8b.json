{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"../shared/utils\");\n\nvar _sliderHelpers = require(\"../shared/sliderHelpers\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar Header = function Header(_ref) {\n  var maximumDate = _ref.maximumDate,\n      minimumDate = _ref.minimumDate,\n      onMonthChange = _ref.onMonthChange,\n      activeDate = _ref.activeDate,\n      monthChangeDirection = _ref.monthChangeDirection,\n      onMonthSelect = _ref.onMonthSelect,\n      onYearSelect = _ref.onYearSelect,\n      isMonthSelectorOpen = _ref.isMonthSelectorOpen,\n      isYearSelectorOpen = _ref.isYearSelectorOpen;\n  var headerElement = (0, _react.useRef)(null);\n  var monthYearWrapperElement = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    if (!monthChangeDirection) return;\n    (0, _sliderHelpers.animateContent)({\n      direction: monthChangeDirection,\n      parent: monthYearWrapperElement.current\n    });\n  }, [monthChangeDirection]);\n  (0, _react.useEffect)(function () {\n    var isOpen = isMonthSelectorOpen || isYearSelectorOpen;\n    var monthText = headerElement.current.querySelector('.Calendar__monthYear.-shown .Calendar__monthText');\n    var yearText = monthText.nextSibling;\n\n    var hasActiveBackground = function hasActiveBackground(element) {\n      return element.classList.contains('-activeBackground');\n    };\n\n    var isInitialRender = !isOpen && !hasActiveBackground(monthText) && !hasActiveBackground(yearText);\n    if (isInitialRender) return;\n\n    var arrows = _toConsumableArray(headerElement.current.querySelectorAll('.Calendar__monthArrowWrapper'));\n\n    var hasMonthSelectorToggled = isMonthSelectorOpen || hasActiveBackground(monthText);\n    var primaryElement = hasMonthSelectorToggled ? monthText : yearText;\n    var secondaryElement = hasMonthSelectorToggled ? yearText : monthText;\n    var translateXDirection = hasMonthSelectorToggled ? -1 : 1;\n    var scale = !isOpen ? 1 : 1.05;\n    var translateX = !isOpen ? 0 : \"\".concat(translateXDirection * secondaryElement.offsetWidth / 2);\n    secondaryElement.style.transform = '';\n    primaryElement.style.transform = \"scale(\".concat(scale, \") translateX(\").concat(translateX, \"px)\");\n    primaryElement.classList.toggle('-activeBackground');\n    secondaryElement.classList.toggle('-hidden');\n    arrows.forEach(function (arrow) {\n      arrow.classList.toggle('-hidden');\n    });\n  }, [isMonthSelectorOpen, isYearSelectorOpen]);\n\n  var getMonthYearText = function getMonthYearText(isInitialActiveChild) {\n    var date = (0, _sliderHelpers.getSlideDate)({\n      isInitialActiveChild: isInitialActiveChild,\n      monthChangeDirection: monthChangeDirection,\n      activeDate: activeDate,\n      parent: monthYearWrapperElement.current\n    });\n    var year = (0, _utils.toPersianNumber)(date.year);\n    var month = (0, _utils.getMonthName)(date.month);\n    return \"\".concat(month, \" \").concat(year);\n  };\n\n  var isNextMonthArrowDisabled = maximumDate && (0, _utils.isBeforeDate)(maximumDate, _objectSpread({}, activeDate, {\n    month: activeDate.month + 1,\n    day: 1\n  }));\n  var isPreviousMonthArrowDisabled = minimumDate && ((0, _utils.isBeforeDate)(_objectSpread({}, activeDate, {\n    day: 1\n  }), minimumDate) || (0, _utils.isSameDay)(minimumDate, _objectSpread({}, activeDate, {\n    day: 1\n  })));\n  return _react[\"default\"].createElement(\"div\", {\n    ref: headerElement,\n    className: \"Calendar__header\"\n  }, _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    className: \"Calendar__monthArrowWrapper -right\",\n    onClick: function onClick() {\n      return onMonthChange('PREVIOUS');\n    },\n    \"aria-label\": \"\\u0645\\u0627\\u0647 \\u0642\\u0628\\u0644\",\n    type: \"button\",\n    disabled: isPreviousMonthArrowDisabled\n  }, _react[\"default\"].createElement(\"span\", {\n    className: \"Calendar__monthArrow\",\n    alt: \"\\u0641\\u0644\\u0634 \\u0631\\u0627\\u0633\\u062A\"\n  }, \"\\xA0\")), _react[\"default\"].createElement(\"div\", {\n    className: \"Calendar__monthYearContainer\",\n    ref: monthYearWrapperElement\n  }, \"\\xA0\", _react[\"default\"].createElement(\"div\", {\n    onAnimationEnd: _sliderHelpers.handleSlideAnimationEnd,\n    className: \"Calendar__monthYear -shown\"\n  }, _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    onClick: onMonthSelect,\n    type: \"button\",\n    className: \"Calendar__monthText\"\n  }, getMonthYearText(true).split(' ')[0]), _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    onClick: onYearSelect,\n    type: \"button\",\n    className: \"Calendar__yearText\"\n  }, getMonthYearText(true).split(' ')[1])), _react[\"default\"].createElement(\"div\", {\n    onAnimationEnd: _sliderHelpers.handleSlideAnimationEnd,\n    className: \"Calendar__monthYear -hiddenNext\"\n  }, _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    onClick: onMonthSelect,\n    type: \"button\",\n    className: \"Calendar__monthText\"\n  }, getMonthYearText(false).split(' ')[0]), _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    onClick: onYearSelect,\n    type: \"button\",\n    className: \"Calendar__yearText\"\n  }, getMonthYearText(false).split(' ')[1]))), _react[\"default\"].createElement(\"button\", {\n    tabIndex: \"-1\",\n    className: \"Calendar__monthArrowWrapper -left\",\n    onClick: function onClick() {\n      return onMonthChange('NEXT');\n    },\n    \"aria-label\": \"\\u0645\\u0627\\u0647 \\u0628\\u0639\\u062F\",\n    type: \"button\",\n    disabled: isNextMonthArrowDisabled\n  }, _react[\"default\"].createElement(\"span\", {\n    className: \"Calendar__monthArrow\",\n    alt: \"\\u0641\\u0644\\u0634 \\u0686\\u067E\"\n  }, \"\\xA0\")));\n};\n\nvar _default = Header;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}