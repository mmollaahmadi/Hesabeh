{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/hesabeh/src/components/common/input-auto-suggestion/input-auto-suggestion.js\";\nimport styles from './Basic.less';\nimport React, { Component } from 'react';\nimport isMobile from 'ismobilejs'; // import Link from 'Link/Link';\n\nimport Autosuggest from 'react-autosuggest';\nimport languages from './languages';\nimport { escapeRegexCharacters } from 'utils/utils';\nconst focusInputOnSuggestionClick = !isMobile.any;\n\nconst getSuggestions = value => {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') {\n    return [];\n  }\n\n  const regex = new RegExp('^' + escapedValue, 'i');\n  return languages.filter(language => regex.test(language.name));\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, suggestion.name);\n\nexport default class InputAutoSuggestion extends Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: \"Type 'c'\",\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(\"div\", {\n      id: \"basic-example\",\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.textContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Basic\"), React.createElement(\"div\", {\n      className: styles.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Let\\u2019s start simple. Here\\u2019s a plain list of suggestions.\"), React.createElement(Link, {\n      className: styles.codepenLink,\n      href: \"http://codepen.io/moroshko/pen/LGNJMy\",\n      underline: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Codepen\")), React.createElement(\"div\", {\n      className: styles.autosuggest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      focusInputOnSuggestionClick: focusInputOnSuggestionClick,\n      id: \"basic-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/components/common/input-auto-suggestion/input-auto-suggestion.js"],"names":["styles","React","Component","isMobile","Autosuggest","languages","escapeRegexCharacters","focusInputOnSuggestionClick","any","getSuggestions","value","escapedValue","trim","regex","RegExp","filter","language","test","name","getSuggestionValue","suggestion","renderSuggestion","InputAutoSuggestion","constructor","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","render","inputProps","placeholder","container","textContainer","title","description","codepenLink","autosuggest"],"mappings":"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","sourcesContent":["\nimport styles from './Basic.less';\n\nimport React, { Component } from 'react';\nimport isMobile from 'ismobilejs';\n// import Link from 'Link/Link';\nimport Autosuggest from 'react-autosuggest';\nimport languages from './languages';\nimport { escapeRegexCharacters } from 'utils/utils';\n\nconst focusInputOnSuggestionClick = !isMobile.any;\n\nconst getSuggestions = value => {\n const escapedValue = escapeRegexCharacters(value.trim());\n\n if (escapedValue === '') {\n   return [];\n }\n\n const regex = new RegExp('^' + escapedValue, 'i');\n\n return languages.filter(language => regex.test(language.name));\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => <span>{suggestion.name}</span>;\n\nexport default class InputAutoSuggestion extends Component {\n constructor() {\n   super();\n\n   this.state = {\n     value: '',\n     suggestions: []\n   };\n }\n\n onChange = (event, { newValue }) => {\n   this.setState({\n     value: newValue\n   });\n };\n\n onSuggestionsFetchRequested = ({ value }) => {\n   this.setState({\n     suggestions: getSuggestions(value)\n   });\n };\n\n onSuggestionsClearRequested = () => {\n   this.setState({\n     suggestions: []\n   });\n };\n\n render() {\n   const { value, suggestions } = this.state;\n   const inputProps = {\n     placeholder: \"Type 'c'\",\n     value,\n     onChange: this.onChange\n   };\n\n   return (\n     <div id=\"basic-example\" className={styles.container}>\n       <div className={styles.textContainer}>\n         <div className={styles.title}>Basic</div>\n         <div className={styles.description}>\n           Let’s start simple. Here’s a plain list of suggestions.\n         </div>\n         <Link\n           className={styles.codepenLink}\n           href=\"http://codepen.io/moroshko/pen/LGNJMy\"\n           underline={false}\n         >\n           Codepen\n         </Link>\n       </div>\n       <div className={styles.autosuggest}>\n         <Autosuggest\n           suggestions={suggestions}\n           onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n           onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n           getSuggestionValue={getSuggestionValue}\n           renderSuggestion={renderSuggestion}\n           inputProps={inputProps}\n           focusInputOnSuggestionClick={focusInputOnSuggestionClick}\n           id=\"basic-example\"\n         />\n       </div>\n     </div>\n   );\n }\n}\n"]},"metadata":{},"sourceType":"module"}