{"ast":null,"code":"\"use strict\";\n\nfunction _possibleConstructorReturn(a, b) {\n  if (!a) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return !b || \"object\" != typeof b && \"function\" != typeof b ? a : b;\n}\n\nfunction _inherits(a, b) {\n  if (\"function\" != typeof b && null !== b) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof b);\n  a.prototype = Object.create(b && b.prototype, {\n    constructor: {\n      value: a,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);\n}\n\nfunction _classCallCheck(a, b) {\n  if (!(a instanceof b)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction __guard__(a, b) {\n  return void 0 !== a && null !== a ? b(a) : void 0;\n}\n\nfunction __guardMethod__(a, b, c) {\n  return void 0 !== a && null !== a && \"function\" == typeof a[b] ? c(a, b) : void 0;\n}\n\nvar _createClass = function () {\n  function a(a, b) {\n    for (var c = 0; c < b.length; c++) {\n      var d = b[c];\n      d.enumerable = d.enumerable || !1, d.configurable = !0, \"value\" in d && (d.writable = !0), Object.defineProperty(a, d.key, d);\n    }\n  }\n\n  return function (b, c, d) {\n    return c && a(b.prototype, c), d && a(b, d), b;\n  };\n}(),\n    Emitter = function () {\n  function a() {\n    _classCallCheck(this, a);\n  }\n\n  return _createClass(a, [{\n    key: \"on\",\n    value: function (a, b) {\n      return this._callbacks = this._callbacks || {}, this._callbacks[a] || (this._callbacks[a] = []), this._callbacks[a].push(b), this;\n    }\n  }, {\n    key: \"emit\",\n    value: function (a) {\n      this._callbacks = this._callbacks || {};\n      var b = this._callbacks[a];\n\n      if (b) {\n        for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];\n\n        for (var f = b, g = 0, f = f;;) {\n          var h;\n          if (g >= f.length) break;\n          h = f[g++];\n          h.apply(this, d);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function (a, b) {\n      if (!this._callbacks || 0 === arguments.length) return this._callbacks = {}, this;\n      var c = this._callbacks[a];\n      if (!c) return this;\n      if (1 === arguments.length) return delete this._callbacks[a], this;\n\n      for (var d = 0; d < c.length; d++) {\n        if (c[d] === b) {\n          c.splice(d, 1);\n          break;\n        }\n      }\n\n      return this;\n    }\n  }]), a;\n}(),\n    Dropzone = function (a) {\n  function b(a, c) {\n    _classCallCheck(this, b);\n\n    var d = _possibleConstructorReturn(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this)),\n        e = void 0,\n        f = void 0;\n\n    if (d.element = a, d.version = b.version, d.defaultOptions.previewTemplate = d.defaultOptions.previewTemplate.replace(/\\n*/g, \"\"), d.clickableElements = [], d.listeners = [], d.files = [], \"string\" == typeof d.element && (d.element = document.querySelector(d.element)), !d.element || null == d.element.nodeType) throw new Error(\"Invalid dropzone element.\");\n    if (d.element.dropzone) throw new Error(\"Dropzone already attached.\");\n    b.instances.push(d), d.element.dropzone = d;\n    var g = null != (f = b.optionsForElement(d.element)) ? f : {};\n\n    if (d.options = b.extend({}, d.defaultOptions, g, null != c ? c : {}), d.options.forceFallback || !b.isBrowserSupported()) {\n      var h;\n      return h = d.options.fallback.call(d), _possibleConstructorReturn(d, h);\n    }\n\n    if (null == d.options.url && (d.options.url = d.element.getAttribute(\"action\")), !d.options.url) throw new Error(\"No URL provided.\");\n    if (d.options.acceptedFiles && d.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n    if (d.options.uploadMultiple && d.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n    return d.options.acceptedMimeTypes && (d.options.acceptedFiles = d.options.acceptedMimeTypes, delete d.options.acceptedMimeTypes), null != d.options.renameFilename && (d.options.renameFile = function (a) {\n      return d.options.renameFilename.call(d, a.name, a);\n    }), d.options.method = d.options.method.toUpperCase(), (e = d.getExistingFallback()) && e.parentNode && e.parentNode.removeChild(e), !1 !== d.options.previewsContainer && (d.options.previewsContainer ? d.previewsContainer = b.getElement(d.options.previewsContainer, \"previewsContainer\") : d.previewsContainer = d.element), d.options.clickable && (!0 === d.options.clickable ? d.clickableElements = [d.element] : d.clickableElements = b.getElements(d.options.clickable, \"clickable\")), d.init(), d;\n  }\n\n  return _inherits(b, a), _createClass(b, null, [{\n    key: \"initClass\",\n    value: function () {\n      this.prototype.Emitter = Emitter, this.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"], this.prototype.defaultOptions = {\n        url: null,\n        method: \"post\",\n        withCredentials: !1,\n        timeout: 3e4,\n        parallelUploads: 2,\n        uploadMultiple: !1,\n        chunking: !1,\n        forceChunking: !1,\n        chunkSize: 2e6,\n        parallelChunkUploads: !1,\n        retryChunks: !1,\n        retryChunksLimit: 3,\n        maxFilesize: 256,\n        paramName: \"file\",\n        createImageThumbnails: !0,\n        maxThumbnailFilesize: 10,\n        thumbnailWidth: 120,\n        thumbnailHeight: 120,\n        thumbnailMethod: \"crop\",\n        resizeWidth: null,\n        resizeHeight: null,\n        resizeMimeType: null,\n        resizeQuality: .8,\n        resizeMethod: \"contain\",\n        filesizeBase: 1e3,\n        maxFiles: null,\n        headers: null,\n        clickable: !0,\n        ignoreHiddenFiles: !0,\n        acceptedFiles: null,\n        acceptedMimeTypes: null,\n        autoProcessQueue: !0,\n        autoQueue: !0,\n        addRemoveLinks: !1,\n        previewsContainer: null,\n        hiddenInputContainer: \"body\",\n        capture: null,\n        renameFilename: null,\n        renameFile: null,\n        forceFallback: !1,\n        dictDefaultMessage: \"Drop files here to upload\",\n        dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n        dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n        dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n        dictInvalidFileType: \"You can't upload files of this type.\",\n        dictResponseError: \"Server responded with {{statusCode}} code.\",\n        dictCancelUpload: \"Cancel upload\",\n        dictUploadCanceled: \"Upload canceled.\",\n        dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n        dictRemoveFile: \"Remove file\",\n        dictRemoveFileConfirmation: null,\n        dictMaxFilesExceeded: \"You can not upload any more files.\",\n        dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n        },\n        init: function () {},\n        params: function (a, b, c) {\n          if (c) return {\n            dzuuid: c.file.upload.uuid,\n            dzchunkindex: c.index,\n            dztotalfilesize: c.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: c.file.upload.totalChunkCount,\n            dzchunkbyteoffset: c.index * this.options.chunkSize\n          };\n        },\n        accept: function (a, b) {\n          return b();\n        },\n        chunksUploaded: function (a, b) {\n          b();\n        },\n        fallback: function () {\n          var a = void 0;\n          this.element.className = this.element.className + \" dz-browser-not-supported\";\n\n          for (var c = this.element.getElementsByTagName(\"div\"), d = 0, c = c;;) {\n            var e;\n            if (d >= c.length) break;\n            e = c[d++];\n            var f = e;\n\n            if (/(^| )dz-message($| )/.test(f.className)) {\n              a = f, f.className = \"dz-message\";\n              break;\n            }\n          }\n\n          a || (a = b.createElement('<div class=\"dz-message\"><span></span></div>'), this.element.appendChild(a));\n          var g = a.getElementsByTagName(\"span\")[0];\n          return g && (null != g.textContent ? g.textContent = this.options.dictFallbackMessage : null != g.innerText && (g.innerText = this.options.dictFallbackMessage)), this.element.appendChild(this.getFallbackForm());\n        },\n        resize: function (a, b, c, d) {\n          var e = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: a.width,\n            srcHeight: a.height\n          },\n              f = a.width / a.height;\n          null == b && null == c ? (b = e.srcWidth, c = e.srcHeight) : null == b ? b = c * f : null == c && (c = b / f), b = Math.min(b, e.srcWidth), c = Math.min(c, e.srcHeight);\n          var g = b / c;\n          if (e.srcWidth > b || e.srcHeight > c) if (\"crop\" === d) f > g ? (e.srcHeight = a.height, e.srcWidth = e.srcHeight * g) : (e.srcWidth = a.width, e.srcHeight = e.srcWidth / g);else {\n            if (\"contain\" !== d) throw new Error(\"Unknown resizeMethod '\" + d + \"'\");\n            f > g ? c = b / f : b = c * f;\n          }\n          return e.srcX = (a.width - e.srcWidth) / 2, e.srcY = (a.height - e.srcHeight) / 2, e.trgWidth = b, e.trgHeight = c, e;\n        },\n        transformFile: function (a, b) {\n          return (this.options.resizeWidth || this.options.resizeHeight) && a.type.match(/image.*/) ? this.resizeImage(a, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, b) : b(a);\n        },\n        previewTemplate: '<div class=\"dz-preview dz-file-preview\">\\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\\n  <div class=\"dz-details\">\\n    <div class=\"dz-size\"><span data-dz-size></span></div>\\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\\n  <div class=\"dz-success-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\\n        <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\"dz-error-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\\n        <g id=\"Check-+-Oval-2\" sketch:type=\"MSLayerGroup\" stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\\n          <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" sketch:type=\"MSShapeGroup\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>',\n        drop: function (a) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragstart: function (a) {},\n        dragend: function (a) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragenter: function (a) {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragover: function (a) {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragleave: function (a) {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        paste: function (a) {},\n        reset: function () {\n          return this.element.classList.remove(\"dz-started\");\n        },\n        addedfile: function (a) {\n          var c = this;\n\n          if (this.element === this.previewsContainer && this.element.classList.add(\"dz-started\"), this.previewsContainer) {\n            a.previewElement = b.createElement(this.options.previewTemplate.trim()), a.previewTemplate = a.previewElement, this.previewsContainer.appendChild(a.previewElement);\n\n            for (var d = a.previewElement.querySelectorAll(\"[data-dz-name]\"), e = 0, d = d;;) {\n              var f;\n              if (e >= d.length) break;\n              f = d[e++];\n              var g = f;\n              g.textContent = a.name;\n            }\n\n            for (var h = a.previewElement.querySelectorAll(\"[data-dz-size]\"), i = 0, h = h; !(i >= h.length);) g = h[i++], g.innerHTML = this.filesize(a.size);\n\n            this.options.addRemoveLinks && (a._removeLink = b.createElement('<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>' + this.options.dictRemoveFile + \"</a>\"), a.previewElement.appendChild(a._removeLink));\n\n            for (var j = function (d) {\n              return d.preventDefault(), d.stopPropagation(), a.status === b.UPLOADING ? b.confirm(c.options.dictCancelUploadConfirmation, function () {\n                return c.removeFile(a);\n              }) : c.options.dictRemoveFileConfirmation ? b.confirm(c.options.dictRemoveFileConfirmation, function () {\n                return c.removeFile(a);\n              }) : c.removeFile(a);\n            }, k = a.previewElement.querySelectorAll(\"[data-dz-remove]\"), l = 0, k = k;;) {\n              var m;\n              if (l >= k.length) break;\n              m = k[l++];\n              m.addEventListener(\"click\", j);\n            }\n          }\n        },\n        removedfile: function (a) {\n          return null != a.previewElement && null != a.previewElement.parentNode && a.previewElement.parentNode.removeChild(a.previewElement), this._updateMaxFilesReachedClass();\n        },\n        thumbnail: function (a, b) {\n          if (a.previewElement) {\n            a.previewElement.classList.remove(\"dz-file-preview\");\n\n            for (var c = a.previewElement.querySelectorAll(\"[data-dz-thumbnail]\"), d = 0, c = c;;) {\n              var e;\n              if (d >= c.length) break;\n              e = c[d++];\n              var f = e;\n              f.alt = a.name, f.src = b;\n            }\n\n            return setTimeout(function () {\n              return a.previewElement.classList.add(\"dz-image-preview\");\n            }, 1);\n          }\n        },\n        error: function (a, b) {\n          if (a.previewElement) {\n            a.previewElement.classList.add(\"dz-error\"), \"String\" != typeof b && b.error && (b = b.error);\n\n            for (var c = a.previewElement.querySelectorAll(\"[data-dz-errormessage]\"), d = 0, c = c;;) {\n              var e;\n              if (d >= c.length) break;\n              e = c[d++];\n              e.textContent = b;\n            }\n          }\n        },\n        errormultiple: function () {},\n        processing: function (a) {\n          if (a.previewElement && (a.previewElement.classList.add(\"dz-processing\"), a._removeLink)) return a._removeLink.innerHTML = this.options.dictCancelUpload;\n        },\n        processingmultiple: function () {},\n        uploadprogress: function (a, b, c) {\n          if (a.previewElement) for (var d = a.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"), e = 0, d = d;;) {\n            var f;\n            if (e >= d.length) break;\n            f = d[e++];\n            var g = f;\n            \"PROGRESS\" === g.nodeName ? g.value = b : g.style.width = b + \"%\";\n          }\n        },\n        totaluploadprogress: function () {},\n        sending: function () {},\n        sendingmultiple: function () {},\n        success: function (a) {\n          if (a.previewElement) return a.previewElement.classList.add(\"dz-success\");\n        },\n        successmultiple: function () {},\n        canceled: function (a) {\n          return this.emit(\"error\", a, this.options.dictUploadCanceled);\n        },\n        canceledmultiple: function () {},\n        complete: function (a) {\n          if (a._removeLink && (a._removeLink.innerHTML = this.options.dictRemoveFile), a.previewElement) return a.previewElement.classList.add(\"dz-complete\");\n        },\n        completemultiple: function () {},\n        maxfilesexceeded: function () {},\n        maxfilesreached: function () {},\n        queuecomplete: function () {},\n        addedfiles: function () {}\n      }, this.prototype._thumbnailQueue = [], this.prototype._processingThumbnail = !1;\n    }\n  }, {\n    key: \"extend\",\n    value: function (a) {\n      for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];\n\n      for (var e = c, f = 0, e = e;;) {\n        var g;\n        if (f >= e.length) break;\n        g = e[f++];\n        var h = g;\n\n        for (var i in h) {\n          var j = h[i];\n          a[i] = j;\n        }\n      }\n\n      return a;\n    }\n  }]), _createClass(b, [{\n    key: \"getAcceptedFiles\",\n    value: function () {\n      return this.files.filter(function (a) {\n        return a.accepted;\n      }).map(function (a) {\n        return a;\n      });\n    }\n  }, {\n    key: \"getRejectedFiles\",\n    value: function () {\n      return this.files.filter(function (a) {\n        return !a.accepted;\n      }).map(function (a) {\n        return a;\n      });\n    }\n  }, {\n    key: \"getFilesWithStatus\",\n    value: function (a) {\n      return this.files.filter(function (b) {\n        return b.status === a;\n      }).map(function (a) {\n        return a;\n      });\n    }\n  }, {\n    key: \"getQueuedFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.QUEUED);\n    }\n  }, {\n    key: \"getUploadingFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.UPLOADING);\n    }\n  }, {\n    key: \"getAddedFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.ADDED);\n    }\n  }, {\n    key: \"getActiveFiles\",\n    value: function () {\n      return this.files.filter(function (a) {\n        return a.status === b.UPLOADING || a.status === b.QUEUED;\n      }).map(function (a) {\n        return a;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var a = this;\n\n      if (\"form\" === this.element.tagName && this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\") && this.element.appendChild(b.createElement('<div class=\"dz-default dz-message\"><span>' + this.options.dictDefaultMessage + \"</span></div>\")), this.clickableElements.length) {\n        !function c() {\n          return a.hiddenFileInput && a.hiddenFileInput.parentNode.removeChild(a.hiddenFileInput), a.hiddenFileInput = document.createElement(\"input\"), a.hiddenFileInput.setAttribute(\"type\", \"file\"), (null === a.options.maxFiles || a.options.maxFiles > 1) && a.hiddenFileInput.setAttribute(\"multiple\", \"multiple\"), a.hiddenFileInput.className = \"dz-hidden-input\", null !== a.options.acceptedFiles && a.hiddenFileInput.setAttribute(\"accept\", a.options.acceptedFiles), null !== a.options.capture && a.hiddenFileInput.setAttribute(\"capture\", a.options.capture), a.hiddenFileInput.style.visibility = \"hidden\", a.hiddenFileInput.style.position = \"absolute\", a.hiddenFileInput.style.top = \"0\", a.hiddenFileInput.style.left = \"0\", a.hiddenFileInput.style.height = \"0\", a.hiddenFileInput.style.width = \"0\", b.getElement(a.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(a.hiddenFileInput), a.hiddenFileInput.addEventListener(\"change\", function () {\n            var b = a.hiddenFileInput.files;\n            if (b.length) for (var d = b, e = 0, d = d;;) {\n              var f;\n              if (e >= d.length) break;\n              f = d[e++];\n              var g = f;\n              a.addFile(g);\n            }\n            return a.emit(\"addedfiles\", b), c();\n          });\n        }();\n      }\n\n      this.URL = null !== window.URL ? window.URL : window.webkitURL;\n\n      for (var c = this.events, d = 0, c = c;;) {\n        var e;\n        if (d >= c.length) break;\n        e = c[d++];\n        var f = e;\n        this.on(f, this.options[f]);\n      }\n\n      this.on(\"uploadprogress\", function () {\n        return a.updateTotalUploadProgress();\n      }), this.on(\"removedfile\", function () {\n        return a.updateTotalUploadProgress();\n      }), this.on(\"canceled\", function (b) {\n        return a.emit(\"complete\", b);\n      }), this.on(\"complete\", function (b) {\n        if (0 === a.getAddedFiles().length && 0 === a.getUploadingFiles().length && 0 === a.getQueuedFiles().length) return setTimeout(function () {\n          return a.emit(\"queuecomplete\");\n        }, 0);\n      });\n\n      var g = function (a) {\n        return a.stopPropagation(), a.preventDefault ? a.preventDefault() : a.returnValue = !1;\n      };\n\n      return this.listeners = [{\n        element: this.element,\n        events: {\n          dragstart: function (b) {\n            return a.emit(\"dragstart\", b);\n          },\n          dragenter: function (b) {\n            return g(b), a.emit(\"dragenter\", b);\n          },\n          dragover: function (b) {\n            var c = void 0;\n\n            try {\n              c = b.dataTransfer.effectAllowed;\n            } catch (a) {}\n\n            return b.dataTransfer.dropEffect = \"move\" === c || \"linkMove\" === c ? \"move\" : \"copy\", g(b), a.emit(\"dragover\", b);\n          },\n          dragleave: function (b) {\n            return a.emit(\"dragleave\", b);\n          },\n          drop: function (b) {\n            return g(b), a.drop(b);\n          },\n          dragend: function (b) {\n            return a.emit(\"dragend\", b);\n          }\n        }\n      }], this.clickableElements.forEach(function (c) {\n        return a.listeners.push({\n          element: c,\n          events: {\n            click: function (d) {\n              return (c !== a.element || d.target === a.element || b.elementInside(d.target, a.element.querySelector(\".dz-message\"))) && a.hiddenFileInput.click(), !0;\n            }\n          }\n        });\n      }), this.enable(), this.options.init.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function () {\n      return this.disable(), this.removeAllFiles(!0), (null != this.hiddenFileInput ? this.hiddenFileInput.parentNode : void 0) && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null), delete this.element.dropzone, b.instances.splice(b.instances.indexOf(this), 1);\n    }\n  }, {\n    key: \"updateTotalUploadProgress\",\n    value: function () {\n      var a = void 0,\n          b = 0,\n          c = 0;\n\n      if (this.getActiveFiles().length) {\n        for (var d = this.getActiveFiles(), e = 0, d = d;;) {\n          var f;\n          if (e >= d.length) break;\n          f = d[e++];\n          var g = f;\n          b += g.upload.bytesSent, c += g.upload.total;\n        }\n\n        a = 100 * b / c;\n      } else a = 100;\n\n      return this.emit(\"totaluploadprogress\", a, c, b);\n    }\n  }, {\n    key: \"_getParamName\",\n    value: function (a) {\n      return \"function\" == typeof this.options.paramName ? this.options.paramName(a) : this.options.paramName + (this.options.uploadMultiple ? \"[\" + a + \"]\" : \"\");\n    }\n  }, {\n    key: \"_renameFile\",\n    value: function (a) {\n      return \"function\" != typeof this.options.renameFile ? a.name : this.options.renameFile(a);\n    }\n  }, {\n    key: \"getFallbackForm\",\n    value: function () {\n      var a = void 0,\n          c = void 0;\n      if (a = this.getExistingFallback()) return a;\n      var d = '<div class=\"dz-fallback\">';\n      this.options.dictFallbackText && (d += \"<p>\" + this.options.dictFallbackText + \"</p>\"), d += '<input type=\"file\" name=\"' + this._getParamName(0) + '\" ' + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + ' /><input type=\"submit\" value=\"Upload!\"></div>';\n      var e = b.createElement(d);\n      return \"FORM\" !== this.element.tagName ? (c = b.createElement('<form action=\"' + this.options.url + '\" enctype=\"multipart/form-data\" method=\"' + this.options.method + '\"></form>'), c.appendChild(e)) : (this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.setAttribute(\"method\", this.options.method)), null != c ? c : e;\n    }\n  }, {\n    key: \"getExistingFallback\",\n    value: function () {\n      for (var a = [\"div\", \"form\"], b = 0; b < a.length; b++) {\n        var c,\n            d = a[b];\n        if (c = function (a) {\n          for (var b = a, c = 0, b = b;;) {\n            var d;\n            if (c >= b.length) break;\n            d = b[c++];\n            var e = d;\n            if (/(^| )fallback($| )/.test(e.className)) return e;\n          }\n        }(this.element.getElementsByTagName(d))) return c;\n      }\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function () {\n      return this.listeners.map(function (a) {\n        return function () {\n          var b = [];\n\n          for (var c in a.events) {\n            var d = a.events[c];\n            b.push(a.element.addEventListener(c, d, !1));\n          }\n\n          return b;\n        }();\n      });\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function () {\n      return this.listeners.map(function (a) {\n        return function () {\n          var b = [];\n\n          for (var c in a.events) {\n            var d = a.events[c];\n            b.push(a.element.removeEventListener(c, d, !1));\n          }\n\n          return b;\n        }();\n      });\n    }\n  }, {\n    key: \"disable\",\n    value: function () {\n      var a = this;\n      return this.clickableElements.forEach(function (a) {\n        return a.classList.remove(\"dz-clickable\");\n      }), this.removeEventListeners(), this.disabled = !0, this.files.map(function (b) {\n        return a.cancelUpload(b);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      return delete this.disabled, this.clickableElements.forEach(function (a) {\n        return a.classList.add(\"dz-clickable\");\n      }), this.setupEventListeners();\n    }\n  }, {\n    key: \"filesize\",\n    value: function (a) {\n      var b = 0,\n          c = \"b\";\n\n      if (a > 0) {\n        for (var d = [\"tb\", \"gb\", \"mb\", \"kb\", \"b\"], e = 0; e < d.length; e++) {\n          var f = d[e];\n\n          if (a >= Math.pow(this.options.filesizeBase, 4 - e) / 10) {\n            b = a / Math.pow(this.options.filesizeBase, 4 - e), c = f;\n            break;\n          }\n        }\n\n        b = Math.round(10 * b) / 10;\n      }\n\n      return \"<strong>\" + b + \"</strong> \" + this.options.dictFileSizeUnits[c];\n    }\n  }, {\n    key: \"_updateMaxFilesReachedClass\",\n    value: function () {\n      return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit(\"maxfilesreached\", this.files), this.element.classList.add(\"dz-max-files-reached\")) : this.element.classList.remove(\"dz-max-files-reached\");\n    }\n  }, {\n    key: \"drop\",\n    value: function (a) {\n      if (a.dataTransfer) {\n        this.emit(\"drop\", a);\n\n        for (var b = [], c = 0; c < a.dataTransfer.files.length; c++) b[c] = a.dataTransfer.files[c];\n\n        if (this.emit(\"addedfiles\", b), b.length) {\n          var d = a.dataTransfer.items;\n          d && d.length && null != d[0].webkitGetAsEntry ? this._addFilesFromItems(d) : this.handleFiles(b);\n        }\n      }\n    }\n  }, {\n    key: \"paste\",\n    value: function (a) {\n      if (null != __guard__(null != a ? a.clipboardData : void 0, function (a) {\n        return a.items;\n      })) {\n        this.emit(\"paste\", a);\n        var b = a.clipboardData.items;\n        return b.length ? this._addFilesFromItems(b) : void 0;\n      }\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function (a) {\n      for (var b = a, c = 0, b = b;;) {\n        var d;\n        if (c >= b.length) break;\n        d = b[c++];\n        var e = d;\n        this.addFile(e);\n      }\n    }\n  }, {\n    key: \"_addFilesFromItems\",\n    value: function (a) {\n      var b = this;\n      return function () {\n        for (var c = [], d = a, e = 0, d = d;;) {\n          var f;\n          if (e >= d.length) break;\n          f = d[e++];\n          var g,\n              h = f;\n          null != h.webkitGetAsEntry && (g = h.webkitGetAsEntry()) ? g.isFile ? c.push(b.addFile(h.getAsFile())) : g.isDirectory ? c.push(b._addFilesFromDirectory(g, g.name)) : c.push(void 0) : null != h.getAsFile && (null == h.kind || \"file\" === h.kind) ? c.push(b.addFile(h.getAsFile())) : c.push(void 0);\n        }\n\n        return c;\n      }();\n    }\n  }, {\n    key: \"_addFilesFromDirectory\",\n    value: function (a, b) {\n      var c = this,\n          d = a.createReader(),\n          e = function (a) {\n        return __guardMethod__(console, \"log\", function (b) {\n          return b.log(a);\n        });\n      };\n\n      return function a() {\n        return d.readEntries(function (d) {\n          if (d.length > 0) {\n            for (var e = d, f = 0, e = e;;) {\n              var g;\n              if (f >= e.length) break;\n              g = e[f++];\n              var h = g;\n              h.isFile ? h.file(function (a) {\n                if (!c.options.ignoreHiddenFiles || \".\" !== a.name.substring(0, 1)) return a.fullPath = b + \"/\" + a.name, c.addFile(a);\n              }) : h.isDirectory && c._addFilesFromDirectory(h, b + \"/\" + h.name);\n            }\n\n            a();\n          }\n\n          return null;\n        }, e);\n      }();\n    }\n  }, {\n    key: \"accept\",\n    value: function (a, c) {\n      return this.options.maxFilesize && a.size > 1024 * this.options.maxFilesize * 1024 ? c(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(a.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize)) : b.isValidFile(a, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (c(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles)), this.emit(\"maxfilesexceeded\", a)) : this.options.accept.call(this, a, c) : c(this.options.dictInvalidFileType);\n    }\n  }, {\n    key: \"addFile\",\n    value: function (a) {\n      var c = this;\n      return a.upload = {\n        uuid: b.uuidv4(),\n        progress: 0,\n        total: a.size,\n        bytesSent: 0,\n        filename: this._renameFile(a),\n        chunked: this.options.chunking && (this.options.forceChunking || a.size > this.options.chunkSize),\n        totalChunkCount: Math.ceil(a.size / this.options.chunkSize)\n      }, this.files.push(a), a.status = b.ADDED, this.emit(\"addedfile\", a), this._enqueueThumbnail(a), this.accept(a, function (b) {\n        return b ? (a.accepted = !1, c._errorProcessing([a], b)) : (a.accepted = !0, c.options.autoQueue && c.enqueueFile(a)), c._updateMaxFilesReachedClass();\n      });\n    }\n  }, {\n    key: \"enqueueFiles\",\n    value: function (a) {\n      for (var b = a, c = 0, b = b;;) {\n        var d;\n        if (c >= b.length) break;\n        d = b[c++];\n        var e = d;\n        this.enqueueFile(e);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"enqueueFile\",\n    value: function (a) {\n      var c = this;\n      if (a.status !== b.ADDED || !0 !== a.accepted) throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      if (a.status = b.QUEUED, this.options.autoProcessQueue) return setTimeout(function () {\n        return c.processQueue();\n      }, 0);\n    }\n  }, {\n    key: \"_enqueueThumbnail\",\n    value: function (a) {\n      var b = this;\n      if (this.options.createImageThumbnails && a.type.match(/image.*/) && a.size <= 1024 * this.options.maxThumbnailFilesize * 1024) return this._thumbnailQueue.push(a), setTimeout(function () {\n        return b._processThumbnailQueue();\n      }, 0);\n    }\n  }, {\n    key: \"_processThumbnailQueue\",\n    value: function () {\n      var a = this;\n\n      if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) {\n        this._processingThumbnail = !0;\n\n        var b = this._thumbnailQueue.shift();\n\n        return this.createThumbnail(b, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, !0, function (c) {\n          return a.emit(\"thumbnail\", b, c), a._processingThumbnail = !1, a._processThumbnailQueue();\n        });\n      }\n    }\n  }, {\n    key: \"removeFile\",\n    value: function (a) {\n      if (a.status === b.UPLOADING && this.cancelUpload(a), this.files = without(this.files, a), this.emit(\"removedfile\", a), 0 === this.files.length) return this.emit(\"reset\");\n    }\n  }, {\n    key: \"removeAllFiles\",\n    value: function (a) {\n      null == a && (a = !1);\n\n      for (var c = this.files.slice(), d = 0, c = c;;) {\n        var e;\n        if (d >= c.length) break;\n        e = c[d++];\n        var f = e;\n        (f.status !== b.UPLOADING || a) && this.removeFile(f);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"resizeImage\",\n    value: function (a, c, d, e, f) {\n      var g = this;\n      return this.createThumbnail(a, c, d, e, !0, function (c, d) {\n        if (null == d) return f(a);\n        var e = g.options.resizeMimeType;\n        null == e && (e = a.type);\n        var h = d.toDataURL(e, g.options.resizeQuality);\n        return \"image/jpeg\" !== e && \"image/jpg\" !== e || (h = ExifRestore.restore(a.dataURL, h)), f(b.dataURItoBlob(h));\n      });\n    }\n  }, {\n    key: \"createThumbnail\",\n    value: function (a, b, c, d, e, f) {\n      var g = this,\n          h = new FileReader();\n      return h.onload = function () {\n        return a.dataURL = h.result, \"image/svg+xml\" === a.type ? void (null != f && f(h.result)) : g.createThumbnailFromUrl(a, b, c, d, e, f);\n      }, h.readAsDataURL(a);\n    }\n  }, {\n    key: \"createThumbnailFromUrl\",\n    value: function (a, b, c, d, e, f, g) {\n      var h = this,\n          i = document.createElement(\"img\");\n      return g && (i.crossOrigin = g), i.onload = function () {\n        var g = function (a) {\n          return a(1);\n        };\n\n        return \"undefined\" != typeof EXIF && null !== EXIF && e && (g = function (a) {\n          return EXIF.getData(i, function () {\n            return a(EXIF.getTag(this, \"Orientation\"));\n          });\n        }), g(function (e) {\n          a.width = i.width, a.height = i.height;\n          var g = h.options.resize.call(h, a, b, c, d),\n              j = document.createElement(\"canvas\"),\n              k = j.getContext(\"2d\");\n\n          switch (j.width = g.trgWidth, j.height = g.trgHeight, e > 4 && (j.width = g.trgHeight, j.height = g.trgWidth), e) {\n            case 2:\n              k.translate(j.width, 0), k.scale(-1, 1);\n              break;\n\n            case 3:\n              k.translate(j.width, j.height), k.rotate(Math.PI);\n              break;\n\n            case 4:\n              k.translate(0, j.height), k.scale(1, -1);\n              break;\n\n            case 5:\n              k.rotate(.5 * Math.PI), k.scale(1, -1);\n              break;\n\n            case 6:\n              k.rotate(.5 * Math.PI), k.translate(0, -j.width);\n              break;\n\n            case 7:\n              k.rotate(.5 * Math.PI), k.translate(j.height, -j.width), k.scale(-1, 1);\n              break;\n\n            case 8:\n              k.rotate(-.5 * Math.PI), k.translate(-j.height, 0);\n          }\n\n          drawImageIOSFix(k, i, null != g.srcX ? g.srcX : 0, null != g.srcY ? g.srcY : 0, g.srcWidth, g.srcHeight, null != g.trgX ? g.trgX : 0, null != g.trgY ? g.trgY : 0, g.trgWidth, g.trgHeight);\n          var l = j.toDataURL(\"image/png\");\n          if (null != f) return f(l, j);\n        });\n      }, null != f && (i.onerror = f), i.src = a.dataURL;\n    }\n  }, {\n    key: \"processQueue\",\n    value: function () {\n      var a = this.options.parallelUploads,\n          b = this.getUploadingFiles().length,\n          c = b;\n\n      if (!(b >= a)) {\n        var d = this.getQueuedFiles();\n\n        if (d.length > 0) {\n          if (this.options.uploadMultiple) return this.processFiles(d.slice(0, a - b));\n\n          for (; c < a;) {\n            if (!d.length) return;\n            this.processFile(d.shift()), c++;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"processFile\",\n    value: function (a) {\n      return this.processFiles([a]);\n    }\n  }, {\n    key: \"processFiles\",\n    value: function (a) {\n      for (var c = a, d = 0, c = c;;) {\n        var e;\n        if (d >= c.length) break;\n        e = c[d++];\n        var f = e;\n        f.processing = !0, f.status = b.UPLOADING, this.emit(\"processing\", f);\n      }\n\n      return this.options.uploadMultiple && this.emit(\"processingmultiple\", a), this.uploadFiles(a);\n    }\n  }, {\n    key: \"_getFilesWithXhr\",\n    value: function (a) {\n      return this.files.filter(function (b) {\n        return b.xhr === a;\n      }).map(function (a) {\n        return a;\n      });\n    }\n  }, {\n    key: \"cancelUpload\",\n    value: function (a) {\n      if (a.status === b.UPLOADING) {\n        for (var c = this._getFilesWithXhr(a.xhr), d = c, e = 0, d = d;;) {\n          var f;\n          if (e >= d.length) break;\n          f = d[e++];\n          f.status = b.CANCELED;\n        }\n\n        void 0 !== a.xhr && a.xhr.abort();\n\n        for (var g = c, h = 0, g = g;;) {\n          var i;\n          if (h >= g.length) break;\n          i = g[h++];\n          var j = i;\n          this.emit(\"canceled\", j);\n        }\n\n        this.options.uploadMultiple && this.emit(\"canceledmultiple\", c);\n      } else a.status !== b.ADDED && a.status !== b.QUEUED || (a.status = b.CANCELED, this.emit(\"canceled\", a), this.options.uploadMultiple && this.emit(\"canceledmultiple\", [a]));\n\n      if (this.options.autoProcessQueue) return this.processQueue();\n    }\n  }, {\n    key: \"resolveOption\",\n    value: function (a) {\n      if (\"function\" == typeof a) {\n        for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];\n\n        return a.apply(this, c);\n      }\n\n      return a;\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function (a) {\n      return this.uploadFiles([a]);\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function (a) {\n      var c = this;\n\n      this._transformFiles(a, function (d) {\n        if (a[0].upload.chunked) {\n          var e = a[0],\n              f = d[0],\n              g = 0;\n          e.upload.chunks = [];\n\n          var h = function () {\n            for (var d = 0; void 0 !== e.upload.chunks[d];) d++;\n\n            if (!(d >= e.upload.totalChunkCount)) {\n              g++;\n              var h = d * c.options.chunkSize,\n                  i = Math.min(h + c.options.chunkSize, e.size),\n                  j = {\n                name: c._getParamName(0),\n                data: f.webkitSlice ? f.webkitSlice(h, i) : f.slice(h, i),\n                filename: e.upload.filename,\n                chunkIndex: d\n              };\n              e.upload.chunks[d] = {\n                file: e,\n                index: d,\n                dataBlock: j,\n                status: b.UPLOADING,\n                progress: 0,\n                retries: 0\n              }, c._uploadData(a, [j]);\n            }\n          };\n\n          if (e.upload.finishedChunkUpload = function (d) {\n            var f = !0;\n            d.status = b.SUCCESS, d.dataBlock = null, d.xhr = null;\n\n            for (var g = 0; g < e.upload.totalChunkCount; g++) {\n              if (void 0 === e.upload.chunks[g]) return h();\n              e.upload.chunks[g].status !== b.SUCCESS && (f = !1);\n            }\n\n            f && c.options.chunksUploaded(e, function () {\n              c._finished(a, \"\", null);\n            });\n          }, c.options.parallelChunkUploads) for (var i = 0; i < e.upload.totalChunkCount; i++) h();else h();\n        } else {\n          for (var j = [], k = 0; k < a.length; k++) j[k] = {\n            name: c._getParamName(k),\n            data: d[k],\n            filename: a[k].upload.filename\n          };\n\n          c._uploadData(a, j);\n        }\n      });\n    }\n  }, {\n    key: \"_getChunk\",\n    value: function (a, b) {\n      for (var c = 0; c < a.upload.totalChunkCount; c++) if (void 0 !== a.upload.chunks[c] && a.upload.chunks[c].xhr === b) return a.upload.chunks[c];\n    }\n  }, {\n    key: \"_uploadData\",\n    value: function (a, c) {\n      for (var d = this, e = new XMLHttpRequest(), f = a, g = 0, f = f;;) {\n        var h;\n        if (g >= f.length) break;\n        h = f[g++];\n        h.xhr = e;\n      }\n\n      a[0].upload.chunked && (a[0].upload.chunks[c[0].chunkIndex].xhr = e);\n      var i = this.resolveOption(this.options.method, a),\n          j = this.resolveOption(this.options.url, a);\n      e.open(i, j, !0), e.timeout = this.resolveOption(this.options.timeout, a), e.withCredentials = !!this.options.withCredentials, e.onload = function (b) {\n        d._finishedUploading(a, e, b);\n      }, e.onerror = function () {\n        d._handleUploadError(a, e);\n      }, (null != e.upload ? e.upload : e).onprogress = function (b) {\n        return d._updateFilesUploadProgress(a, e, b);\n      };\n      var k = {\n        Accept: \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      this.options.headers && b.extend(k, this.options.headers);\n\n      for (var l in k) {\n        var m = k[l];\n        m && e.setRequestHeader(l, m);\n      }\n\n      var n = new FormData();\n\n      if (this.options.params) {\n        var o = this.options.params;\n        \"function\" == typeof o && (o = o.call(this, a, e, a[0].upload.chunked ? this._getChunk(a[0], e) : null));\n\n        for (var p in o) {\n          var q = o[p];\n          n.append(p, q);\n        }\n      }\n\n      for (var r = a, s = 0, r = r;;) {\n        var t;\n        if (s >= r.length) break;\n        t = r[s++];\n        var u = t;\n        this.emit(\"sending\", u, e, n);\n      }\n\n      this.options.uploadMultiple && this.emit(\"sendingmultiple\", a, e, n), this._addFormElementData(n);\n\n      for (var v = 0; v < c.length; v++) {\n        var w = c[v];\n        n.append(w.name, w.data, w.filename);\n      }\n\n      this.submitRequest(e, n, a);\n    }\n  }, {\n    key: \"_transformFiles\",\n    value: function (a, b) {\n      for (var c = this, d = [], e = 0, f = 0; f < a.length; f++) !function (f) {\n        c.options.transformFile.call(c, a[f], function (c) {\n          d[f] = c, ++e === a.length && b(d);\n        });\n      }(f);\n    }\n  }, {\n    key: \"_addFormElementData\",\n    value: function (a) {\n      if (\"FORM\" === this.element.tagName) for (var b = this.element.querySelectorAll(\"input, textarea, select, button\"), c = 0, b = b;;) {\n        var d;\n        if (c >= b.length) break;\n        d = b[c++];\n        var e = d,\n            f = e.getAttribute(\"name\"),\n            g = e.getAttribute(\"type\");\n        if (g && (g = g.toLowerCase()), void 0 !== f && null !== f) if (\"SELECT\" === e.tagName && e.hasAttribute(\"multiple\")) for (var h = e.options, i = 0, h = h;;) {\n          var j;\n          if (i >= h.length) break;\n          j = h[i++];\n          var k = j;\n          k.selected && a.append(f, k.value);\n        } else (!g || \"checkbox\" !== g && \"radio\" !== g || e.checked) && a.append(f, e.value);\n      }\n    }\n  }, {\n    key: \"_updateFilesUploadProgress\",\n    value: function (a, b, c) {\n      var d = void 0;\n\n      if (void 0 !== c) {\n        if (d = 100 * c.loaded / c.total, a[0].upload.chunked) {\n          var e = a[0],\n              f = this._getChunk(e, b);\n\n          f.progress = d, f.total = c.total, f.bytesSent = c.loaded;\n          e.upload.progress = 0, e.upload.total = 0, e.upload.bytesSent = 0;\n\n          for (var g = 0; g < e.upload.totalChunkCount; g++) void 0 !== e.upload.chunks[g] && void 0 !== e.upload.chunks[g].progress && (e.upload.progress += e.upload.chunks[g].progress, e.upload.total += e.upload.chunks[g].total, e.upload.bytesSent += e.upload.chunks[g].bytesSent);\n\n          e.upload.progress = e.upload.progress / e.upload.totalChunkCount;\n        } else for (var h = a, i = 0, h = h;;) {\n          var j;\n          if (i >= h.length) break;\n          j = h[i++];\n          var k = j;\n          k.upload.progress = d, k.upload.total = c.total, k.upload.bytesSent = c.loaded;\n        }\n\n        for (var l = a, m = 0, l = l;;) {\n          var n;\n          if (m >= l.length) break;\n          n = l[m++];\n          var o = n;\n          this.emit(\"uploadprogress\", o, o.upload.progress, o.upload.bytesSent);\n        }\n      } else {\n        var p = !0;\n        d = 100;\n\n        for (var q = a, r = 0, q = q;;) {\n          var s;\n          if (r >= q.length) break;\n          s = q[r++];\n          var t = s;\n          100 === t.upload.progress && t.upload.bytesSent === t.upload.total || (p = !1), t.upload.progress = d, t.upload.bytesSent = t.upload.total;\n        }\n\n        if (p) return;\n\n        for (var u = a, v = 0, u = u;;) {\n          var w;\n          if (v >= u.length) break;\n          w = u[v++];\n          var x = w;\n          this.emit(\"uploadprogress\", x, d, x.upload.bytesSent);\n        }\n      }\n    }\n  }, {\n    key: \"_finishedUploading\",\n    value: function (a, c, d) {\n      var e = void 0;\n\n      if (a[0].status !== b.CANCELED && 4 === c.readyState) {\n        if (\"arraybuffer\" !== c.responseType && \"blob\" !== c.responseType && (e = c.responseText, c.getResponseHeader(\"content-type\") && ~c.getResponseHeader(\"content-type\").indexOf(\"application/json\"))) try {\n          e = JSON.parse(e);\n        } catch (a) {\n          d = a, e = \"Invalid JSON response from server.\";\n        }\n        this._updateFilesUploadProgress(a), 200 <= c.status && c.status < 300 ? a[0].upload.chunked ? a[0].upload.finishedChunkUpload(this._getChunk(a[0], c)) : this._finished(a, e, d) : this._handleUploadError(a, c, e);\n      }\n    }\n  }, {\n    key: \"_handleUploadError\",\n    value: function (a, c, d) {\n      if (a[0].status !== b.CANCELED) {\n        if (a[0].upload.chunked && this.options.retryChunks) {\n          var e = this._getChunk(a[0], c);\n\n          if (e.retries++ < this.options.retryChunksLimit) return void this._uploadData(a, [e.dataBlock]);\n          console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n\n        for (var f = a, g = 0, f = f;;) {\n          if (g >= f.length) break;\n          f[g++];\n\n          this._errorProcessing(a, d || this.options.dictResponseError.replace(\"{{statusCode}}\", c.status), c);\n        }\n      }\n    }\n  }, {\n    key: \"submitRequest\",\n    value: function (a, b, c) {\n      a.send(b);\n    }\n  }, {\n    key: \"_finished\",\n    value: function (a, c, d) {\n      for (var e = a, f = 0, e = e;;) {\n        var g;\n        if (f >= e.length) break;\n        g = e[f++];\n        var h = g;\n        h.status = b.SUCCESS, this.emit(\"success\", h, c, d), this.emit(\"complete\", h);\n      }\n\n      if (this.options.uploadMultiple && (this.emit(\"successmultiple\", a, c, d), this.emit(\"completemultiple\", a)), this.options.autoProcessQueue) return this.processQueue();\n    }\n  }, {\n    key: \"_errorProcessing\",\n    value: function (a, c, d) {\n      for (var e = a, f = 0, e = e;;) {\n        var g;\n        if (f >= e.length) break;\n        g = e[f++];\n        var h = g;\n        h.status = b.ERROR, this.emit(\"error\", h, c, d), this.emit(\"complete\", h);\n      }\n\n      if (this.options.uploadMultiple && (this.emit(\"errormultiple\", a, c, d), this.emit(\"completemultiple\", a)), this.options.autoProcessQueue) return this.processQueue();\n    }\n  }], [{\n    key: \"uuidv4\",\n    value: function () {\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (a) {\n        var b = 16 * Math.random() | 0;\n        return (\"x\" === a ? b : 3 & b | 8).toString(16);\n      });\n    }\n  }]), b;\n}(Emitter);\n\nDropzone.initClass(), Dropzone.version = \"5.5.1\", Dropzone.options = {}, Dropzone.optionsForElement = function (a) {\n  return a.getAttribute(\"id\") ? Dropzone.options[camelize(a.getAttribute(\"id\"))] : void 0;\n}, Dropzone.instances = [], Dropzone.forElement = function (a) {\n  if (\"string\" == typeof a && (a = document.querySelector(a)), null == (null != a ? a.dropzone : void 0)) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n  return a.dropzone;\n}, Dropzone.autoDiscover = !0, Dropzone.discover = function () {\n  var a = void 0;\n  if (document.querySelectorAll) a = document.querySelectorAll(\".dropzone\");else {\n    a = [];\n\n    var b = function (b) {\n      return function () {\n        for (var c = [], d = b, e = 0, d = d;;) {\n          var f;\n          if (e >= d.length) break;\n          f = d[e++];\n          var g = f;\n          /(^| )dropzone($| )/.test(g.className) ? c.push(a.push(g)) : c.push(void 0);\n        }\n\n        return c;\n      }();\n    };\n\n    b(document.getElementsByTagName(\"div\")), b(document.getElementsByTagName(\"form\"));\n  }\n  return function () {\n    for (var b = [], c = a, d = 0, c = c;;) {\n      var e;\n      if (d >= c.length) break;\n      e = c[d++];\n      var f = e;\n      !1 !== Dropzone.optionsForElement(f) ? b.push(new Dropzone(f)) : b.push(void 0);\n    }\n\n    return b;\n  }();\n}, Dropzone.blacklistedBrowsers = [/opera.*(Macintosh|Windows Phone).*version\\/12/i], Dropzone.isBrowserSupported = function () {\n  var a = !0;\n  if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n    if (\"classList\" in document.createElement(\"a\")) for (var b = Dropzone.blacklistedBrowsers, c = 0, b = b;;) {\n      var d;\n      if (c >= b.length) break;\n      d = b[c++];\n      var e = d;\n      e.test(navigator.userAgent) && (a = !1);\n    } else a = !1;\n  } else a = !1;\n  return a;\n}, Dropzone.dataURItoBlob = function (a) {\n  for (var b = atob(a.split(\",\")[1]), c = a.split(\",\")[0].split(\":\")[1].split(\";\")[0], d = new ArrayBuffer(b.length), e = new Uint8Array(d), f = 0, g = b.length, h = 0 <= g; h ? f <= g : f >= g; h ? f++ : f--) e[f] = b.charCodeAt(f);\n\n  return new Blob([d], {\n    type: c\n  });\n};\n\nvar without = function (a, b) {\n  return a.filter(function (a) {\n    return a !== b;\n  }).map(function (a) {\n    return a;\n  });\n},\n    camelize = function (a) {\n  return a.replace(/[\\-_](\\w)/g, function (a) {\n    return a.charAt(1).toUpperCase();\n  });\n};\n\nDropzone.createElement = function (a) {\n  var b = document.createElement(\"div\");\n  return b.innerHTML = a, b.childNodes[0];\n}, Dropzone.elementInside = function (a, b) {\n  if (a === b) return !0;\n\n  for (; a = a.parentNode;) if (a === b) return !0;\n\n  return !1;\n}, Dropzone.getElement = function (a, b) {\n  var c = void 0;\n  if (\"string\" == typeof a ? c = document.querySelector(a) : null != a.nodeType && (c = a), null == c) throw new Error(\"Invalid `\" + b + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n  return c;\n}, Dropzone.getElements = function (a, b) {\n  var c = void 0,\n      d = void 0;\n\n  if (a instanceof Array) {\n    d = [];\n\n    try {\n      for (var e = a, f = 0, e = e; !(f >= e.length);) c = e[f++], d.push(this.getElement(c, b));\n    } catch (a) {\n      d = null;\n    }\n  } else if (\"string\" == typeof a) {\n    d = [];\n\n    for (var g = document.querySelectorAll(a), h = 0, g = g; !(h >= g.length);) c = g[h++], d.push(c);\n  } else null != a.nodeType && (d = [a]);\n\n  if (null == d || !d.length) throw new Error(\"Invalid `\" + b + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n  return d;\n}, Dropzone.confirm = function (a, b, c) {\n  return window.confirm(a) ? b() : null != c ? c() : void 0;\n}, Dropzone.isValidFile = function (a, b) {\n  if (!b) return !0;\n  b = b.split(\",\");\n\n  for (var c = a.type, d = c.replace(/\\/.*$/, \"\"), e = b, f = 0, e = e;;) {\n    var g;\n    if (f >= e.length) break;\n    g = e[f++];\n    var h = g;\n\n    if (h = h.trim(), \".\" === h.charAt(0)) {\n      if (-1 !== a.name.toLowerCase().indexOf(h.toLowerCase(), a.name.length - h.length)) return !0;\n    } else if (/\\/\\*$/.test(h)) {\n      if (d === h.replace(/\\/.*$/, \"\")) return !0;\n    } else if (c === h) return !0;\n  }\n\n  return !1;\n}, \"undefined\" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function (a) {\n  return this.each(function () {\n    return new Dropzone(this, a);\n  });\n}), \"undefined\" != typeof module && null !== module ? module.exports = Dropzone : window.Dropzone = Dropzone, Dropzone.ADDED = \"added\", Dropzone.QUEUED = \"queued\", Dropzone.ACCEPTED = Dropzone.QUEUED, Dropzone.UPLOADING = \"uploading\", Dropzone.PROCESSING = Dropzone.UPLOADING, Dropzone.CANCELED = \"canceled\", Dropzone.ERROR = \"error\", Dropzone.SUCCESS = \"success\";\n\nvar detectVerticalSquash = function (a) {\n  var b = (a.naturalWidth, a.naturalHeight),\n      c = document.createElement(\"canvas\");\n  c.width = 1, c.height = b;\n  var d = c.getContext(\"2d\");\n  d.drawImage(a, 0, 0);\n\n  for (var e = d.getImageData(1, 0, 1, b), f = e.data, g = 0, h = b, i = b; i > g;) {\n    0 === f[4 * (i - 1) + 3] ? h = i : g = i, i = h + g >> 1;\n  }\n\n  var j = i / b;\n  return 0 === j ? 1 : j;\n},\n    drawImageIOSFix = function (a, b, c, d, e, f, g, h, i, j) {\n  var k = detectVerticalSquash(b);\n  return a.drawImage(b, c, d, e, f, g, h, i, j / k);\n},\n    ExifRestore = function () {\n  function a() {\n    _classCallCheck(this, a);\n  }\n\n  return _createClass(a, null, [{\n    key: \"initClass\",\n    value: function () {\n      this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n  }, {\n    key: \"encode64\",\n    value: function (a) {\n      for (var b = \"\", c = void 0, d = void 0, e = \"\", f = void 0, g = void 0, h = void 0, i = \"\", j = 0;;) if (c = a[j++], d = a[j++], e = a[j++], f = c >> 2, g = (3 & c) << 4 | d >> 4, h = (15 & d) << 2 | e >> 6, i = 63 & e, isNaN(d) ? h = i = 64 : isNaN(e) && (i = 64), b = b + this.KEY_STR.charAt(f) + this.KEY_STR.charAt(g) + this.KEY_STR.charAt(h) + this.KEY_STR.charAt(i), c = d = e = \"\", f = g = h = i = \"\", !(j < a.length)) break;\n\n      return b;\n    }\n  }, {\n    key: \"restore\",\n    value: function (a, b) {\n      if (!a.match(\"data:image/jpeg;base64,\")) return b;\n      var c = this.decode64(a.replace(\"data:image/jpeg;base64,\", \"\")),\n          d = this.slice2Segments(c),\n          e = this.exifManipulation(b, d);\n      return \"data:image/jpeg;base64,\" + this.encode64(e);\n    }\n  }, {\n    key: \"exifManipulation\",\n    value: function (a, b) {\n      var c = this.getExifArray(b),\n          d = this.insertExif(a, c);\n      return new Uint8Array(d);\n    }\n  }, {\n    key: \"getExifArray\",\n    value: function (a) {\n      for (var b = void 0, c = 0; c < a.length;) {\n        if (b = a[c], 255 === b[0] & 225 === b[1]) return b;\n        c++;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"insertExif\",\n    value: function (a, b) {\n      var c = a.replace(\"data:image/jpeg;base64,\", \"\"),\n          d = this.decode64(c),\n          e = d.indexOf(255, 3),\n          f = d.slice(0, e),\n          g = d.slice(e),\n          h = f;\n      return h = h.concat(b), h = h.concat(g);\n    }\n  }, {\n    key: \"slice2Segments\",\n    value: function (a) {\n      for (var b = 0, c = [];;) {\n        var d;\n        if (255 === a[b] & 218 === a[b + 1]) break;\n        if (255 === a[b] & 216 === a[b + 1]) b += 2;else {\n          d = 256 * a[b + 2] + a[b + 3];\n          var e = b + d + 2,\n              f = a.slice(b, e);\n          c.push(f), b = e;\n        }\n        if (b > a.length) break;\n      }\n\n      return c;\n    }\n  }, {\n    key: \"decode64\",\n    value: function (a) {\n      var b = void 0,\n          c = void 0,\n          d = \"\",\n          e = void 0,\n          f = void 0,\n          g = void 0,\n          h = \"\",\n          i = 0,\n          j = [],\n          k = /[^A-Za-z0-9\\+\\/\\=]/g;\n\n      for (k.exec(a) && console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\"), a = a.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");;) if (e = this.KEY_STR.indexOf(a.charAt(i++)), f = this.KEY_STR.indexOf(a.charAt(i++)), g = this.KEY_STR.indexOf(a.charAt(i++)), h = this.KEY_STR.indexOf(a.charAt(i++)), b = e << 2 | f >> 4, c = (15 & f) << 4 | g >> 2, d = (3 & g) << 6 | h, j.push(b), 64 !== g && j.push(c), 64 !== h && j.push(d), b = c = d = \"\", e = f = g = h = \"\", !(i < a.length)) break;\n\n      return j;\n    }\n  }]), a;\n}();\n\nExifRestore.initClass();\n\nvar contentLoaded = function (a, b) {\n  var c = !1,\n      d = !0,\n      e = a.document,\n      f = e.documentElement,\n      g = e.addEventListener ? \"addEventListener\" : \"attachEvent\",\n      h = e.addEventListener ? \"removeEventListener\" : \"detachEvent\",\n      i = e.addEventListener ? \"\" : \"on\",\n      j = function d(f) {\n    if (\"readystatechange\" !== f.type || \"complete\" === e.readyState) return (\"load\" === f.type ? a : e)[h](i + f.type, d, !1), !c && (c = !0) ? b.call(a, f.type || f) : void 0;\n  };\n\n  if (\"complete\" !== e.readyState) {\n    if (e.createEventObject && f.doScroll) {\n      try {\n        d = !a.frameElement;\n      } catch (a) {}\n\n      d && function a() {\n        try {\n          f.doScroll(\"left\");\n        } catch (b) {\n          return void setTimeout(a, 50);\n        }\n\n        return j(\"poll\");\n      }();\n    }\n\n    return e[g](i + \"DOMContentLoaded\", j, !1), e[g](i + \"readystatechange\", j, !1), a[g](i + \"load\", j, !1);\n  }\n};\n\nDropzone._autoDiscoverFunction = function () {\n  if (Dropzone.autoDiscover) return Dropzone.discover();\n}, contentLoaded(window, Dropzone._autoDiscoverFunction);","map":null,"metadata":{},"sourceType":"script"}