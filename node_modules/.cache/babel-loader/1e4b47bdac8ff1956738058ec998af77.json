{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _sliderHelpers = require(\"../shared/sliderHelpers\");\n\nvar _utils = require(\"../shared/utils\");\n\nvar _constants = require(\"../shared/constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DaysList = function DaysList(_ref) {\n  var activeDate = _ref.activeDate,\n      monthChangeDirection = _ref.monthChangeDirection,\n      onSlideChange = _ref.onSlideChange,\n      isDayRange = _ref.isDayRange,\n      selectedDayRange = _ref.selectedDayRange,\n      disabledDays = _ref.disabledDays,\n      onDisabledDayError = _ref.onDisabledDayError,\n      selectedDay = _ref.selectedDay,\n      minimumDate = _ref.minimumDate,\n      maximumDate = _ref.maximumDate,\n      onChange = _ref.onChange,\n      calendarTodayClassName = _ref.calendarTodayClassName,\n      calendarSelectedDayClassName = _ref.calendarSelectedDayClassName,\n      calendarRangeStartClassName = _ref.calendarRangeStartClassName,\n      calendarRangeEndClassName = _ref.calendarRangeEndClassName,\n      calendarRangeBetweenClassName = _ref.calendarRangeBetweenClassName;\n  var calendarSectionWrapper = (0, _react.useRef)(null);\n  var today = (0, _react.useRef)((0, _utils.getToday)());\n  (0, _react.useEffect)(function () {\n    if (!monthChangeDirection) return;\n    (0, _sliderHelpers.animateContent)({\n      direction: monthChangeDirection,\n      parent: calendarSectionWrapper.current\n    });\n  }, [monthChangeDirection]);\n\n  var getDayRangeValue = function getDayRangeValue(day) {\n    var clonedDayRange = (0, _utils.deepCloneObject)(selectedDayRange);\n    var dayRangeValue = clonedDayRange.from && clonedDayRange.to ? {\n      from: null,\n      to: null\n    } : clonedDayRange;\n    var dayRangeProp = !dayRangeValue.from ? 'from' : 'to';\n    dayRangeValue[dayRangeProp] = day;\n    var from = dayRangeValue.from,\n        to = dayRangeValue.to; // swap from and to values if from is later than to\n\n    if ((0, _utils.isBeforeDate)(dayRangeValue.to, dayRangeValue.from)) {\n      dayRangeValue.from = to;\n      dayRangeValue.to = from;\n    }\n\n    var checkIncludingDisabledDay = function checkIncludingDisabledDay(disabledDay) {\n      return (0, _utils.checkDayInDayRange)({\n        day: disabledDay,\n        from: dayRangeValue.from,\n        to: dayRangeValue.to\n      });\n    };\n\n    var includingDisabledDay = disabledDays.find(checkIncludingDisabledDay);\n\n    if (includingDisabledDay) {\n      onDisabledDayError(includingDisabledDay);\n      return selectedDayRange;\n    }\n\n    return dayRangeValue;\n  };\n\n  var handleDayClick = function handleDayClick(day) {\n    var newDayValue = isDayRange ? getDayRangeValue(day) : day;\n    onChange(newDayValue);\n  };\n\n  var getDayClassNames = function getDayClassNames(dayItem) {\n    var isToday = (0, _utils.isSameDay)(dayItem, today.current);\n    var isSelected = selectedDay ? (0, _utils.isSameDay)(dayItem, selectedDay) : false;\n    var startingDay = selectedDayRange.from,\n        endingDay = selectedDayRange.to;\n    var isStartedDayRange = (0, _utils.isSameDay)(dayItem, startingDay);\n    var isEndingDayRange = (0, _utils.isSameDay)(dayItem, endingDay);\n    var isWithinRange = (0, _utils.checkDayInDayRange)({\n      day: dayItem,\n      from: startingDay,\n      to: endingDay\n    });\n    var classNames = ''.concat(isToday && !isSelected ? \" -today \".concat(calendarTodayClassName) : '').concat(!dayItem.isStandard ? ' -blank' : '').concat(isSelected ? \" -selected \".concat(calendarSelectedDayClassName) : '').concat(isStartedDayRange ? \" -selectedStart \".concat(calendarRangeStartClassName) : '').concat(isEndingDayRange ? \" -selectedEnd \".concat(calendarRangeEndClassName) : '').concat(isWithinRange ? \" -selectedBetween \".concat(calendarRangeBetweenClassName) : '').concat(dayItem.isDisabled ? '-disabled' : '');\n    return classNames;\n  };\n\n  var getViewMonthDays = function getViewMonthDays(date) {\n    var prependingBlankDays = (0, _utils.createUniqueRange)((0, _utils.getMonthFirstWeekday)(date), 'starting-blank'); // all months will have an additional 7 days(week) for rendering purpose\n\n    var appendingBlankDays = (0, _utils.createUniqueRange)(7 - (0, _utils.getMonthFirstWeekday)(date), 'ending-blank');\n    var standardDays = (0, _utils.createUniqueRange)((0, _utils.getMonthLength)(date)).map(function (day) {\n      return _objectSpread({}, day, {\n        isStandard: true,\n        month: date.month,\n        year: date.year\n      });\n    }, 'standard');\n    var allDays = prependingBlankDays.concat(standardDays, appendingBlankDays);\n    return allDays;\n  };\n\n  var renderMonthDays = function renderMonthDays(isInitialActiveChild) {\n    var date = (0, _sliderHelpers.getSlideDate)({\n      activeDate: activeDate,\n      isInitialActiveChild: isInitialActiveChild,\n      monthChangeDirection: monthChangeDirection,\n      parent: calendarSectionWrapper.current\n    });\n    var allDays = getViewMonthDays(date);\n    return allDays.map(function (_ref2) {\n      var id = _ref2.id,\n          day = _ref2.value,\n          month = _ref2.month,\n          year = _ref2.year,\n          isStandard = _ref2.isStandard;\n      var dayItem = {\n        day: day,\n        month: month,\n        year: year\n      };\n      var isInDisabledDaysRange = disabledDays.some(function (disabledDay) {\n        return (0, _utils.isSameDay)(dayItem, disabledDay);\n      });\n      var isBeforeMinimumDate = (0, _utils.isBeforeDate)(dayItem, minimumDate);\n      var isAfterMaximumDate = (0, _utils.isBeforeDate)(maximumDate, dayItem);\n      var isNotInValidRange = isStandard && (isBeforeMinimumDate || isAfterMaximumDate);\n      var isDisabled = isInDisabledDaysRange || isNotInValidRange;\n      var additionalClass = getDayClassNames(_objectSpread({}, dayItem, {\n        isStandard: isStandard,\n        isDisabled: isDisabled\n      }));\n      return _react[\"default\"].createElement(\"button\", {\n        tabIndex: \"-1\",\n        key: id,\n        className: \"Calendar__day \".concat(additionalClass),\n        onClick: function onClick() {\n          if (isDisabled) {\n            onDisabledDayError(dayItem); // good for showing error messages\n\n            return;\n          }\n\n          handleDayClick({\n            day: day,\n            month: month,\n            year: year\n          });\n        },\n        disabled: !isStandard,\n        type: \"button\"\n      }, (0, _utils.toPersianNumber)(day));\n    });\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    ref: calendarSectionWrapper,\n    className: \"Calendar__sectionWrapper\"\n  }, _react[\"default\"].createElement(\"div\", {\n    onAnimationEnd: function onAnimationEnd(e) {\n      (0, _sliderHelpers.handleSlideAnimationEnd)(e);\n      onSlideChange();\n    },\n    className: \"Calendar__section -shown\"\n  }, renderMonthDays(true)), _react[\"default\"].createElement(\"div\", {\n    onAnimationEnd: function onAnimationEnd(e) {\n      (0, _sliderHelpers.handleSlideAnimationEnd)(e);\n      onSlideChange();\n    },\n    className: \"Calendar__section -hiddenNext\"\n  }, renderMonthDays(false)));\n};\n\nDaysList.propTypes = {\n  onChange: _propTypes[\"default\"].func,\n  onDisabledDayError: _propTypes[\"default\"].func,\n  disabledDays: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape(_constants.DAY_SHAPE)),\n  calendarTodayClassName: _propTypes[\"default\"].string,\n  calendarSelectedDayClassName: _propTypes[\"default\"].string,\n  calendarRangeStartClassName: _propTypes[\"default\"].string,\n  calendarRangeBetweenClassName: _propTypes[\"default\"].string,\n  calendarRangeEndClassName: _propTypes[\"default\"].string\n};\nDaysList.defaultProps = {\n  onChange: function onChange() {},\n  onDisabledDayError: function onDisabledDayError() {},\n  disabledDays: [],\n  calendarTodayClassName: '',\n  calendarSelectedDayClassName: '',\n  calendarRangeStartClassName: '',\n  calendarRangeBetweenClassName: '',\n  calendarRangeEndClassName: ''\n};\nvar _default = DaysList;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}