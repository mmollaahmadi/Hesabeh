{"ast":null,"code":"import _defineProperty from \"/home/mohammad/Desktop/Hesabeh/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mohammad/Desktop/Hesabeh/src/components/common/selection-users/selection-users.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Row, Col, Button, Card, CardHeader, CardBody, Modal } from \"reactstrap\";\nimport GroupUnit from \"./group-unit\";\nimport UserUnit from \"./user-unit\";\nimport AOS from 'aos';\nimport { animateCSS } from \"../../../utils/animationUtils\";\nimport './selection-users.css';\nimport UserShare from \"../user-share/user-share\";\nimport { getUser } from \"../../../utils/apiUtils\";\n\nclass SelectionUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectUsersModal: false,\n      isStepOneInModal: true,\n      groups: [],\n      temporaryGroups: [],\n      // usersOfGroupsList: [],\n      // usersOfSelectedGroupsList: [],\n      //\n      // selectedUsers: [],\n      isAnyGroupSelected: false,\n      isAnyUserSelected: false,\n      isSelectedUser: false\n    };\n    this.handleBackOrNextStep = this.handleBackOrNextStep.bind(this);\n    this.myCallBack = this.myCallBack.bind(this);\n    this.updateSelectedGroupsList = this.updateSelectedGroupsList.bind(this);\n    this.updateSelectedUsersList = this.updateSelectedUsersList.bind(this); // this.updateUsersOfSelectedGroupsList = this.updateUsersOfSelectedGroupsList.bind(\n    //   this\n    // );\n\n    this.handleSelectUsers = this.handleSelectUsers.bind(this);\n    this.handleSelectAllConsumersOfGroups = this.handleSelectAllConsumersOfGroups.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateSelectedUserShare = this.updateSelectedUserShare.bind(this);\n    AOS.init();\n  }\n\n  handleBackOrNextStep() {\n    let fadeAnimation = \"fadeOut\";\n\n    if (this.state.isStepOneInModal) {\n      animateCSS(\".selectGroupCardHeader\", fadeAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeAnimation, this.myCallBack); // this.updateUsersOfSelectedGroupsList();\n    } else {\n      animateCSS(\".selectUsersCardHeader\", fadeAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeAnimation, this.myCallBack);\n    }\n  }\n\n  myCallBack() {\n    let fadeInAnimation = \"fadeIn\";\n\n    if (this.state.isStepOneInModal) {\n      this.setState({\n        isStepOneInModal: false\n      });\n      animateCSS(\".selectUsersCardHeader\", fadeInAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeInAnimation);\n    } else {\n      this.setState({\n        isStepOneInModal: true\n      });\n      animateCSS(\".selectGroupCardHeader\", fadeInAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeInAnimation);\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      selectUsersModal: !this.state.selectUsersModal\n    });\n  } // componentDidMount() {\n  // because the parent group change in componentDidUpdate this function do not work\n  // }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    //in real this will work once\n    let _groupsList = [];\n\n    if (prevProps.groups !== this.props.groups) {\n      this.props.groups.forEach(group => {\n        let usersList = [];\n        group.users.forEach(user => {\n          let u = getUser(user.id);\n          usersList.push(_objectSpread({}, u, {\n            checked: false,\n            selected: false,\n            shareNumber: 1,\n            shareTuman: 0\n          }));\n        });\n\n        _groupsList.push(_objectSpread({}, group, {\n          users: usersList,\n          checked: false\n        }));\n      });\n      this.setState({\n        groups: _groupsList,\n        temporaryGroups: _groupsList // doesReset: !this.props.doesReset,\n\n      });\n    } // control save check box\n\n\n    if (prevProps.selectedUsers !== this.props.selectedUsers) {\n      let _groups = [];\n      this.state.groups.forEach(group => {\n        let _users = [];\n        group.users.forEach(user => {\n          let flag = false;\n          this.props.selectedUsers.forEach(su => {\n            if (su.groupID === group.id && su.id === user.id) {\n              _users.push(su);\n\n              flag = true;\n            }\n          });\n\n          if (!flag) {\n            _users.push(_objectSpread({}, user, {\n              checked: false,\n              selected: false,\n              shareNumber: 1,\n              shareTuman: 0\n            }));\n          }\n        });\n\n        _groups.push(_objectSpread({}, group, {\n          users: _users\n        }));\n      });\n      this.setState({\n        groups: _groups,\n        temporaryGroups: _groups\n      });\n    }\n  }\n\n  handleSelectAllConsumersOfGroups() {\n    let selectedUsers = [];\n\n    if (this.state.isAnyGroupSelected) {\n      let _groupsList = this.state.temporaryGroups;\n\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.checked = group.checked;\n          user.selected = group.checked;\n          if (user.selected) selectedUsers.push(_objectSpread({}, user, {\n            groupID: group.id\n          }));\n        });\n      });\n\n      if (this.props.setUsers) {\n        this.props.setUsers(selectedUsers);\n      }\n\n      this.setState({\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  handleSelectUsers() {\n    let _selectedUsers = [];\n\n    if (this.state.isAnyGroupSelected && this.state.isAnyUserSelected) {\n      let _groupsList = this.state.temporaryGroups;\n\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.selected = user.checked;\n          if (user.selected) _selectedUsers.push(_objectSpread({}, user, {\n            groupID: group.id\n          }));\n        });\n      });\n\n      if (this.props.setUsers) {\n        this.props.setUsers(_selectedUsers);\n      }\n\n      this.setState({\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  updateSelectedGroupsList(id) {\n    let _groupsList = this.state.temporaryGroups;\n    let _isAnyGroupSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.id === id) {\n        group.checked = !group.checked;\n      }\n\n      if (group.checked) _isAnyGroupSelected = true;\n    });\n\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyGroupSelected: _isAnyGroupSelected\n    });\n  }\n\n  updateSelectedUsersList(id) {\n    let _groupsList = this.state.temporaryGroups;\n    let _isAnyUserSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        group.users.forEach(user => {\n          if (user.id === id) user.checked = !user.checked;\n          if (user.checked) _isAnyUserSelected = true;\n        });\n      }\n    });\n\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyUserSelected: _isAnyUserSelected\n    });\n  }\n\n  updateSelectedUserShare(groupID, userID, share) {\n    let _groupsList = [];\n    this.state.temporaryGroups.forEach(group => {\n      if (group.id === groupID) {\n        let usersList = [];\n        group.users.forEach(user => {\n          if (user.id === userID) {\n            // let u = getUser(user.id);\n            usersList.push(_objectSpread({}, user, {\n              shareNumber: share\n            }));\n          } else {\n            usersList.push(user);\n          }\n        });\n\n        _groupsList.push(_objectSpread({}, group, {\n          users: usersList\n        }));\n      } else {\n        _groupsList.push(group);\n      }\n    });\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyUserSelected: true // selectedUsers: this.props.selectedUsers,\n\n    });\n  } // updateUsersOfSelectedGroupsList() {\n  //\n  //   let _groups = [];\n  //   this.state.temporaryGroups.forEach(group => {\n  //     let _users = [];\n  //\n  //     if (group.checked) {\n  //       group.users.forEach(u => {\n  //         _users.push({\n  //           ...u,\n  //           checked: true,\n  //           selected: true,\n  //         });\n  //       });\n  //     } else {\n  //       _users = group.users;\n  //     }\n  //\n  //     _groups.push({\n  //       ...group,\n  //       users: _users\n  //     });\n  //   });\n  //   this.setState({\n  //     temporaryGroups: _groups\n  //   });\n  // }\n\n\n  render() {\n    let _groups = this.state.groups;\n    let groups = [];\n    let users = [];\n\n    _groups.forEach(group => {\n      groups.push(React.createElement(GroupUnit, {\n        group: group,\n        imageUri: require(\"../../../assets/img/theme/team-4-800x800.jpg\"),\n        updateSelectedGroupsList: this.updateSelectedGroupsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }));\n\n      if (group.checked) {\n        group.users.forEach(user => {\n          users.push(React.createElement(UserUnit, {\n            groupID: group.id,\n            user: user,\n            imageUri: require(\"../../../assets/img/theme/team-4-800x800.jpg\"),\n            hasShareInput: true,\n            updateSelectedUsersList: this.updateSelectedUsersList,\n            updateSelectedUserShare: this.updateSelectedUserShare,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          }));\n        });\n      }\n    });\n\n    let consumers = [];\n\n    if (this.state.groups) {\n      this.state.groups.forEach(group => {\n        group.users.forEach(user => {\n          if (user.selected) {\n            consumers.push(user);\n          }\n        });\n      });\n    }\n\n    return React.createElement(Col, {\n      lg: \"12\",\n      className: \"m-0 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"m-0 d-flex justify-content-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p-0 mx-3 my-auto consumers-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, this.props.title), React.createElement(UserShare, {\n      users: consumers,\n      suppliersOrConsumers: this.props.suppliersOrConsumers,\n      onlyAvatar: false,\n      deletable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"btn btn-icon payments-btn-lv2 mt-0 \".concat(this.props.suppliersOrConsumers === 'consumers' ? 'add-consumer-btn' : ''),\n      type: \"button\",\n      color: \"dark-green\",\n      onClick: () => this.toggleModal(\"consumersCollapse\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"btn-inner--icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      className: \"modal-dialog-centered\",\n      isOpen: this.state.selectUsersModal,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-muted  mt-3 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"selectGroupCardHeader my-modal-header \".concat(this.state.isStepOneInModal ? \"\" : \"d-none\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06AF\\u0631\\u0648\\u0647\"), React.createElement(\"h5\", {\n      className: \"selectUsersCardHeader my-modal-header \".concat(this.state.isStepOneInModal ? \"d-none\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u0627\\u0646\"))), React.createElement(CardBody, {\n      className: \"selectGroupCardBody px-lg-3 py-lg-3 \".concat(this.state.isStepOneInModal ? \"\" : \"d-none\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"groups m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, groups), React.createElement(Row, {\n      className: \"text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"tight-btn\" // className={'continueBtn profile-modal-btn'}\n      ,\n      color: \"primary\",\n      disabled: !this.state.isAnyGroupSelected,\n      onClick: this.handleBackOrNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"\\u0645\\u0631\\u062D\\u0644\\u0647 \\u0628\\u0639\\u062F\"), React.createElement(Button, {\n      className: \"tight-btn\" // className={'continueBtn profile-modal-btn'}\n      ,\n      color: \"primary\",\n      disabled: !this.state.isAnyGroupSelected,\n      onClick: this.handleSelectAllConsumersOfGroups,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"\\u0628\\u06CC\\u062E\\u06CC\\u0627\\u0644\")))), React.createElement(CardBody, {\n      className: \"selectUsersCardBody px-lg-3 py-lg-3 \".concat(this.state.isStepOneInModal ? \"d-none\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"groups m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, users), React.createElement(Row, {\n      className: \"text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"primary\",\n      disabled: !this.state.isAnyUserSelected,\n      onClick: this.handleSelectUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.handleBackOrNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, \"\\u0628\\u06CC\\u062E\\u06CC\\u0627\\u0644\")))))))));\n  }\n\n}\n\nexport default SelectionUsers;","map":{"version":3,"sources":["/home/mohammad/Desktop/Hesabeh/src/components/common/selection-users/selection-users.js"],"names":["React","Row","Col","Button","Card","CardHeader","CardBody","Modal","GroupUnit","UserUnit","AOS","animateCSS","UserShare","getUser","SelectionUsers","Component","constructor","props","state","selectUsersModal","isStepOneInModal","groups","temporaryGroups","isAnyGroupSelected","isAnyUserSelected","isSelectedUser","handleBackOrNextStep","bind","myCallBack","updateSelectedGroupsList","updateSelectedUsersList","handleSelectUsers","handleSelectAllConsumersOfGroups","toggleModal","updateSelectedUserShare","init","fadeAnimation","fadeInAnimation","setState","componentDidUpdate","prevProps","prevState","_groupsList","forEach","group","usersList","users","user","u","id","push","checked","selected","shareNumber","shareTuman","selectedUsers","_groups","_users","flag","su","groupID","setUsers","_selectedUsers","_isAnyGroupSelected","_isAnyUserSelected","userID","share","render","require","consumers","title","suppliersOrConsumers"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,KAPF,QAQO,YARP;AAUA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,OAAR,QAAsB,yBAAtB;;AAEA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,KADP;AAEXC,MAAAA,gBAAgB,EAAE,IAFP;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMX;AACA;AACA;AACA;AAEAC,MAAAA,kBAAkB,EAAE,KAXT;AAYXC,MAAAA,iBAAiB,EAAE,KAZR;AAaXC,MAAAA,cAAc,EAAE;AAbL,KAAb;AAgBA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BF,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKG,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BH,IAA7B,CAAkC,IAAlC,CAA/B,CAtBiB,CAuBjB;AACA;AACA;;AACA,SAAKI,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKK,gCAAL,GAAwC,KAAKA,gCAAL,CAAsCL,IAAtC,CAA2C,IAA3C,CAAxC;AACA,SAAKM,WAAL,GAAmB,KAAKA,WAAL,CAAiBN,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKO,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BP,IAA7B,CAAkC,IAAlC,CAA/B;AACAjB,IAAAA,GAAG,CAACyB,IAAJ;AAED;;AAEDT,EAAAA,oBAAoB,GAAG;AACrB,QAAIU,aAAa,GAAG,SAApB;;AACA,QAAI,KAAKlB,KAAL,CAAWE,gBAAf,EAAiC;AAC/BT,MAAAA,UAAU,CAAC,wBAAD,EAA2ByB,aAA3B,CAAV;AACAzB,MAAAA,UAAU,CAAC,sBAAD,EAAyByB,aAAzB,EAAwC,KAAKR,UAA7C,CAAV,CAF+B,CAG/B;AACD,KAJD,MAIO;AACLjB,MAAAA,UAAU,CAAC,wBAAD,EAA2ByB,aAA3B,CAAV;AACAzB,MAAAA,UAAU,CAAC,sBAAD,EAAyByB,aAAzB,EAAwC,KAAKR,UAA7C,CAAV;AACD;AACF;;AAEDA,EAAAA,UAAU,GAAG;AACX,QAAIS,eAAe,GAAG,QAAtB;;AACA,QAAI,KAAKnB,KAAL,CAAWE,gBAAf,EAAiC;AAC/B,WAAKkB,QAAL,CAAc;AACZlB,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGAT,MAAAA,UAAU,CAAC,wBAAD,EAA2B0B,eAA3B,CAAV;AACA1B,MAAAA,UAAU,CAAC,sBAAD,EAAyB0B,eAAzB,CAAV;AACD,KAND,MAMO;AACL,WAAKC,QAAL,CAAc;AACZlB,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAGAT,MAAAA,UAAU,CAAC,wBAAD,EAA2B0B,eAA3B,CAAV;AACA1B,MAAAA,UAAU,CAAC,sBAAD,EAAyB0B,eAAzB,CAAV;AACD;AACF;;AAEDJ,EAAAA,WAAW,GAAG;AACZ,SAAKK,QAAL,CAAc;AACZnB,MAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADlB,KAAd;AAGD,GApE0C,CAsE3C;AACA;AACA;;;AAEAoB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAIF,SAAS,CAACnB,MAAV,KAAqB,KAAKJ,KAAL,CAAWI,MAApC,EAA4C;AAC1C,WAAKJ,KAAL,CAAWI,MAAX,CAAkBsB,OAAlB,CAA0BC,KAAK,IAAI;AACjC,YAAIC,SAAS,GAAG,EAAhB;AACAD,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1B,cAAIC,CAAC,GAAGnC,OAAO,CAACkC,IAAI,CAACE,EAAN,CAAf;AACAJ,UAAAA,SAAS,CAACK,IAAV,mBACKF,CADL;AAEEG,YAAAA,OAAO,EAAE,KAFX;AAGEC,YAAAA,QAAQ,EAAE,KAHZ;AAIEC,YAAAA,WAAW,EAAE,CAJf;AAKEC,YAAAA,UAAU,EAAE;AALd;AAOD,SATD;;AAUAZ,QAAAA,WAAW,CAACQ,IAAZ,mBACKN,KADL;AAEEE,UAAAA,KAAK,EAAED,SAFT;AAGEM,UAAAA,OAAO,EAAE;AAHX;AAKD,OAjBD;AAmBA,WAAKb,QAAL,CAAc;AACZjB,QAAAA,MAAM,EAAEqB,WADI;AAEZpB,QAAAA,eAAe,EAAEoB,WAFL,CAGZ;;AAHY,OAAd;AAKD,KA5BsC,CA8BvC;;;AACA,QAAIF,SAAS,CAACe,aAAV,KAA4B,KAAKtC,KAAL,CAAWsC,aAA3C,EAA0D;AACxD,UAAIC,OAAO,GAAG,EAAd;AACA,WAAKtC,KAAL,CAAWG,MAAX,CAAkBsB,OAAlB,CAA0BC,KAAK,IAAI;AACjC,YAAIa,MAAM,GAAG,EAAb;AACAb,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAE1B,cAAIW,IAAI,GAAG,KAAX;AACA,eAAKzC,KAAL,CAAWsC,aAAX,CAAyBZ,OAAzB,CAAiCgB,EAAE,IAAI;AACrC,gBAAIA,EAAE,CAACC,OAAH,KAAehB,KAAK,CAACK,EAArB,IAA2BU,EAAE,CAACV,EAAH,KAAUF,IAAI,CAACE,EAA9C,EAAkD;AAChDQ,cAAAA,MAAM,CAACP,IAAP,CAAYS,EAAZ;;AACAD,cAAAA,IAAI,GAAG,IAAP;AACD;AACF,WALD;;AAOA,cAAI,CAACA,IAAL,EAAW;AACTD,YAAAA,MAAM,CAACP,IAAP,mBACKH,IADL;AAEEI,cAAAA,OAAO,EAAE,KAFX;AAGEC,cAAAA,QAAQ,EAAE,KAHZ;AAIEC,cAAAA,WAAW,EAAE,CAJf;AAKEC,cAAAA,UAAU,EAAE;AALd;AAOD;AAEF,SApBD;;AAqBAE,QAAAA,OAAO,CAACN,IAAR,mBACKN,KADL;AAEEE,UAAAA,KAAK,EAAEW;AAFT;AAID,OA3BD;AA4BA,WAAKnB,QAAL,CAAc;AACZjB,QAAAA,MAAM,EAAEmC,OADI;AAEZlC,QAAAA,eAAe,EAAEkC;AAFL,OAAd;AAID;AACF;;AAEDxB,EAAAA,gCAAgC,GAAG;AACjC,QAAIuB,aAAa,GAAG,EAApB;;AACA,QAAI,KAAKrC,KAAL,CAAWK,kBAAf,EAAmC;AACjC,UAAImB,WAAW,GAAG,KAAKxB,KAAL,CAAWI,eAA7B;;AACAoB,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AAC3BA,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1BA,UAAAA,IAAI,CAACI,OAAL,GAAeP,KAAK,CAACO,OAArB;AACAJ,UAAAA,IAAI,CAACK,QAAL,GAAgBR,KAAK,CAACO,OAAtB;AACA,cAAIJ,IAAI,CAACK,QAAT,EACEG,aAAa,CAACL,IAAd,mBACKH,IADL;AAEEa,YAAAA,OAAO,EAAEhB,KAAK,CAACK;AAFjB;AAIH,SARD;AASD,OAVD;;AAWA,UAAI,KAAKhC,KAAL,CAAW4C,QAAf,EAAyB;AACvB,aAAK5C,KAAL,CAAW4C,QAAX,CAAoBN,aAApB;AACD;;AACD,WAAKjB,QAAL,CAAc;AACZjB,QAAAA,MAAM,EAAEqB,WADI;AAEZjB,QAAAA,cAAc,EAAE,IAFJ;AAGZN,QAAAA,gBAAgB,EAAE;AAHN,OAAd;AAKD;AACF;;AAEDY,EAAAA,iBAAiB,GAAG;AAClB,QAAI+B,cAAc,GAAG,EAArB;;AACA,QAAI,KAAK5C,KAAL,CAAWK,kBAAX,IAAiC,KAAKL,KAAL,CAAWM,iBAAhD,EAAmE;AACjE,UAAIkB,WAAW,GAAG,KAAKxB,KAAL,CAAWI,eAA7B;;AACAoB,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AAC3BA,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1BA,UAAAA,IAAI,CAACK,QAAL,GAAgBL,IAAI,CAACI,OAArB;AACA,cAAIJ,IAAI,CAACK,QAAT,EACEU,cAAc,CAACZ,IAAf,mBACKH,IADL;AAEEa,YAAAA,OAAO,EAAEhB,KAAK,CAACK;AAFjB;AAIH,SAPD;AAQD,OATD;;AAUA,UAAI,KAAKhC,KAAL,CAAW4C,QAAf,EAAyB;AACvB,aAAK5C,KAAL,CAAW4C,QAAX,CAAoBC,cAApB;AACD;;AACD,WAAKxB,QAAL,CAAc;AACZjB,QAAAA,MAAM,EAAEqB,WADI;AAEZjB,QAAAA,cAAc,EAAE,IAFJ;AAGZN,QAAAA,gBAAgB,EAAE;AAHN,OAAd;AAKD;AACF;;AAEDU,EAAAA,wBAAwB,CAACoB,EAAD,EAAK;AAC3B,QAAIP,WAAW,GAAG,KAAKxB,KAAL,CAAWI,eAA7B;AACA,QAAIyC,mBAAmB,GAAG,KAA1B;;AAEArB,IAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AAC3B,UAAIA,KAAK,CAACK,EAAN,KAAaA,EAAjB,EAAqB;AACnBL,QAAAA,KAAK,CAACO,OAAN,GAAgB,CAACP,KAAK,CAACO,OAAvB;AACD;;AACD,UAAIP,KAAK,CAACO,OAAV,EACEY,mBAAmB,GAAG,IAAtB;AACH,KAND;;AAOA,SAAKzB,QAAL,CAAc;AACZhB,MAAAA,eAAe,EAAEoB,WADL;AAEZnB,MAAAA,kBAAkB,EAAEwC;AAFR,KAAd;AAID;;AAEDjC,EAAAA,uBAAuB,CAACmB,EAAD,EAAK;AAC1B,QAAIP,WAAW,GAAG,KAAKxB,KAAL,CAAWI,eAA7B;AACA,QAAI0C,kBAAkB,GAAG,KAAzB;;AAEAtB,IAAAA,WAAW,CAACC,OAAZ,CAAoBC,KAAK,IAAI;AAC3B,UAAIA,KAAK,CAACO,OAAV,EAAmB;AACjBP,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1B,cAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EACEF,IAAI,CAACI,OAAL,GAAe,CAACJ,IAAI,CAACI,OAArB;AAEF,cAAIJ,IAAI,CAACI,OAAT,EACEa,kBAAkB,GAAG,IAArB;AACH,SAND;AAOD;AACF,KAVD;;AAWA,SAAK1B,QAAL,CAAc;AACZhB,MAAAA,eAAe,EAAEoB,WADL;AAEZlB,MAAAA,iBAAiB,EAAEwC;AAFP,KAAd;AAID;;AAED9B,EAAAA,uBAAuB,CAAC0B,OAAD,EAAUK,MAAV,EAAkBC,KAAlB,EAAyB;AAC9C,QAAIxB,WAAW,GAAG,EAAlB;AAEA,SAAKxB,KAAL,CAAWI,eAAX,CAA2BqB,OAA3B,CAAmCC,KAAK,IAAI;AAE1C,UAAIA,KAAK,CAACK,EAAN,KAAaW,OAAjB,EAA0B;AAExB,YAAIf,SAAS,GAAG,EAAhB;AACAD,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1B,cAAIA,IAAI,CAACE,EAAL,KAAYgB,MAAhB,EAAwB;AACtB;AACApB,YAAAA,SAAS,CAACK,IAAV,mBACKH,IADL;AAEEM,cAAAA,WAAW,EAAEa;AAFf;AAID,WAND,MAMO;AACLrB,YAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACD;AACF,SAVD;;AAWAL,QAAAA,WAAW,CAACQ,IAAZ,mBACKN,KADL;AAEEE,UAAAA,KAAK,EAAED;AAFT;AAID,OAlBD,MAkBO;AACLH,QAAAA,WAAW,CAACQ,IAAZ,CAAiBN,KAAjB;AACD;AAEF,KAxBD;AA0BA,SAAKN,QAAL,CAAc;AACZhB,MAAAA,eAAe,EAAEoB,WADL;AAEZlB,MAAAA,iBAAiB,EAAE,IAFP,CAGZ;;AAHY,KAAd;AAKD,GAzQ0C,CA2Q3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA2C,EAAAA,MAAM,GAAG;AACP,QAAIX,OAAO,GAAG,KAAKtC,KAAL,CAAWG,MAAzB;AACA,QAAIA,MAAM,GAAG,EAAb;AACA,QAAIyB,KAAK,GAAG,EAAZ;;AACAU,IAAAA,OAAO,CAACb,OAAR,CAAgBC,KAAK,IAAI;AACvBvB,MAAAA,MAAM,CAAC6B,IAAP,CACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEN,KADT;AAEE,QAAA,QAAQ,EAAEwB,OAAO,CAAC,8CAAD,CAFnB;AAGE,QAAA,wBAAwB,EAAE,KAAKvC,wBAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,UAAIe,KAAK,CAACO,OAAV,EAAmB;AACjBP,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1BD,UAAAA,KAAK,CAACI,IAAN,CACE,oBAAC,QAAD;AACE,YAAA,OAAO,EAAEN,KAAK,CAACK,EADjB;AAEE,YAAA,IAAI,EAAEF,IAFR;AAGE,YAAA,QAAQ,EAAEqB,OAAO,CAAC,8CAAD,CAHnB;AAKE,YAAA,aAAa,EAAE,IALjB;AAOE,YAAA,uBAAuB,EAAE,KAAKtC,uBAPhC;AAQE,YAAA,uBAAuB,EAAE,KAAKI,uBARhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,SAbD;AAcD;AACF,KAxBD;;AAyBA,QAAImC,SAAS,GAAG,EAAhB;;AACA,QAAI,KAAKnD,KAAL,CAAWG,MAAf,EAAuB;AACrB,WAAKH,KAAL,CAAWG,MAAX,CAAkBsB,OAAlB,CAA0BC,KAAK,IAAI;AACjCA,QAAAA,KAAK,CAACE,KAAN,CAAYH,OAAZ,CAAoBI,IAAI,IAAI;AAC1B,cAAIA,IAAI,CAACK,QAAT,EAAmB;AACjBiB,YAAAA,SAAS,CAACnB,IAAV,CAAeH,IAAf;AACD;AACF,SAJD;AAKD,OAND;AAOD;;AAED,WACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9B,KAAL,CAAWqD,KADd,CADF,EAIE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAED,SADT;AAEE,MAAA,oBAAoB,EAAE,KAAKpD,KAAL,CAAWsD,oBAFnC;AAGE,MAAA,UAAU,EAAE,KAHd;AAIE,MAAA,SAAS,EAAE,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAUE,oBAAC,MAAD;AACE,MAAA,SAAS,+CAAwC,KAAKtD,KAAL,CAAWsD,oBAAX,KAAoC,WAApC,GAAkD,kBAAlD,GAAuE,EAA/G,CADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,OAAO,EAAE,MACP,KAAKtC,WAAL,CAAiB,mBAAjB,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CAVF,EAwBE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,gBAFrB;AAGE,MAAA,MAAM,EAAE,KAAKc,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,kDACP,KAAKf,KAAL,CAAWE,gBAAX,GAA8B,EAA9B,GAAmC,QAD5B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,EAQE;AACE,MAAA,SAAS,kDACP,KAAKF,KAAL,CAAWE,gBAAX,GAA8B,QAA9B,GAAyC,EADlC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFARF,CAFF,CADF,EAqBE,oBAAC,QAAD;AACE,MAAA,SAAS,gDACP,KAAKF,KAAL,CAAWE,gBAAX,GAA8B,EAA9B,GAAmC,QAD5B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BC,MAA/B,CALF,EAME,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ,CAEE;AAFF;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EACN,CAAC,KAAKH,KAAL,CAAWK,kBALhB;AAOE,MAAA,OAAO,EAAE,KAAKG,oBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADF,EAYE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ,CAEE;AAFF;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EACN,CAAC,KAAKR,KAAL,CAAWK,kBALhB;AAOE,MAAA,OAAO,EAAE,KAAKS,gCAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAZF,EAuBE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAvBF,CADF,CANF,CArBF,EA6DE,oBAAC,QAAD;AACE,MAAA,SAAS,gDACP,KAAKf,KAAL,CAAWE,gBAAX,GAA8B,QAA9B,GAAyC,EADlC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B0B,KAA/B,CALF,EAME,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAE,CAAC,KAAK5B,KAAL,CAAWM,iBAHxB;AAIE,MAAA,OAAO,EAAE,KAAKO,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EASE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,KAAKL,oBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CATF,EAgBE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,KAAKO,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAhBF,CADF,CANF,CA7DF,CADF,CALF,CAxBF,CADF,CADF;AAoID;;AAnd0C;;AAsd7C,eAAenB,cAAf","sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Modal\n} from \"reactstrap\";\n\nimport GroupUnit from \"./group-unit\";\nimport UserUnit from \"./user-unit\";\nimport AOS from 'aos'\nimport {animateCSS} from \"../../../utils/animationUtils\";\nimport './selection-users.css'\nimport UserShare from \"../user-share/user-share\";\nimport {getUser} from \"../../../utils/apiUtils\";\n\nclass SelectionUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectUsersModal: false,\n      isStepOneInModal: true,\n\n      groups: [],\n      temporaryGroups: [],\n      // usersOfGroupsList: [],\n      // usersOfSelectedGroupsList: [],\n      //\n      // selectedUsers: [],\n\n      isAnyGroupSelected: false,\n      isAnyUserSelected: false,\n      isSelectedUser: false,\n    };\n\n    this.handleBackOrNextStep = this.handleBackOrNextStep.bind(this);\n    this.myCallBack = this.myCallBack.bind(this);\n    this.updateSelectedGroupsList = this.updateSelectedGroupsList.bind(this);\n    this.updateSelectedUsersList = this.updateSelectedUsersList.bind(this);\n    // this.updateUsersOfSelectedGroupsList = this.updateUsersOfSelectedGroupsList.bind(\n    //   this\n    // );\n    this.handleSelectUsers = this.handleSelectUsers.bind(this);\n    this.handleSelectAllConsumersOfGroups = this.handleSelectAllConsumersOfGroups.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateSelectedUserShare = this.updateSelectedUserShare.bind(this);\n    AOS.init();\n\n  }\n\n  handleBackOrNextStep() {\n    let fadeAnimation = \"fadeOut\";\n    if (this.state.isStepOneInModal) {\n      animateCSS(\".selectGroupCardHeader\", fadeAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeAnimation, this.myCallBack);\n      // this.updateUsersOfSelectedGroupsList();\n    } else {\n      animateCSS(\".selectUsersCardHeader\", fadeAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeAnimation, this.myCallBack);\n    }\n  }\n\n  myCallBack() {\n    let fadeInAnimation = \"fadeIn\";\n    if (this.state.isStepOneInModal) {\n      this.setState({\n        isStepOneInModal: false\n      });\n      animateCSS(\".selectUsersCardHeader\", fadeInAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeInAnimation);\n    } else {\n      this.setState({\n        isStepOneInModal: true\n      });\n      animateCSS(\".selectGroupCardHeader\", fadeInAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeInAnimation);\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      selectUsersModal: !this.state.selectUsersModal,\n    });\n  }\n\n  // componentDidMount() {\n  // because the parent group change in componentDidUpdate this function do not work\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    //in real this will work once\n    let _groupsList = [];\n    if (prevProps.groups !== this.props.groups) {\n      this.props.groups.forEach(group => {\n        let usersList = [];\n        group.users.forEach(user => {\n          let u = getUser(user.id);\n          usersList.push({\n            ...u,\n            checked: false,\n            selected: false,\n            shareNumber: 1,\n            shareTuman: 0,\n          });\n        });\n        _groupsList.push({\n          ...group,\n          users: usersList,\n          checked: false\n        });\n      });\n\n      this.setState({\n        groups: _groupsList,\n        temporaryGroups: _groupsList,\n        // doesReset: !this.props.doesReset,\n      });\n    }\n\n    // control save check box\n    if (prevProps.selectedUsers !== this.props.selectedUsers) {\n      let _groups = [];\n      this.state.groups.forEach(group => {\n        let _users = [];\n        group.users.forEach(user => {\n\n          let flag = false;\n          this.props.selectedUsers.forEach(su => {\n            if (su.groupID === group.id && su.id === user.id) {\n              _users.push(su);\n              flag = true;\n            }\n          });\n\n          if (!flag) {\n            _users.push({\n              ...user,\n              checked: false,\n              selected: false,\n              shareNumber: 1,\n              shareTuman: 0,\n            });\n          }\n\n        });\n        _groups.push({\n          ...group,\n          users: _users,\n        });\n      });\n      this.setState({\n        groups: _groups,\n        temporaryGroups: _groups,\n      });\n    }\n  }\n\n  handleSelectAllConsumersOfGroups() {\n    let selectedUsers = [];\n    if (this.state.isAnyGroupSelected) {\n      let _groupsList = this.state.temporaryGroups;\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.checked = group.checked;\n          user.selected = group.checked;\n          if (user.selected)\n            selectedUsers.push({\n              ...user,\n              groupID: group.id,\n            });\n        });\n      });\n      if (this.props.setUsers) {\n        this.props.setUsers(selectedUsers);\n      }\n      this.setState({\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  handleSelectUsers() {\n    let _selectedUsers = [];\n    if (this.state.isAnyGroupSelected && this.state.isAnyUserSelected) {\n      let _groupsList = this.state.temporaryGroups;\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.selected = user.checked;\n          if (user.selected)\n            _selectedUsers.push({\n              ...user,\n              groupID: group.id,\n            });\n        });\n      });\n      if (this.props.setUsers) {\n        this.props.setUsers(_selectedUsers);\n      }\n      this.setState({\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  updateSelectedGroupsList(id) {\n    let _groupsList = this.state.temporaryGroups;\n    let _isAnyGroupSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.id === id) {\n        group.checked = !group.checked;\n      }\n      if (group.checked)\n        _isAnyGroupSelected = true;\n    });\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyGroupSelected: _isAnyGroupSelected\n    });\n  }\n\n  updateSelectedUsersList(id) {\n    let _groupsList = this.state.temporaryGroups;\n    let _isAnyUserSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        group.users.forEach(user => {\n          if (user.id === id)\n            user.checked = !user.checked;\n\n          if (user.checked)\n            _isAnyUserSelected = true;\n        });\n      }\n    });\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyUserSelected: _isAnyUserSelected\n    });\n  }\n\n  updateSelectedUserShare(groupID, userID, share) {\n    let _groupsList = [];\n\n    this.state.temporaryGroups.forEach(group => {\n\n      if (group.id === groupID) {\n\n        let usersList = [];\n        group.users.forEach(user => {\n          if (user.id === userID) {\n            // let u = getUser(user.id);\n            usersList.push({\n              ...user,\n              shareNumber: share,\n            });\n          } else {\n            usersList.push(user);\n          }\n        });\n        _groupsList.push({\n          ...group,\n          users: usersList,\n        });\n      } else {\n        _groupsList.push(group);\n      }\n\n    });\n\n    this.setState({\n      temporaryGroups: _groupsList,\n      isAnyUserSelected: true,\n      // selectedUsers: this.props.selectedUsers,\n    });\n  }\n\n  // updateUsersOfSelectedGroupsList() {\n  //\n  //   let _groups = [];\n  //   this.state.temporaryGroups.forEach(group => {\n  //     let _users = [];\n  //\n  //     if (group.checked) {\n  //       group.users.forEach(u => {\n  //         _users.push({\n  //           ...u,\n  //           checked: true,\n  //           selected: true,\n  //         });\n  //       });\n  //     } else {\n  //       _users = group.users;\n  //     }\n  //\n  //     _groups.push({\n  //       ...group,\n  //       users: _users\n  //     });\n  //   });\n  //   this.setState({\n  //     temporaryGroups: _groups\n  //   });\n  // }\n\n  render() {\n    let _groups = this.state.groups;\n    let groups = [];\n    let users = [];\n    _groups.forEach(group => {\n      groups.push(\n        <GroupUnit\n          group={group}\n          imageUri={require(\"../../../assets/img/theme/team-4-800x800.jpg\")}\n          updateSelectedGroupsList={this.updateSelectedGroupsList}\n        />\n      );\n      if (group.checked) {\n        group.users.forEach(user => {\n          users.push(\n            <UserUnit\n              groupID={group.id}\n              user={user}\n              imageUri={require(\"../../../assets/img/theme/team-4-800x800.jpg\")}\n\n              hasShareInput={true}\n\n              updateSelectedUsersList={this.updateSelectedUsersList}\n              updateSelectedUserShare={this.updateSelectedUserShare}\n            />\n          );\n        });\n      }\n    });\n    let consumers = [];\n    if (this.state.groups) {\n      this.state.groups.forEach(group => {\n        group.users.forEach(user => {\n          if (user.selected) {\n            consumers.push(user);\n          }\n        });\n      });\n    }\n\n    return (\n      <Col lg=\"12\" className=\"m-0 mt-3\">\n        <Row className=\"m-0 d-flex justify-content-right\">\n          <p className=\"p-0 mx-3 my-auto consumers-text\">\n            {this.props.title}\n          </p>\n          <UserShare\n            users={consumers}\n            suppliersOrConsumers={this.props.suppliersOrConsumers}\n            onlyAvatar={false}\n            deletable={true}\n          />\n          <Button\n            className={`btn btn-icon payments-btn-lv2 mt-0 ${this.props.suppliersOrConsumers === 'consumers' ? 'add-consumer-btn' : ''}`}\n            type=\"button\"\n            color=\"dark-green\"\n            onClick={() =>\n              this.toggleModal(\"consumersCollapse\")\n            }\n          >\n            <span className=\"btn-inner--icon\">\n              <i className=\"fa fa-user-plus\"/>\n            </span>\n            {/*<span className=\"btn-inner--text\">مصرف کنندگان</span>*/}\n          </Button>\n\n          <Modal\n            className=\"modal-dialog-centered\"\n            isOpen={this.state.selectUsersModal}\n            toggle={this.toggleModal}\n          >\n            <div className=\"modal-body p-0\">\n              <Card className=\"bg-secondary shadow border-0\">\n                <CardHeader className=\"bg-transparent p-1\">\n                  {/* <Row className=\"justify-content-center\"> */}\n                  <div className=\"text-muted  mt-3 mb-2\">\n                    <h5\n                      className={`selectGroupCardHeader my-modal-header ${\n                        this.state.isStepOneInModal ? \"\" : \"d-none\"\n                      }`}\n                    >\n                      انتخاب گروه\n                    </h5>\n                    <h5\n                      className={`selectUsersCardHeader my-modal-header ${\n                        this.state.isStepOneInModal ? \"d-none\" : \"\"\n                      }`}\n                    >\n                      انتخاب کاربران\n                    </h5>\n                  </div>\n                  {/* </Row> */}\n                </CardHeader>\n                <CardBody\n                  className={`selectGroupCardBody px-lg-3 py-lg-3 ${\n                    this.state.isStepOneInModal ? \"\" : \"d-none\"\n                  }`}\n                >\n                  <Row className={\"groups m-0\"}>{groups}</Row>\n                  <Row className=\"text-center my-4\">\n                    <Col>\n                      <Button\n                        className=\"tight-btn\"\n                        // className={'continueBtn profile-modal-btn'}\n                        color=\"primary\"\n                        disabled={\n                          !this.state.isAnyGroupSelected\n                        }\n                        onClick={this.handleBackOrNextStep}\n                      >\n                        مرحله بعد\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        // className={'continueBtn profile-modal-btn'}\n                        color=\"primary\"\n                        disabled={\n                          !this.state.isAnyGroupSelected\n                        }\n                        onClick={this.handleSelectAllConsumersOfGroups}\n                      >\n                        انتخاب\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.toggleModal}\n                      >\n                        بیخیال\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardBody\n                  className={`selectUsersCardBody px-lg-3 py-lg-3 ${\n                    this.state.isStepOneInModal ? \"d-none\" : \"\"\n                  }`}\n                >\n                  <Row className={\"groups m-0\"}>{users}</Row>\n                  <Row className=\"text-center my-4\">\n                    <Col>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"primary\"\n                        disabled={!this.state.isAnyUserSelected}\n                        onClick={this.handleSelectUsers}\n                      >\n                        انتخاب\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.handleBackOrNextStep}\n                      >\n                        بازگشت\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.toggleModal}\n                      >\n                        بیخیال\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Modal>\n        </Row>\n      </Col>\n    );\n  }\n}\n\nexport default SelectionUsers;\n"]},"metadata":{},"sourceType":"module"}