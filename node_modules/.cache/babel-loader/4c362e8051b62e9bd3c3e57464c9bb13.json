{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/Hesabeh/src/components/common/selection-labels/selection-labels.js\";\nimport React from 'react';\nimport { Badge, Col, Row } from \"reactstrap\";\nexport default class SelectionLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLabelsIDS: []\n    };\n    this.selectLabel = this.selectLabel.bind(this);\n    this.handleDeleteLabel = this.handleDeleteLabel.bind(this);\n  }\n\n  selectLabel(id) {\n    let isSelectedBefore = false;\n\n    if (this.state.selectedLabelsIDS) {\n      this.state.selectedLabelsIDS.forEach(labelID => {\n        if (labelID === id) isSelectedBefore = true;\n      });\n\n      if (!isSelectedBefore) {\n        let labels = this.state.selectedLabelsIDS;\n        labels.push(id);\n        this.setState({\n          selectedLabelsIDS: labels\n        });\n      }\n    }\n  }\n\n  handleDeleteLabel(id) {\n    let labels = this.state.selectedLabelsIDS;\n    labels.filter(function (label) {\n      return label !== id;\n    });\n    this.setState({});\n  }\n\n  render() {\n    let labels = [];\n\n    if (this.props.currentUser.labels) {\n      this.props.currentUser.labels.forEach(label => {\n        labels.push(React.createElement(Badge, {\n          style: {\n            background: \"rgba(\".concat(label.color.r, \",\").concat(label.color.g, \",\").concat(label.color.b, \",\").concat(label.color.a, \")\"),\n            color: \"\".concat(label.isTextColorDark ? 'rgb(0,0,0,1)' : 'rgb(255,255,255,1)')\n          },\n          color: \"primary\",\n          className: \"profile-label align-self-center px-2\",\n          onClick: () => this.selectLabel(label.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, label.name, React.createElement(\"i\", {\n          className: \"fa fa-close mr-3 profile-label-close-btn \".concat(!this.props.hasClose ? 'd-none' : ''),\n          onClick: () => this.handleDeleteLabel(label.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        })));\n      });\n    }\n\n    return React.createElement(Col, {\n      lg: \"12\",\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"m-0 d-flex justify-content-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p-0 mx-3 my-auto consumers-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.title), labels));\n  }\n\n}","map":{"version":3,"sources":["/home/mohammad/Desktop/Hesabeh/src/components/common/selection-labels/selection-labels.js"],"names":["React","Badge","Col","Row","SelectionLabels","Component","constructor","props","state","selectedLabelsIDS","selectLabel","bind","handleDeleteLabel","id","isSelectedBefore","forEach","labelID","labels","push","setState","filter","label","render","currentUser","background","color","r","g","b","a","isTextColorDark","name","hasClose","title"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Badge, Col, Row} from \"reactstrap\";\n\nexport default class SelectionLabels extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      selectedLabelsIDS:[],\n    };\n    this.selectLabel=this.selectLabel.bind(this);\n    this.handleDeleteLabel = this.handleDeleteLabel.bind(this);\n  }\n  selectLabel(id){\n    let isSelectedBefore = false;\n    if(this.state.selectedLabelsIDS){\n      this.state.selectedLabelsIDS.forEach(labelID => {\n        if(labelID === id)\n          isSelectedBefore=true;\n      });\n      if(!isSelectedBefore){\n        let labels = this.state.selectedLabelsIDS;\n        labels.push(id);\n        this.setState({selectedLabelsIDS: labels});\n      }\n    }\n  }\n  handleDeleteLabel(id){\n    let labels = this.state.selectedLabelsIDS;\n    labels.filter(function (label) {\n      return label !== id;\n    })\n    this.setState({});\n  }\n  render() {\n    let labels = [];\n    if (this.props.currentUser.labels) {\n      this.props.currentUser.labels.forEach(label => {\n        labels.push(\n          <Badge\n            style={{\n              background: `rgba(${label.color.r},${label.color.g},${label.color.b},${label.color.a})`,\n              color: `${label.isTextColorDark ? 'rgb(0,0,0,1)' : 'rgb(255,255,255,1)'}`\n            }}\n            color=\"primary\"\n            className=\"profile-label align-self-center px-2\"\n            onClick={() => this.selectLabel(label.id)}\n          >\n            {label.name}\n            <i className={`fa fa-close mr-3 profile-label-close-btn ${!this.props.hasClose ? 'd-none' : ''}`}\n              onClick={() => this.handleDeleteLabel(label.id)}\n            />\n          </Badge>\n        );\n      });\n    }\n    return (\n      <Col lg=\"12\" className=\"m-0\">\n        <Row className=\"m-0 d-flex justify-content-right\">\n          <p className=\"p-0 mx-3 my-auto consumers-text\">\n            {this.props.title}\n          </p>\n          {labels}\n        </Row>\n      </Col>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}