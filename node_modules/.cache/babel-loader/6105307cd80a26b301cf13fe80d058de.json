{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Calendar = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"./shared/utils\");\n\nvar _constants = require(\"./shared/constants\");\n\nvar _components = require(\"./components\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar Calendar = function Calendar(_ref) {\n  var selectedDay = _ref.selectedDay,\n      selectedDayRange = _ref.selectedDayRange,\n      onChange = _ref.onChange,\n      onDisabledDayError = _ref.onDisabledDayError,\n      isDayRange = _ref.isDayRange,\n      calendarClassName = _ref.calendarClassName,\n      calendarTodayClassName = _ref.calendarTodayClassName,\n      calendarSelectedDayClassName = _ref.calendarSelectedDayClassName,\n      calendarRangeStartClassName = _ref.calendarRangeStartClassName,\n      calendarRangeBetweenClassName = _ref.calendarRangeBetweenClassName,\n      calendarRangeEndClassName = _ref.calendarRangeEndClassName,\n      disabledDays = _ref.disabledDays,\n      colorPrimary = _ref.colorPrimary,\n      colorPrimaryLight = _ref.colorPrimaryLight,\n      minimumDate = _ref.minimumDate,\n      maximumDate = _ref.maximumDate,\n      selectorStartingYear = _ref.selectorStartingYear,\n      selectorEndingYear = _ref.selectorEndingYear;\n  var calendarElement = (0, _react.useRef)(null);\n  var today = (0, _react.useRef)((0, _utils.getToday)());\n\n  var _useState = (0, _react.useState)({\n    activeDate: null,\n    monthChangeDirection: '',\n    isMonthSelectorOpen: false,\n    isYearSelectorOpen: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainState = _useState2[0],\n      setMainState = _useState2[1];\n\n  var createStateToggler = function createStateToggler(property) {\n    return function () {\n      setMainState(_objectSpread({}, mainState, _defineProperty({}, property, !mainState[property])));\n    };\n  };\n\n  var toggleMonthSelector = createStateToggler('isMonthSelectorOpen');\n  var toggleYearSelector = createStateToggler('isYearSelectorOpen');\n\n  var getComputedActiveDate = function getComputedActiveDate() {\n    if (selectedDay) return (0, _utils.shallowCloneObject)(selectedDay);\n    if (selectedDayRange.from) return (0, _utils.shallowCloneObject)(selectedDayRange.from);\n    return (0, _utils.shallowCloneObject)(today.current);\n  };\n\n  var activeDate = mainState.activeDate ? (0, _utils.shallowCloneObject)(mainState.activeDate) : getComputedActiveDate();\n\n  var renderWeekDays = function renderWeekDays() {\n    return Object.keys(_constants.WEEK_DAYS).map(function (key) {\n      return _react[\"default\"].createElement(\"span\", {\n        key: key,\n        className: \"Calendar__weekDay\"\n      }, _constants.WEEK_DAYS[key][0]);\n    });\n  };\n\n  var handleMonthChange = function handleMonthChange(direction) {\n    setMainState(_objectSpread({}, mainState, {\n      monthChangeDirection: direction\n    }));\n  };\n\n  var updateDate = function updateDate() {\n    setMainState({\n      activeDate: (0, _utils.getDateAccordingToMonth)(activeDate, mainState.monthChangeDirection),\n      monthChangeDirection: ''\n    });\n  };\n\n  var selectMonth = function selectMonth(newMonthNumber) {\n    setMainState(_objectSpread({}, mainState, {\n      activeDate: _objectSpread({}, activeDate, {\n        month: newMonthNumber\n      }),\n      isMonthSelectorOpen: false\n    }));\n  };\n\n  var selectYear = function selectYear(year) {\n    setMainState(_objectSpread({}, mainState, {\n      activeDate: _objectSpread({}, activeDate, {\n        year: year\n      }),\n      isYearSelectorOpen: false\n    }));\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"Calendar \".concat(calendarClassName),\n    style: {\n      '--cl-color-primary': colorPrimary,\n      '--cl-color-primary-light': colorPrimaryLight\n    },\n    ref: calendarElement\n  }, _react[\"default\"].createElement(_components.Header, {\n    maximumDate: maximumDate,\n    minimumDate: minimumDate,\n    activeDate: activeDate,\n    onMonthChange: handleMonthChange,\n    onMonthSelect: toggleMonthSelector,\n    onYearSelect: toggleYearSelector,\n    monthChangeDirection: mainState.monthChangeDirection,\n    isMonthSelectorOpen: mainState.isMonthSelectorOpen,\n    isYearSelectorOpen: mainState.isYearSelectorOpen\n  }), _react[\"default\"].createElement(_components.MonthSelector, {\n    isOpen: mainState.isMonthSelectorOpen,\n    activeDate: activeDate,\n    onMonthSelect: selectMonth,\n    maximumDate: maximumDate,\n    minimumDate: minimumDate\n  }), _react[\"default\"].createElement(_components.YearSelector, {\n    isOpen: mainState.isYearSelectorOpen,\n    activeDate: activeDate,\n    onYearSelect: selectYear,\n    startingYear: selectorStartingYear,\n    endingYear: selectorEndingYear,\n    maximumDate: maximumDate,\n    minimumDate: minimumDate\n  }), _react[\"default\"].createElement(\"div\", {\n    className: \"Calendar__weekDays\"\n  }, renderWeekDays()), _react[\"default\"].createElement(_components.DaysList, {\n    activeDate: activeDate,\n    monthChangeDirection: mainState.monthChangeDirection,\n    onSlideChange: updateDate,\n    isDayRange: isDayRange,\n    selectedDayRange: selectedDayRange,\n    disabledDays: disabledDays,\n    onDisabledDayError: onDisabledDayError,\n    selectedDay: selectedDay,\n    minimumDate: minimumDate,\n    maximumDate: maximumDate,\n    onChange: onChange,\n    calendarTodayClassName: calendarTodayClassName,\n    calendarSelectedDayClassName: calendarSelectedDayClassName,\n    calendarRangeStartClassName: calendarRangeStartClassName,\n    calendarRangeEndClassName: calendarRangeEndClassName,\n    calendarRangeBetweenClassName: calendarRangeBetweenClassName\n  }));\n};\n\nexports.Calendar = Calendar;\nCalendar.defaultProps = {\n  selectedDay: null,\n  selectedDayRange: {\n    from: null,\n    to: null\n  },\n  minimumDate: null,\n  maximumDate: null,\n  colorPrimary: '#0eca2d',\n  colorPrimaryLight: '#cff4d5',\n  calendarClassName: ''\n};\nCalendar.propTypes = {\n  selectedDay: _propTypes[\"default\"].shape(_constants.DAY_SHAPE),\n  selectedDayRange: _propTypes[\"default\"].shape({\n    from: _propTypes[\"default\"].shape(_constants.DAY_SHAPE),\n    to: _propTypes[\"default\"].shape(_constants.DAY_SHAPE)\n  }),\n  calendarClassName: _propTypes[\"default\"].string,\n  colorPrimary: _propTypes[\"default\"].string,\n  colorPrimaryLight: _propTypes[\"default\"].string,\n  minimumDate: _propTypes[\"default\"].shape(_constants.DAY_SHAPE),\n  maximumDate: _propTypes[\"default\"].shape(_constants.DAY_SHAPE)\n};","map":null,"metadata":{},"sourceType":"script"}