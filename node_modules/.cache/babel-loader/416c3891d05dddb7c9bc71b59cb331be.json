{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/hesabeh/src/components/payments-page/add-new-payment/example.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropzoneComponent from 'react-dropzone-component';\nimport '../../../../node_modules/react-dropzone-component/styles/filepicker.css';\nimport '../../../../node_modules/dropzone/dist/min/dropzone.min.css';\nimport './example.css';\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var ReactDOMServer = require('react-dom/server'); // For a full list of possible configurations,\n    // please consult http://www.dropzonejs.com/#configuration\n\n\n    this.djsConfig = {\n      addRemoveLinks: true,\n      acceptedFiles: \"image/jpeg,image/png,image/gif\",\n      autoProcessQueue: false,\n      previewTemplate: ReactDOMServer.renderToStaticMarkup(React.createElement(\"div\", {\n        className: \"dz-preview dz-file-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dz-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dz-filename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"data-dz-name\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        \"data-dz-thumbnail\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dz-progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"dz-upload\",\n        \"data-dz-uploadprogress\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dz-success-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"\\u2714\")), React.createElement(\"div\", {\n        className: \"dz-error-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"\\u2718\")), React.createElement(\"div\", {\n        className: \"dz-error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"data-dz-errormessage\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))))\n    }; // If you want to attach multiple callbacks, simply\n    // create an array filled with all your callbacks.\n\n    this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')]; // Simple callbacks work too, of course\n\n    this.callback = () => console.log('Hello!');\n\n    this.success = file => console.log('uploaded', file);\n\n    this.removedfile = file => console.log('removing...', file);\n\n    this.dropzone = null;\n  }\n\n  render() {\n    const config = {\n      iconFiletypes: ['.jpg', '.png', '.gif'],\n      showFiletypeIcon: true,\n      postUrl: 'no-url',\n      dropzoneSelector: this.props.ii\n    };\n    const djsConfig = this.djsConfig; // For a list of all possible events (there are many), see README.md!\n\n    const eventHandlers = {\n      init: dz => this.dropzone = dz,\n      drop: this.callbackArray,\n      addedfile: this.callback,\n      success: this.success,\n      removedfile: this.removedfile\n    };\n    return React.createElement(DropzoneComponent, {\n      config: config,\n      eventHandlers: eventHandlers,\n      djsConfig: djsConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/components/payments-page/add-new-payment/example.js"],"names":["React","ReactDOM","DropzoneComponent","Example","Component","constructor","props","ReactDOMServer","require","djsConfig","addRemoveLinks","acceptedFiles","autoProcessQueue","previewTemplate","renderToStaticMarkup","callbackArray","console","log","callback","success","file","removedfile","dropzone","render","config","iconFiletypes","showFiletypeIcon","postUrl","dropzoneSelector","ii","eventHandlers","init","dz","drop","addedfile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropzoneComponent from 'react-dropzone-component';\nimport '../../../../node_modules/react-dropzone-component/styles/filepicker.css'\nimport '../../../../node_modules/dropzone/dist/min/dropzone.min.css'\nimport './example.css'\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var ReactDOMServer = require('react-dom/server');\n\n\n        // For a full list of possible configurations,\n        // please consult http://www.dropzonejs.com/#configuration\n        this.djsConfig = {\n            addRemoveLinks: true,\n            acceptedFiles: \"image/jpeg,image/png,image/gif\",\n            autoProcessQueue: false,\n            previewTemplate: ReactDOMServer.renderToStaticMarkup(\n    <div className=\"dz-preview dz-file-preview\">\n      <div className=\"dz-details\">\n        <div className=\"dz-filename\"><span data-dz-name=\"true\"></span></div>\n        <img data-dz-thumbnail=\"true\" />\n      </div>\n      <div className=\"dz-progress\"><span className=\"dz-upload\" data-dz-uploadprogress=\"true\"></span></div>\n      <div className=\"dz-success-mark\"><span>✔</span></div>\n      <div className=\"dz-error-mark\"><span>✘</span></div>\n      <div className=\"dz-error-message\"><span data-dz-errormessage=\"true\"></span></div>\n    </div>\n  )\n        };\n\n\n\n        // If you want to attach multiple callbacks, simply\n        // create an array filled with all your callbacks.\n        this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')];\n\n        // Simple callbacks work too, of course\n        this.callback = () => console.log('Hello!');\n\n        this.success = file => console.log('uploaded', file);\n\n        this.removedfile = file => console.log('removing...', file);\n\n        this.dropzone = null;\n    }\n\n    render() {\n        const config = {\n            iconFiletypes: ['.jpg', '.png', '.gif'],\n            showFiletypeIcon: true,\n            postUrl: 'no-url',\n            dropzoneSelector: this.props.ii,\n        };\n        const djsConfig = this.djsConfig;\n\n        // For a list of all possible events (there are many), see README.md!\n        const eventHandlers = {\n            init: dz => this.dropzone = dz,\n            drop: this.callbackArray,\n            addedfile: this.callback,\n            success: this.success,\n            removedfile: this.removedfile\n        }\n\n        return <DropzoneComponent config={config} eventHandlers={eventHandlers} djsConfig={djsConfig} />\n    }\n}\n"]},"metadata":{},"sourceType":"module"}