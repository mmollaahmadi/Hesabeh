{"ast":null,"code":"/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n(function (root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  } else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n})(this, function () {\n  'use strict';\n  /* exported features */\n\n  var features = {\n    bind: !!function () {}.bind,\n    classList: 'classList' in document.documentElement,\n    rAF: !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n\n  function Debouncer(callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n\n  Debouncer.prototype = {\n    constructor: Debouncer,\n\n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update: function () {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n\n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick: function () {\n      if (!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n\n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent: function () {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  /**\n   * Helper function for extending objects\n   */\n\n\n  function extend(object\n  /*, objectN ... */\n  ) {\n    if (arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n\n    var result = object || {},\n        key,\n        i;\n\n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n\n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if (typeof result[key] === 'object' && !isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        } else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n\n\n  function normalizeTolerance(t) {\n    return t === Object(t) ? t : {\n      down: t,\n      up: t\n    };\n  }\n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n\n\n  function Headroom(elem, options) {\n    options = extend(options, Headroom.options);\n    this.lastKnownScrollY = 0;\n    this.elem = elem;\n    this.tolerance = normalizeTolerance(options.tolerance);\n    this.classes = options.classes;\n    this.offset = options.offset;\n    this.scroller = options.scroller;\n    this.initialised = false;\n    this.onPin = options.onPin;\n    this.onUnpin = options.onUnpin;\n    this.onTop = options.onTop;\n    this.onNotTop = options.onNotTop;\n    this.onBottom = options.onBottom;\n    this.onNotBottom = options.onNotBottom;\n  }\n\n  Headroom.prototype = {\n    constructor: Headroom,\n\n    /**\n     * Initialises the widget\n     */\n    init: function () {\n      if (!Headroom.cutsTheMustard) {\n        return;\n      }\n\n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial); // defer event registration to handle browser\n      // potentially restoring previous scroll position\n\n      setTimeout(this.attachEvent.bind(this), 100);\n      return this;\n    },\n\n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy: function () {\n      var classes = this.classes;\n      this.initialised = false;\n\n      for (var key in classes) {\n        if (classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n\n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n\n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent: function () {\n      if (!this.initialised) {\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n        this.debouncer.handleEvent();\n      }\n    },\n\n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n\n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n\n    /**\n     * Handles the top states\n     */\n    top: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n\n    /**\n     * Handles the not top state\n     */\n    notTop: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n    bottom: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n\n    /**\n     * Handles the not top state\n     */\n    notBottom: function () {\n      var classList = this.elem.classList,\n          classes = this.classes;\n\n      if (!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n\n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY: function () {\n      return this.scroller.pageYOffset !== undefined ? this.scroller.pageYOffset : this.scroller.scrollTop !== undefined ? this.scroller.scrollTop : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n\n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight: function () {\n      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    },\n\n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight: function (elm) {\n      return Math.max(elm.offsetHeight, elm.clientHeight);\n    },\n\n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight: function () {\n      return this.scroller === window || this.scroller === document.body ? this.getViewportHeight() : this.getElementPhysicalHeight(this.scroller);\n    },\n\n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight: function () {\n      var body = document.body,\n          documentElement = document.documentElement;\n      return Math.max(body.scrollHeight, documentElement.scrollHeight, body.offsetHeight, documentElement.offsetHeight, body.clientHeight, documentElement.clientHeight);\n    },\n\n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight: function (elm) {\n      return Math.max(elm.scrollHeight, elm.offsetHeight, elm.clientHeight);\n    },\n\n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight: function () {\n      return this.scroller === window || this.scroller === document.body ? this.getDocumentHeight() : this.getElementHeight(this.scroller);\n    },\n\n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds: function (currentScrollY) {\n      var pastTop = currentScrollY < 0,\n          pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n      return pastTop || pastBottom;\n    },\n\n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded: function (currentScrollY, direction) {\n      return Math.abs(currentScrollY - this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n\n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin: function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n          pastOffset = currentScrollY >= this.offset;\n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n\n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin: function (currentScrollY, toleranceExceeded) {\n      var scrollingUp = currentScrollY < this.lastKnownScrollY,\n          pastOffset = currentScrollY <= this.offset;\n      return scrollingUp && toleranceExceeded || pastOffset;\n    },\n\n    /**\n     * Handles updating the state of the widget\n     */\n    update: function () {\n      var currentScrollY = this.getScrollY(),\n          scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n          toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n\n      if (this.isOutOfBounds(currentScrollY)) {\n        // Ignore bouncy scrolling in OSX\n        return;\n      }\n\n      if (currentScrollY <= this.offset) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n\n      if (currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      } else {\n        this.notBottom();\n      }\n\n      if (this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      } else if (this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n\n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n\n  Headroom.options = {\n    tolerance: {\n      up: 0,\n      down: 0\n    },\n    offset: 0,\n    scroller: window,\n    classes: {\n      pinned: 'headroom--pinned',\n      unpinned: 'headroom--unpinned',\n      top: 'headroom--top',\n      notTop: 'headroom--not-top',\n      bottom: 'headroom--bottom',\n      notBottom: 'headroom--not-bottom',\n      initial: 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n  return Headroom;\n});","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/common/navbar/headroom.js"],"names":["root","factory","define","amd","exports","module","Headroom","features","bind","classList","document","documentElement","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","Debouncer","callback","ticking","prototype","constructor","update","requestTick","rafCallback","handleEvent","isDOMElement","obj","nodeType","extend","object","arguments","length","Error","result","key","i","replacement","normalizeTolerance","t","Object","down","up","elem","options","lastKnownScrollY","tolerance","classes","offset","scroller","initialised","onPin","onUnpin","onTop","onNotTop","onBottom","onNotBottom","init","cutsTheMustard","debouncer","add","initial","setTimeout","attachEvent","destroy","hasOwnProperty","remove","removeEventListener","getScrollY","addEventListener","unpin","contains","pinned","unpinned","call","pin","top","notTop","bottom","notBottom","pageYOffset","undefined","scrollTop","body","parentNode","getViewportHeight","innerHeight","clientHeight","getElementPhysicalHeight","elm","Math","max","offsetHeight","getScrollerPhysicalHeight","getDocumentHeight","scrollHeight","getElementHeight","getScrollerHeight","isOutOfBounds","currentScrollY","pastTop","pastBottom","toleranceExceeded","direction","abs","shouldUnpin","scrollingDown","pastOffset","shouldPin","scrollingUp","scrollDirection"],"mappings":"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","sourcesContent":["/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser\n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n  \n      for (var key in classes) {\n        if(classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n  \n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n  \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n  \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n  \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));\n"]},"metadata":{},"sourceType":"module"}