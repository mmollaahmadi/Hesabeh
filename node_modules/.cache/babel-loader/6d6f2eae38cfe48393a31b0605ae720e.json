{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/hesabeh/src/components/payments-page/add-new-payment/example.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropzoneComponent from 'react-dropzone-component';\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props); // For a full list of possible configurations,\n    // please consult http://www.dropzonejs.com/#configuration\n\n    this.djsConfig = {\n      acceptedFiles: \"image/jpeg,image/png,image/gif\",\n      addRemoveLinks: true,\n      params: {\n        myParam: 'Hello from a parameter!',\n        anotherParam: 43\n      }\n    }; // If you want to attach multiple callbacks, simply\n    // create an array filled with all your callbacks.\n\n    this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')]; // Simple callbacks work too, of course\n\n    this.callback = () => console.log('Hello!');\n  }\n\n  render() {\n    // const config = this.componentConfig;\n    const body1 = document.getElementById('image-upload-body');\n    const config = {\n      iconFiletypes: ['.jpg', '.png', '.gif'],\n      showFiletypeIcon: true,\n      postUrl: '/uploadHandler',\n      dropzoneSelector: {\n        body1\n      }\n    };\n    const djsConfig = this.djsConfig; // For a list of all possible events (there are many), see README.md!\n\n    const eventHandlers = {\n      drop: this.callbackArray,\n      addedfile: this.callback\n    };\n    return React.createElement(DropzoneComponent, {\n      config: config,\n      eventHandlers: eventHandlers,\n      djsConfig: djsConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/components/payments-page/add-new-payment/example.js"],"names":["React","ReactDOM","DropzoneComponent","Example","Component","constructor","props","djsConfig","acceptedFiles","addRemoveLinks","params","myParam","anotherParam","callbackArray","console","log","callback","render","body1","document","getElementById","config","iconFiletypes","showFiletypeIcon","postUrl","dropzoneSelector","eventHandlers","drop","addedfile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAIf;AACA;;AACA,SAAKC,SAAL,GAAiB;AACbC,MAAAA,aAAa,EAAE,gCADF;AAEbC,MAAAA,cAAc,EAAE,IAFH;AAGbC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE,yBADL;AAEJC,QAAAA,YAAY,EAAE;AAFV;AAHK,KAAjB,CANe,CAiBf;AACA;;AACA,SAAKC,aAAL,GAAqB,CAAC,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAP,EAA2B,MAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAjC,CAArB,CAnBe,CAqBf;;AACA,SAAKC,QAAL,GAAgB,MAAMF,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAtB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAd;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,aAAa,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADJ;AAEXC,MAAAA,gBAAgB,EAAE,IAFP;AAGXC,MAAAA,OAAO,EAAE,gBAHE;AAIXC,MAAAA,gBAAgB,EAAE;AAACP,QAAAA;AAAD;AAJP,KAAf;AAMA,UAAMX,SAAS,GAAG,KAAKA,SAAvB,CATK,CAWL;;AACA,UAAMmB,aAAa,GAAG;AAClBC,MAAAA,IAAI,EAAE,KAAKd,aADO;AAElBe,MAAAA,SAAS,EAAE,KAAKZ;AAFE,KAAtB;AAKA,WAAO,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEK,MAA3B;AAAmC,MAAA,aAAa,EAAEK,aAAlD;AAAiE,MAAA,SAAS,EAAEnB,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AA5CgD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DropzoneComponent from 'react-dropzone-component';\n\nexport default class Example extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        // For a full list of possible configurations,\n        // please consult http://www.dropzonejs.com/#configuration\n        this.djsConfig = {\n            acceptedFiles: \"image/jpeg,image/png,image/gif\",\n            addRemoveLinks: true,\n            params: {\n                myParam: 'Hello from a parameter!',\n                anotherParam: 43\n            }\n        };\n\n\n\n        // If you want to attach multiple callbacks, simply\n        // create an array filled with all your callbacks.\n        this.callbackArray = [() => console.log('Hi!'), () => console.log('Ho!')];\n\n        // Simple callbacks work too, of course\n        this.callback = () => console.log('Hello!');\n    }\n\n    render() {\n        // const config = this.componentConfig;\n        const body1 = document.getElementById('image-upload-body');\n        const config = {\n            iconFiletypes: ['.jpg', '.png', '.gif'],\n            showFiletypeIcon: true,\n            postUrl: '/uploadHandler',\n            dropzoneSelector: {body1}\n        };\n        const djsConfig = this.djsConfig;\n\n        // For a list of all possible events (there are many), see README.md!\n        const eventHandlers = {\n            drop: this.callbackArray,\n            addedfile: this.callback,\n        }\n\n        return <DropzoneComponent config={config} eventHandlers={eventHandlers} djsConfig={djsConfig} />\n    }\n}\n"]},"metadata":{},"sourceType":"module"}