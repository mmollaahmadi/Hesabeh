{"ast":null,"code":"import _defineProperty from \"/home/mohammad/Desktop/Hesabeh/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mohammad/Desktop/Hesabeh/src/components/common/selection-users/selection-users.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Row, Col, Button, Card, CardHeader, CardBody, Modal } from \"reactstrap\";\nimport GroupUnit from \"./group-unit\";\nimport UserUnit from \"./user-unit\";\nimport AOS from 'aos';\nimport { animateCSS } from \"../../../utils/animationUtils\";\nimport './selection-users.css';\nimport UserShare from \"../user-share/user-share\";\nimport { getUser } from \"../../../utils/apiUtils\";\n\nclass SelectionUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectUsersModal: false,\n      isStepOneInModal: true,\n      saveInputsValue: false,\n      groups: [],\n      temporaryGroups: [],\n      // usersOfGroupsList: [],\n      // usersOfSelectedGroupsList: [],\n      //\n      // selectedUsers: [],\n      isAnyGroupSelected: false,\n      isAnyUserSelected: false,\n      isSelectedUser: false\n    };\n    this.handleBackOrNextStep = this.handleBackOrNextStep.bind(this);\n    this.myCallBack = this.myCallBack.bind(this);\n    this.updateSelectedGroupsList = this.updateSelectedGroupsList.bind(this);\n    this.updateSelectedUsersList = this.updateSelectedUsersList.bind(this);\n    this.updateUsersOfSelectedGroupsList = this.updateUsersOfSelectedGroupsList.bind(this);\n    this.handleSelectUsers = this.handleSelectUsers.bind(this);\n    this.handleSelectAllConsumersOfGroups = this.handleSelectAllConsumersOfGroups.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateSelectedUserShare = this.updateSelectedUserShare.bind(this);\n    AOS.init();\n  }\n\n  componentDidUpdate(prevProps) {\n    let _groupsList = [];\n\n    if (prevProps.groups !== this.props.groups) {\n      this.props.groups.forEach(group => {\n        let usersList = [];\n        group.users.forEach(user => {\n          let u = getUser(user.id);\n          usersList.push(_objectSpread({}, u, {\n            checked: false,\n            selected: false,\n            shareNumber: 0,\n            shareTuman: 0\n          }));\n        });\n\n        _groupsList.push(_objectSpread({}, group, {\n          users: usersList,\n          checked: false\n        }));\n      });\n      this.setState({\n        groups: _groupsList // selectedUsers: this.props.selectedUsers,\n\n      });\n    }\n\n    if (prevProps.selectedUsers !== this.props.selectedUsers) {\n      this.setState({\n        selectedUsers: this.props.selectedUsers\n      });\n    }\n  }\n\n  handleSelectAllConsumersOfGroups() {\n    let selectedUsers = [];\n\n    if (this.state.isAnyGroupSelected) {\n      let _groupsList = this.state.groups;\n\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.checked = group.checked;\n          user.selected = group.checked;\n          if (user.selected) selectedUsers.push(user);\n        });\n      });\n\n      if (this.props.setUsers) {\n        this.props.setUsers(selectedUsers);\n      }\n\n      this.setState({\n        selectedUsers: selectedUsers,\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  handleSelectUsers() {\n    let _selectedUsers = [];\n\n    if (this.state.isAnyGroupSelected && this.state.isAnyUserSelected) {\n      let _groupsList = this.state.groups;\n\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.selected = user.checked;\n          if (user.selected) _selectedUsers.push(user);\n        });\n      });\n\n      if (this.props.setUsers) {\n        this.props.setUsers(_selectedUsers);\n      }\n\n      this.setState({\n        selectedUsers: _selectedUsers,\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  updateSelectedUserShare(groupID, userID, share) {\n    let _groupsList = [];\n    this.state.groups.forEach(group => {\n      if (group.id === groupID) {\n        let usersList = [];\n        group.users.forEach(user => {\n          if (user.id === userID) {\n            let u = getUser(user.id);\n            usersList.push(_objectSpread({}, u, {\n              shareNumber: share\n            }));\n          } else {\n            usersList.push(user);\n          }\n        });\n\n        _groupsList.push(_objectSpread({}, group, {\n          users: usersList\n        }));\n      } else {\n        _groupsList.push(group);\n      }\n    });\n    this.setState({\n      groups: _groupsList // selectedUsers: this.props.selectedUsers,\n\n    });\n  }\n\n  handleBackOrNextStep() {\n    let fadeAnimation = \"fadeOut\";\n\n    if (this.state.isStepOneInModal) {\n      animateCSS(\".selectGroupCardHeader\", fadeAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeAnimation, this.myCallBack); // this.updateUsersOfSelectedGroupsList();\n    } else {\n      animateCSS(\".selectUsersCardHeader\", fadeAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeAnimation, this.myCallBack);\n    }\n  }\n\n  myCallBack() {\n    let fadeInAnimation = \"fadeIn\";\n\n    if (this.state.isStepOneInModal) {\n      this.setState({\n        isStepOneInModal: false\n      });\n      animateCSS(\".selectUsersCardHeader\", fadeInAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeInAnimation);\n    } else {\n      this.setState({\n        isStepOneInModal: true\n      });\n      animateCSS(\".selectGroupCardHeader\", fadeInAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeInAnimation);\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      selectUsersModal: !this.state.selectUsersModal\n    });\n  }\n\n  updateSelectedGroupsList(id) {\n    let _groupsList = this.state.groups;\n\n    _groupsList.forEach(group => {\n      if (group.id === id) {\n        group.checked = !group.checked;\n      }\n    });\n\n    let _isAnyGroupSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        _isAnyGroupSelected = true;\n      }\n    });\n\n    this.setState({\n      groups: _groupsList,\n      isAnyGroupSelected: _isAnyGroupSelected\n    });\n  }\n\n  updateSelectedUsersList(id) {\n    let _groupsList = this.state.groups;\n    let _isAnyUserSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        group.users.forEach(user => {\n          if (user.id === id) {\n            user.checked = !user.checked;\n          }\n\n          if (user.checked) _isAnyUserSelected = true;\n        });\n      }\n    });\n\n    this.setState({\n      groups: _groupsList,\n      isAnyUserSelected: _isAnyUserSelected\n    });\n  }\n\n  updateUsersOfSelectedGroupsList() {\n    let _groups = [];\n    this.state.groups.forEach(group => {\n      let _users = [];\n\n      if (group.checked) {\n        group.users.forEach(u => {\n          _users.push(_objectSpread({}, u, {\n            checked: true,\n            selected: true\n          }));\n        });\n      } else {\n        _users = group.users;\n      }\n\n      _groups.push(_objectSpread({}, group, {\n        users: _users\n      }));\n    });\n    this.setState({\n      groups: _groups\n    });\n  }\n\n  render() {\n    let _groups = this.state.groups;\n    let groups = [];\n    let users = [];\n\n    _groups.forEach(group => {\n      groups.push(React.createElement(GroupUnit, {\n        group: group,\n        imageUri: require(\"../../../assets/img/theme/team-4-800x800.jpg\"),\n        updateSelectedGroupsList: this.updateSelectedGroupsList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }));\n\n      if (group.checked) {\n        group.users.forEach(user => {\n          users.push(React.createElement(UserUnit, {\n            updateSelectedUserShare: this.updateSelectedUserShare,\n            hasShareInput: true,\n            groupID: group.id,\n            user: user,\n            imageUri: require(\"../../../assets/img/theme/team-4-800x800.jpg\"),\n            updateSelectedUsersList: this.updateSelectedUsersList,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }));\n        });\n      }\n    });\n\n    let consumers = [];\n\n    if (this.state.groups) {\n      this.state.groups.forEach(group => {\n        group.users.forEach(user => {\n          if (user.selected) {\n            consumers.push(user);\n          }\n        });\n      });\n    }\n\n    return React.createElement(Col, {\n      lg: \"12\",\n      className: \"m-0 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"m-0 d-flex justify-content-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p-0 mx-3 my-auto consumers-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, this.props.title), React.createElement(UserShare, {\n      users: consumers,\n      suppliersOrConsumers: this.props.suppliersOrConsumers,\n      onlyAvatar: false,\n      deletable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"btn btn-icon payments-btn-lv2 mt-0 \".concat(this.props.suppliersOrConsumers === 'consumers' ? 'add-consumer-btn' : ''),\n      type: \"button\",\n      color: \"dark-green\",\n      onClick: () => this.toggleModal(\"consumersCollapse\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"btn-inner--icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      className: \"modal-dialog-centered\",\n      isOpen: this.state.selectUsersModal,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-muted  mt-3 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"selectGroupCardHeader my-modal-header \".concat(this.state.isStepOneInModal ? \"\" : \"d-none\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06AF\\u0631\\u0648\\u0647\"), React.createElement(\"h5\", {\n      className: \"selectUsersCardHeader my-modal-header \".concat(this.state.isStepOneInModal ? \"d-none\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u0627\\u0646\"))), React.createElement(CardBody, {\n      className: \"selectGroupCardBody px-lg-3 py-lg-3 \".concat(this.state.isStepOneInModal ? \"\" : \"d-none\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"groups m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, groups), React.createElement(Row, {\n      className: \"text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"tight-btn\" // className={'continueBtn profile-modal-btn'}\n      ,\n      color: \"primary\",\n      disabled: !this.state.isAnyGroupSelected,\n      onClick: this.handleBackOrNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"\\u0645\\u0631\\u062D\\u0644\\u0647 \\u0628\\u0639\\u062F\"), React.createElement(Button, {\n      className: \"tight-btn\" // className={'continueBtn profile-modal-btn'}\n      ,\n      color: \"primary\",\n      disabled: !this.state.isAnyGroupSelected,\n      onClick: this.handleSelectAllConsumersOfGroups,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"\\u0628\\u06CC\\u062E\\u06CC\\u0627\\u0644\")))), React.createElement(CardBody, {\n      className: \"selectUsersCardBody px-lg-3 py-lg-3 \".concat(this.state.isStepOneInModal ? \"d-none\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"groups m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, users), React.createElement(Row, {\n      className: \"text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"primary\",\n      disabled: !this.state.isAnyUserSelected,\n      onClick: this.handleSelectUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.handleBackOrNextStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A\"), React.createElement(Button, {\n      className: \"tight-btn\",\n      color: \"default\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, \"\\u0628\\u06CC\\u062E\\u06CC\\u0627\\u0644\")))))))));\n  }\n\n}\n\nexport default SelectionUsers;","map":{"version":3,"sources":["/home/mohammad/Desktop/Hesabeh/src/components/common/selection-users/selection-users.js"],"names":["React","Row","Col","Button","Card","CardHeader","CardBody","Modal","GroupUnit","UserUnit","AOS","animateCSS","UserShare","getUser","SelectionUsers","Component","constructor","props","state","selectUsersModal","isStepOneInModal","saveInputsValue","groups","temporaryGroups","isAnyGroupSelected","isAnyUserSelected","isSelectedUser","handleBackOrNextStep","bind","myCallBack","updateSelectedGroupsList","updateSelectedUsersList","updateUsersOfSelectedGroupsList","handleSelectUsers","handleSelectAllConsumersOfGroups","toggleModal","updateSelectedUserShare","init","componentDidUpdate","prevProps","_groupsList","forEach","group","usersList","users","user","u","id","push","checked","selected","shareNumber","shareTuman","setState","selectedUsers","setUsers","_selectedUsers","groupID","userID","share","fadeAnimation","fadeInAnimation","_isAnyGroupSelected","_isAnyUserSelected","_groups","_users","render","require","consumers","title","suppliersOrConsumers"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Modal\n} from \"reactstrap\";\n\nimport GroupUnit from \"./group-unit\";\nimport UserUnit from \"./user-unit\";\nimport AOS from 'aos'\nimport {animateCSS} from \"../../../utils/animationUtils\";\nimport './selection-users.css'\nimport UserShare from \"../user-share/user-share\";\nimport {getUser} from \"../../../utils/apiUtils\";\n\nclass SelectionUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectUsersModal: false,\n      isStepOneInModal: true,\n\n      saveInputsValue: false,\n\n      groups: [],\n      temporaryGroups:[],\n      // usersOfGroupsList: [],\n      // usersOfSelectedGroupsList: [],\n      //\n      // selectedUsers: [],\n\n      isAnyGroupSelected: false,\n      isAnyUserSelected: false,\n      isSelectedUser: false\n    };\n\n    this.handleBackOrNextStep = this.handleBackOrNextStep.bind(this);\n    this.myCallBack = this.myCallBack.bind(this);\n    this.updateSelectedGroupsList = this.updateSelectedGroupsList.bind(this);\n    this.updateSelectedUsersList = this.updateSelectedUsersList.bind(this);\n    this.updateUsersOfSelectedGroupsList = this.updateUsersOfSelectedGroupsList.bind(\n      this\n    );\n    this.handleSelectUsers = this.handleSelectUsers.bind(this);\n    this.handleSelectAllConsumersOfGroups = this.handleSelectAllConsumersOfGroups.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.updateSelectedUserShare = this.updateSelectedUserShare.bind(this);\n    AOS.init();\n\n  }\n\n  componentDidUpdate(prevProps) {\n    let _groupsList = [];\n    if (prevProps.groups !== this.props.groups) {\n      this.props.groups.forEach(group => {\n        let usersList = [];\n        group.users.forEach(user => {\n          let u = getUser(user.id);\n          usersList.push({\n            ...u,\n            checked: false,\n            selected: false,\n            shareNumber: 0,\n            shareTuman: 0,\n          });\n        });\n        _groupsList.push({\n          ...group,\n          users: usersList,\n          checked: false\n        });\n      });\n\n      this.setState({\n        groups: _groupsList,\n        // selectedUsers: this.props.selectedUsers,\n      });\n    }\n    if (prevProps.selectedUsers !== this.props.selectedUsers) {\n      this.setState({\n        selectedUsers: this.props.selectedUsers,\n      });\n    }\n  }\n\n  handleSelectAllConsumersOfGroups() {\n    let selectedUsers = [];\n    if (this.state.isAnyGroupSelected) {\n      let _groupsList = this.state.groups;\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.checked = group.checked;\n          user.selected = group.checked;\n          if (user.selected)\n            selectedUsers.push(user);\n        });\n      });\n      if (this.props.setUsers) {\n        this.props.setUsers(selectedUsers);\n      }\n      this.setState({\n        selectedUsers: selectedUsers,\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  handleSelectUsers() {\n    let _selectedUsers = [];\n    if (this.state.isAnyGroupSelected && this.state.isAnyUserSelected) {\n      let _groupsList = this.state.groups;\n      _groupsList.forEach(group => {\n        group.users.forEach(user => {\n          user.selected = user.checked;\n          if (user.selected)\n            _selectedUsers.push(user);\n        });\n      });\n      if (this.props.setUsers) {\n        this.props.setUsers(_selectedUsers);\n      }\n      this.setState({\n        selectedUsers: _selectedUsers,\n        groups: _groupsList,\n        isSelectedUser: true,\n        selectUsersModal: false\n      });\n    }\n  }\n\n  updateSelectedUserShare(groupID, userID, share) {\n    let _groupsList = [];\n\n    this.state.groups.forEach(group => {\n\n      if (group.id === groupID) {\n\n        let usersList = [];\n        group.users.forEach(user => {\n          if (user.id === userID) {\n            let u = getUser(user.id);\n            usersList.push({\n              ...u,\n              shareNumber: share,\n            });\n          } else {\n            usersList.push(user);\n          }\n        });\n        _groupsList.push({\n          ...group,\n          users: usersList,\n        });\n      } else {\n        _groupsList.push(group);\n      }\n\n    });\n\n    this.setState({\n      groups: _groupsList,\n      // selectedUsers: this.props.selectedUsers,\n    });\n  }\n\n\n\n  handleBackOrNextStep() {\n    let fadeAnimation = \"fadeOut\";\n    if (this.state.isStepOneInModal) {\n      animateCSS(\".selectGroupCardHeader\", fadeAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeAnimation, this.myCallBack);\n      // this.updateUsersOfSelectedGroupsList();\n    } else {\n      animateCSS(\".selectUsersCardHeader\", fadeAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeAnimation, this.myCallBack);\n    }\n  }\n\n  myCallBack() {\n    let fadeInAnimation = \"fadeIn\";\n    if (this.state.isStepOneInModal) {\n      this.setState({\n        isStepOneInModal: false\n      });\n      animateCSS(\".selectUsersCardHeader\", fadeInAnimation);\n      animateCSS(\".selectUsersCardBody\", fadeInAnimation);\n    } else {\n      this.setState({\n        isStepOneInModal: true\n      });\n      animateCSS(\".selectGroupCardHeader\", fadeInAnimation);\n      animateCSS(\".selectGroupCardBody\", fadeInAnimation);\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      selectUsersModal: !this.state.selectUsersModal,\n    });\n  }\n\n  updateSelectedGroupsList(id) {\n    let _groupsList = this.state.groups;\n    _groupsList.forEach(group => {\n      if (group.id === id) {\n        group.checked = !group.checked;\n      }\n    });\n\n    let _isAnyGroupSelected = false;\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        _isAnyGroupSelected = true;\n      }\n    });\n    this.setState({\n      groups: _groupsList,\n      isAnyGroupSelected: _isAnyGroupSelected\n    });\n  }\n\n  updateSelectedUsersList(id) {\n    let _groupsList = this.state.groups;\n    let _isAnyUserSelected = false;\n\n    _groupsList.forEach(group => {\n      if (group.checked) {\n        group.users.forEach(user => {\n          if (user.id === id) {\n            user.checked = !user.checked;\n          }\n          if (user.checked) _isAnyUserSelected = true;\n        });\n      }\n    });\n    this.setState({\n      groups: _groupsList,\n      isAnyUserSelected: _isAnyUserSelected\n    });\n  }\n\n  updateUsersOfSelectedGroupsList() {\n\n    let _groups = [];\n    this.state.groups.forEach(group => {\n      let _users = [];\n\n      if (group.checked) {\n        group.users.forEach(u => {\n          _users.push({\n            ...u,\n            checked: true,\n            selected: true,\n          });\n        });\n      } else {\n        _users = group.users;\n      }\n\n      _groups.push({\n        ...group,\n        users: _users\n      });\n    });\n    this.setState({\n      groups: _groups\n    });\n  }\n\n  render() {\n    let _groups = this.state.groups;\n    let groups = [];\n    let users = [];\n    _groups.forEach(group => {\n      groups.push(\n        <GroupUnit\n          group={group}\n          imageUri={require(\"../../../assets/img/theme/team-4-800x800.jpg\")}\n          updateSelectedGroupsList={this.updateSelectedGroupsList}\n        />\n      );\n      if (group.checked) {\n        group.users.forEach(user => {\n          users.push(\n            <UserUnit\n              updateSelectedUserShare={this.updateSelectedUserShare}\n              hasShareInput={true}\n              groupID={group.id}\n              user={user}\n              imageUri={require(\"../../../assets/img/theme/team-4-800x800.jpg\")}\n              updateSelectedUsersList={this.updateSelectedUsersList}\n            />\n          );\n        });\n      }\n    });\n    let consumers = [];\n    if (this.state.groups) {\n      this.state.groups.forEach(group => {\n        group.users.forEach(user => {\n          if (user.selected) {\n            consumers.push(user);\n          }\n        });\n      });\n    }\n\n    return (\n      <Col lg=\"12\" className=\"m-0 mt-3\">\n        <Row className=\"m-0 d-flex justify-content-right\">\n          <p className=\"p-0 mx-3 my-auto consumers-text\">\n            {this.props.title}\n          </p>\n          <UserShare\n            users={consumers}\n            suppliersOrConsumers={this.props.suppliersOrConsumers}\n            onlyAvatar={false}\n            deletable={true}\n          />\n          <Button\n            className={`btn btn-icon payments-btn-lv2 mt-0 ${this.props.suppliersOrConsumers === 'consumers' ? 'add-consumer-btn' : ''}`}\n            type=\"button\"\n            color=\"dark-green\"\n            onClick={() =>\n              this.toggleModal(\"consumersCollapse\")\n            }\n          >\n            <span className=\"btn-inner--icon\">\n              <i className=\"fa fa-user-plus\"/>\n            </span>\n            {/*<span className=\"btn-inner--text\">مصرف کنندگان</span>*/}\n          </Button>\n\n          <Modal\n            className=\"modal-dialog-centered\"\n            isOpen={this.state.selectUsersModal}\n            toggle={this.toggleModal}\n          >\n            <div className=\"modal-body p-0\">\n              <Card className=\"bg-secondary shadow border-0\">\n                <CardHeader className=\"bg-transparent p-1\">\n                  {/* <Row className=\"justify-content-center\"> */}\n                  <div className=\"text-muted  mt-3 mb-2\">\n                    <h5\n                      className={`selectGroupCardHeader my-modal-header ${\n                        this.state.isStepOneInModal ? \"\" : \"d-none\"\n                      }`}\n                    >\n                      انتخاب گروه\n                    </h5>\n                    <h5\n                      className={`selectUsersCardHeader my-modal-header ${\n                        this.state.isStepOneInModal ? \"d-none\" : \"\"\n                      }`}\n                    >\n                      انتخاب کاربران\n                    </h5>\n                  </div>\n                  {/* </Row> */}\n                </CardHeader>\n                <CardBody\n                  className={`selectGroupCardBody px-lg-3 py-lg-3 ${\n                    this.state.isStepOneInModal ? \"\" : \"d-none\"\n                  }`}\n                >\n                  <Row className={\"groups m-0\"}>{groups}</Row>\n                  <Row className=\"text-center my-4\">\n                    <Col>\n                      <Button\n                        className=\"tight-btn\"\n                        // className={'continueBtn profile-modal-btn'}\n                        color=\"primary\"\n                        disabled={\n                          !this.state.isAnyGroupSelected\n                        }\n                        onClick={this.handleBackOrNextStep}\n                      >\n                        مرحله بعد\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        // className={'continueBtn profile-modal-btn'}\n                        color=\"primary\"\n                        disabled={\n                          !this.state.isAnyGroupSelected\n                        }\n                        onClick={this.handleSelectAllConsumersOfGroups}\n                      >\n                        انتخاب\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.toggleModal}\n                      >\n                        بیخیال\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n                <CardBody\n                  className={`selectUsersCardBody px-lg-3 py-lg-3 ${\n                    this.state.isStepOneInModal ? \"d-none\" : \"\"\n                  }`}\n                >\n                  <Row className={\"groups m-0\"}>{users}</Row>\n                  <Row className=\"text-center my-4\">\n                    <Col>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"primary\"\n                        disabled={!this.state.isAnyUserSelected}\n                        onClick={this.handleSelectUsers}\n                      >\n                        انتخاب\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.handleBackOrNextStep}\n                      >\n                        بازگشت\n                      </Button>\n                      <Button\n                        className=\"tight-btn\"\n                        color=\"default\"\n                        onClick={this.toggleModal}\n                      >\n                        بیخیال\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </div>\n          </Modal>\n        </Row>\n      </Col>\n    );\n  }\n}\n\nexport default SelectionUsers;\n"]},"metadata":{},"sourceType":"module"}