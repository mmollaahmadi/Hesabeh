{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nvar YearSelector = function YearSelector(_ref) {\n  var isOpen = _ref.isOpen,\n      activeDate = _ref.activeDate,\n      onYearSelect = _ref.onYearSelect,\n      startingYear = _ref.startingYear,\n      endingYear = _ref.endingYear,\n      maximumDate = _ref.maximumDate,\n      minimumDate = _ref.minimumDate;\n  var wrapperElement = (0, _react.useRef)(null);\n  var yearListElement = (0, _react.useRef)(null);\n  (0, _react.useEffect)(function () {\n    var classToggleMethod = isOpen ? 'add' : 'remove';\n    var activeSelectorYear = wrapperElement.current.querySelector('.Calendar__yearSelectorText.-active');\n    wrapperElement.current.classList[classToggleMethod]('-faded');\n    yearListElement.current.scrollTop = activeSelectorYear.offsetTop - activeSelectorYear.offsetHeight * 5.8;\n    yearListElement.current.classList[classToggleMethod]('-open');\n  }, [isOpen]);\n\n  var renderSelectorYears = function renderSelectorYears() {\n    var items = [];\n\n    for (var i = startingYear; i <= endingYear; i += 1) {\n      items.push(i);\n    }\n\n    return items.map(function (item) {\n      var isAfterMaximumDate = maximumDate && item > maximumDate.year;\n      var isBeforeMinimumDate = minimumDate && item < minimumDate.year;\n      return _react[\"default\"].createElement(\"div\", {\n        key: item,\n        className: \"Calendar__yearSelectorItem\"\n      }, _react[\"default\"].createElement(\"button\", {\n        tabIndex: \"-1\",\n        className: \"Calendar__yearSelectorText \".concat(activeDate.year === item ? '-active' : ''),\n        type: \"button\",\n        onClick: function onClick() {\n          onYearSelect(item);\n        },\n        disabled: isAfterMaximumDate || isBeforeMinimumDate\n      }, (0, _utils.toPersianNumber)(item)));\n    });\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"Calendar__yearSelectorAnimationWrapper\"\n  }, _react[\"default\"].createElement(\"div\", {\n    ref: wrapperElement,\n    className: \"Calendar__yearSelectorWrapper\"\n  }, _react[\"default\"].createElement(\"div\", {\n    ref: yearListElement,\n    className: \"Calendar__yearSelector\"\n  }, renderSelectorYears())));\n};\n\nYearSelector.propTypes = {\n  startingYear: _propTypes[\"default\"].number,\n  endingYear: _propTypes[\"default\"].number\n};\nYearSelector.defaultProps = {\n  startingYear: 1300,\n  endingYear: 1450\n};\nvar _default = YearSelector;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}