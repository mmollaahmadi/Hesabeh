{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/mohammad/Desktop/Hesabeh/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _axios = require(\"axios\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _Avatar = require(\"./Avatar\");\n\nvar _Avatar2 = _interopRequireDefault(_Avatar);\n\nvar _upload_icon = require(\"./static/assets/upload_icon.png\");\n\nvar _upload_icon2 = _interopRequireDefault(_upload_icon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar AvatarUploader = function (_Component) {\n  _inherits(AvatarUploader, _Component);\n\n  function AvatarUploader(props) {\n    _classCallCheck(this, AvatarUploader);\n\n    var _this = _possibleConstructorReturn(this, (AvatarUploader.__proto__ || Object.getPrototypeOf(AvatarUploader)).call(this, props));\n\n    _this.state = {\n      currentImage: null,\n      loading: false\n    };\n    _this.uploadImage = _this.uploadImage.bind(_this);\n    _this.onImageChange = _this.onImageChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(AvatarUploader, [{\n    key: \"uploadImage\",\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(avatar) {\n        var _props, uploadURL, onStart, onProgress, onFinished, name, customHeaders, withCredentials, avatarForm, res;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _props = this.props, uploadURL = _props.uploadURL, onStart = _props.onStart, onProgress = _props.onProgress, onFinished = _props.onFinished, name = _props.name, customHeaders = _props.customHeaders, withCredentials = _props.withCredentials;\n\n                if (!uploadURL) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.prev = 2;\n\n                if (onStart && typeof onStart === 'function') {\n                  onStart();\n                }\n\n                this.setState({\n                  loading: true\n                });\n                avatarForm = new FormData();\n                avatarForm.append(name, avatar, avatar.name);\n                _context.next = 9;\n                return _axios2.default.post(uploadURL, avatarForm, {\n                  withCredentials: withCredentials,\n                  headers: customHeaders ? customHeaders : null,\n                  onUploadProgress: function onUploadProgress(progressEvent) {\n                    var percentCompleted = Math.floor(progressEvent.loaded * 100 / progressEvent.total);\n\n                    if (onProgress && typeof onProgress === 'function') {\n                      onProgress(percentCompleted);\n                    }\n                  }\n                });\n\n              case 9:\n                res = _context.sent;\n\n                if (res.status && res.status === 200) {\n                  this.setState({\n                    loading: false\n                  });\n\n                  if (onFinished && typeof onFinished === 'function') {\n                    onFinished(false, res);\n                  }\n                }\n\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](2);\n                this.setState({\n                  loading: false\n                });\n\n                if (onFinished && typeof onFinished === 'function') {\n                  onFinished(_context.t0);\n                }\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 13]]);\n      }));\n\n      function uploadImage(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return uploadImage;\n    }()\n  }, {\n    key: \"onImageChange\",\n    value: function onImageChange(e) {\n      var _this2 = this;\n\n      var imageToUpload = e.target.files[0];\n      var reader = new FileReader();\n\n      reader.onload = function (avatar) {\n        return _this2.setState({\n          currentImage: avatar.target.result\n        });\n      };\n\n      reader.readAsDataURL(imageToUpload);\n      this.uploadImage(imageToUpload);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          disabled = _props2.disabled,\n          size = _props2.size,\n          defaultImg = _props2.defaultImg,\n          fileType = _props2.fileType,\n          placeholder = _props2.placeholder;\n      var currentImage = this.state.currentImage;\n      return _react2.default.createElement(_Avatar2.default, {\n        placeholder: placeholder,\n        size: size\n      }, currentImage || defaultImg ? _react2.default.createElement(_Avatar2.default.Preview, {\n        src: currentImage || defaultImg\n      }) : null, _react2.default.createElement(_Avatar2.default.Uploader, {\n        fileType: fileType,\n        onChange: this.onImageChange,\n        disabled: disabled\n      }));\n    }\n  }]);\n\n  return AvatarUploader;\n}(_react.Component);\n\nexports.default = AvatarUploader;\nAvatarUploader.propTypes = {\n  uploadURL: _propTypes2.default.string.isRequired,\n  onFinished: _propTypes2.default.func,\n  onStart: _propTypes2.default.func,\n  onProgress: _propTypes2.default.func,\n  placeholder: _propTypes2.default.string,\n  withCredentials: _propTypes2.default.bool,\n  customHeaders: _propTypes2.default.object,\n  disabled: _propTypes2.default.bool,\n  fileType: _propTypes2.default.string,\n  size: _propTypes2.default.number,\n  defaultImg: _propTypes2.default.string,\n  name: _propTypes2.default.string.isRequired\n};\nAvatarUploader.defaultProps = {\n  disabled: false,\n  placeholder: _upload_icon2.default,\n  withCredentials: false,\n  fileType: \"image/jpeg\",\n  size: 150\n};","map":null,"metadata":{},"sourceType":"script"}