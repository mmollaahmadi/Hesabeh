{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Calendar = require(\"./Calendar\");\n\nvar _DatePickerInput = _interopRequireDefault(require(\"./DatePickerInput\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar shouldPreventFocus;\nvar mousePosition;\n\nvar DatePicker = function DatePicker(_ref) {\n  var isDayRange = _ref.isDayRange,\n      selectedDay = _ref.selectedDay,\n      onChange = _ref.onChange,\n      formatInputText = _ref.formatInputText,\n      inputPlaceholder = _ref.inputPlaceholder,\n      inputClassName = _ref.inputClassName,\n      renderInput = _ref.renderInput,\n      selectedDayRange = _ref.selectedDayRange,\n      wrapperClassName = _ref.wrapperClassName,\n      calendarClassName = _ref.calendarClassName,\n      calendarTodayClassName = _ref.calendarTodayClassName,\n      calendarSelectedDayClassName = _ref.calendarSelectedDayClassName,\n      calendarRangeStartClassName = _ref.calendarRangeStartClassName,\n      calendarRangeBetweenClassName = _ref.calendarRangeBetweenClassName,\n      calendarRangeEndClassName = _ref.calendarRangeEndClassName,\n      disabledDays = _ref.disabledDays,\n      onDisabledDayError = _ref.onDisabledDayError,\n      colorPrimary = _ref.colorPrimary,\n      colorPrimaryLight = _ref.colorPrimaryLight,\n      minimumDate = _ref.minimumDate,\n      maximumDate = _ref.maximumDate,\n      selectorStartingYear = _ref.selectorStartingYear,\n      selectorEndingYear = _ref.selectorEndingYear;\n  var calendarContainerElement = (0, _react.useRef)(null);\n  var dateInputElement = (0, _react.useRef)(null);\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCalendarOpen = _useState2[0],\n      setCalendarVisiblity = _useState2[1];\n\n  var handleMouseMove = function handleMouseMove(e) {\n    var x = e.clientX,\n        y = e.clientY;\n    mousePosition = {\n      x: x,\n      y: y\n    };\n  }; // get mouse live position\n\n\n  (0, _react.useEffect)(function () {\n    document.addEventListener('mousemove', handleMouseMove, false);\n    return function () {\n      document.removeEventListener('mousemove', handleMouseMove, false);\n    };\n  }, []); // handle input focus/blur\n\n  (0, _react.useEffect)(function () {\n    var shouldCloseCalendar = !isDayRange ? !isCalendarOpen : !isCalendarOpen && selectedDayRange.from && selectedDayRange.to;\n    if (shouldCloseCalendar) dateInputElement.current.blur();\n  }, [selectedDay, isCalendarOpen]);\n\n  var toggleCalendar = function toggleCalendar() {\n    return setCalendarVisiblity(!isCalendarOpen);\n  }; // keep calendar open if clicked inside the calendar\n\n\n  var handleBlur = function handleBlur(e) {\n    e.persist();\n    if (!isCalendarOpen) return;\n    var calendar = calendarContainerElement.current;\n    var calendarPosition = calendar.getBoundingClientRect();\n\n    var isInBetween = function isInBetween(value, start, end) {\n      return value >= start && value <= end;\n    };\n\n    var isInsideCalendar = isInBetween(mousePosition.x, calendarPosition.left, calendarPosition.right) && isInBetween(mousePosition.y, calendarPosition.top, calendarPosition.bottom);\n\n    if (isInsideCalendar) {\n      shouldPreventFocus = true;\n      e.target.focus();\n      shouldPreventFocus = false;\n      return;\n    }\n\n    toggleCalendar();\n  };\n\n  var handleFocus = function handleFocus() {\n    if (shouldPreventFocus) return;\n    toggleCalendar();\n  };\n\n  var handleDaySelect = function handleDaySelect(day) {\n    onChange(day);\n    toggleCalendar();\n  };\n\n  var handleDayRangeSelect = function handleDayRangeSelect(range) {\n    onChange(range);\n    if (range.from && range.to) toggleCalendar();\n  }; // Keep the calendar in the screen bounds if input is near the window edges\n\n\n  var getCalendarPosition = function getCalendarPosition() {\n    if (!calendarContainerElement.current) return;\n    var previousLeft = calendarContainerElement.current.style.left;\n    if (previousLeft) return {\n      left: previousLeft\n    };\n\n    var _calendarContainerEle = calendarContainerElement.current.getBoundingClientRect(),\n        left = _calendarContainerEle.left,\n        width = _calendarContainerEle.width;\n\n    var clientWidth = document.documentElement.clientWidth;\n    var isOverflowingFromRight = left + width > clientWidth;\n    var overflowFromRightDistance = left + width - clientWidth;\n    var isOverflowingFromLeft = left < 0;\n    var overflowFromLeftDistance = Math.abs(left);\n    var rightPosition = isOverflowingFromLeft ? overflowFromLeftDistance : 0;\n    var leftStyle = isOverflowingFromRight ? \"calc(50% - \".concat(overflowFromRightDistance, \"px)\") : \"calc(50% + \".concat(rightPosition, \"px)\");\n    return {\n      left: leftStyle\n    };\n  };\n\n  return _react[\"default\"].createElement(\"div\", {\n    className: \"DatePicker \".concat(isCalendarOpen ? '-calendarOpen' : '', \" \").concat(wrapperClassName)\n  }, _react[\"default\"].createElement(\"div\", {\n    ref: calendarContainerElement,\n    className: \"DatePicker__calendarContainer\",\n    style: getCalendarPosition()\n  }, _react[\"default\"].createElement(_Calendar.Calendar, {\n    onDaySelect: handleDaySelect,\n    selectedDay: selectedDay,\n    onChange: isDayRange ? handleDayRangeSelect : handleDaySelect,\n    selectedDayRange: selectedDayRange,\n    onDayRangeSelect: handleDayRangeSelect,\n    isDayRange: isDayRange,\n    calendarClassName: calendarClassName,\n    calendarTodayClassName: calendarTodayClassName,\n    calendarSelectedDayClassName: calendarSelectedDayClassName,\n    calendarRangeStartClassName: calendarRangeStartClassName,\n    calendarRangeBetweenClassName: calendarRangeBetweenClassName,\n    calendarRangeEndClassName: calendarRangeEndClassName,\n    disabledDays: disabledDays,\n    colorPrimary: colorPrimary,\n    colorPrimaryLight: colorPrimaryLight,\n    onDisabledDayError: onDisabledDayError,\n    minimumDate: minimumDate,\n    maximumDate: maximumDate,\n    selectorStartingYear: selectorStartingYear,\n    selectorEndingYear: selectorEndingYear\n  })), _react[\"default\"].createElement(_DatePickerInput[\"default\"], {\n    ref: dateInputElement,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    formatInputText: formatInputText,\n    selectedDay: selectedDay,\n    selectedDayRange: selectedDayRange,\n    inputPlaceholder: inputPlaceholder,\n    inputClassName: inputClassName,\n    renderInput: renderInput,\n    isDayRange: isDayRange\n  }));\n};\n\nDatePicker.defaultProps = {\n  wrapperClassName: ''\n};\nDatePicker.propTypes = {\n  wrapperClassName: _propTypes[\"default\"].string\n};\nvar _default = DatePicker;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}