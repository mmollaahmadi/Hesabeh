{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/hesabeh/src/components/common/input-auto-suggestion/input-auto-suggestion.js\";\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nconst langs = [{\n  name: 'c'\n}, {\n  name: 'comm'\n}, {\n  name: \"cxx\"\n}];\n\nconst getSuggestions = value => {\n  const inputValue = value.trim.toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : langs.filter(lang => lang.name.toLowerCase.slice(0, inputLength) === inputValue);\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, suggestion);\n\nclass InputAutoSuggestion extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n    const inputProps = {\n      placeholder: 'jijijijij',\n      value,\n      onChange: this.onChange\n    };\n    return React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionFetchRequested: this.onSuggestionFetchRequested,\n      onSuggestionClearRequested: this.onSuggestionClearRequested,\n      getSuggestionValue: getSuggestionValue,\n      renderSuggestion: renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default InputAutoSuggestion;","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/components/common/input-auto-suggestion/input-auto-suggestion.js"],"names":["React","Autosuggest","langs","name","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","getSuggestionValue","suggestion","renderSuggestion","InputAutoSuggestion","Component","constructor","onChange","event","newValue","setState","onSuggestionFetchRequested","suggestions","onSuggestionClearRequested","state","render","inputProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,IAAI,EAAC;AADP,CADY,EAIZ;AACEA,EAAAA,IAAI,EAAC;AADP,CAJY,EAOZ;AACEA,EAAAA,IAAI,EAAE;AADR,CAPY,CAAd;;AAWA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAnB;AACA,QAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,SAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyBP,KAAK,CAACS,MAAN,CAAaC,IAAI,IACjDA,IAAI,CAACT,IAAL,CAAUK,WAAV,CAAsBK,KAAtB,CAA4B,CAA5B,EAA8BJ,WAA9B,MAA+CH,UADf,CAAhC;AAED,CAND;;AAOA,MAAMQ,kBAAkB,GAAGC,UAAU,IAAIA,UAAU,CAACZ,IAApD;;AACA,MAAMa,gBAAgB,GAAGD,UAAU,IACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCA,UADD,CADF;;AAKA,MAAME,mBAAN,SAAkCjB,KAAK,CAACkB,SAAxC,CAAkD;AAChDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,QARc,GAQH,CAACC,KAAD,EAAQ;AAACC,MAAAA;AAAD,KAAR,KAAqB;AAC9B,WAAKC,QAAL,CAAc;AAAClB,QAAAA,KAAK,EAAEiB;AAAR,OAAd;AACD,KAVa;;AAAA,SAYdE,0BAZc,GAYe,CAAC;AAACnB,MAAAA;AAAD,KAAD,KAAa;AACxC,WAAKkB,QAAL,CAAc;AAACE,QAAAA,WAAW,EAAErB,cAAc,CAACC,KAAD;AAA5B,OAAd;AACD,KAda;;AAAA,SAgBdqB,0BAhBc,GAgBe,MAAM;AACjC,WAAKH,QAAL,CAAc;AAACE,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAlBa;;AAEZ,SAAKE,KAAL,GAAa;AACXtB,MAAAA,KAAK,EAAE,EADI;AAEXoB,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAcDG,EAAAA,MAAM,GAAE;AAAA,wBACuB,KAAKD,KAD5B;AAAA,UACCtB,KADD,eACCA,KADD;AAAA,UACQoB,WADR,eACQA,WADR;AAGN,UAAMI,UAAU,GAAG;AACjBC,MAAAA,WAAW,EAAE,WADI;AAEjBzB,MAAAA,KAFiB;AAGjBe,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;AAMA,WACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEK,WADf;AAEE,MAAA,0BAA0B,EAAE,KAAKD,0BAFnC;AAGE,MAAA,0BAA0B,EAAI,KAAKE,0BAHrC;AAIE,MAAA,kBAAkB,EAAEZ,kBAJtB;AAKE,MAAA,gBAAgB,EAAEE,gBALpB;AAME,MAAA,UAAU,EAAEa,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAxC+C;;AA2ClD,eAAeZ,mBAAf","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\n\nconst langs = [\n  {\n    name:'c',\n  },\n  {\n    name:'comm',\n  },\n  {\n    name: \"cxx\"\n  }\n];\nconst getSuggestions = value => {\n  const inputValue = value.trim.toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : langs.filter(lang =>\n  lang.name.toLowerCase.slice(0,inputLength) === inputValue);\n};\nconst getSuggestionValue = suggestion => suggestion.name;\nconst renderSuggestion = suggestion => (\n  <div>\n  {suggestion}\n  </div>\n);\nclass InputAutoSuggestion extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, {newValue})=>{\n    this.setState({value: newValue});\n  };\n\n  onSuggestionFetchRequested = ({value}) => {\n    this.setState({suggestions: getSuggestions(value)});\n  };\n\n  onSuggestionClearRequested = () => {\n    this.setState({suggestions: []});\n  };\n\n  render(){\n    const {value, suggestions} = this.state;\n\n    const inputProps = {\n      placeholder: 'jijijijij',\n      value,\n      onChange: this.onChange\n    };\n\n    return(\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionFetchRequested={this.onSuggestionFetchRequested}\n        onSuggestionClearRequested = {this.onSuggestionClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default InputAutoSuggestion;\n"]},"metadata":{},"sourceType":"module"}