{"ast":null,"code":"var _jsxFileName = \"/home/mohammad/Desktop/hesabeh/src/components/notifications-page/notification-table/notifications-table.js\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, Container, Row } from \"reactstrap\";\nimport NotificationsTableHeader from './notifications-table-header';\nimport NotificationsTableRow from \"./notifications-table-row.js\";\nimport TableTools from \"../../common/table-tools/table-tools\";\nimport TableFilters from \"../../common/table-filters/table-filters\";\nimport MyTable from '../../common/my-table/my-table';\nimport AOS from 'aos';\nimport { FILTERS } from '../../../constants/constants';\nconst NT_DATA = {\n  title: 'لیست اعلام ها',\n  toolsButton: {\n    title: 'ایجاد درخواس',\n    link: '/create-new-request'\n  },\n  filters: FILTERS,\n  header: {\n    numberOfColumns: 4,\n    columns: [{\n      lg: '1',\n      value: 'تاریخ'\n    }, {\n      lg: '8',\n      value: 'درخواست'\n    }, {\n      lg: '2',\n      value: 'عملیات'\n    }]\n  },\n  rows: [{\n    id: \"1\",\n    dateRequest: \"شنبه 98/05/02\",\n    sender: \"mollaahmadi\",\n    type: \"buy-list\",\n    targetGroup: \"mollaahmadi-family\",\n    buyList: [{\n      id: \"1\",\n      name: \"شامپو تخم مرغی صحت\",\n      description: \"نداشت نگیر\"\n    }, {\n      id: \"2\",\n      name: \"سس گوجه فرنگی\",\n      description: \"فقط دلپذیر باشه ها\"\n    }]\n  }, {\n    id: \"2\",\n    dateRequest: \"شنبه 98/05/02\",\n    sender: \"mahlagha\",\n    type: \"join-to-my-group\",\n    targetGroup: \"hamsayeha\",\n    buyList: []\n  }, {\n    id: \"3\",\n    dateRequest: \"شنبه 98/05/02\",\n    sender: \"ali\",\n    type: \"join-me-to-other-group\",\n    targetGroup: \"itc\",\n    buyList: []\n  }, {\n    id: \"4\",\n    dateRequest: \"شنبه 98/05/02\",\n    sender: \"sepanta\",\n    type: \"disjoin-from-my-group\",\n    targetGroup: \"khabgah\",\n    buyList: []\n  }, {\n    id: \"5\",\n    dateRequest: \"شنبه 98/05/02\",\n    sender: \"mahlagha\",\n    type: \"disjoin-me-from-other-group\",\n    targetGroup: \"غضنفر و دوستان\",\n    buyList: []\n  }]\n};\n\nclass NotificationsTable extends React.Component {\n  constructor(props) {\n    super(props); // this.state={\n    //   dateCol: null,\n    //   requestCol: null,\n    //   actionCol: null\n    // };\n\n    this.state = {\n      allCheckBoxesChecked: false,\n      checkBoxesStatusList: []\n    };\n    this.updateCheckBoxesStatusList = this.updateCheckBoxesStatusList.bind(this);\n    this.isAnyCheckBoxTrue = this.isAnyCheckBoxTrue.bind(this);\n    this.handleAllCheckedChange = this.handleAllCheckedChange.bind(this);\n    this.allCheckBoxesChecked = this.allCheckBoxesChecked.bind(this);\n    this.getCheckedStatus = this.getCheckedStatus.bind(this);\n    AOS.init(); // this.createReuestColumnAndActionColumn = this.createReuestColumnAndActionColumn.bind(this);\n  }\n\n  componentDidMount() {\n    let _checkedList = [];\n    this.props.notifications.forEach(notification => {\n      _checkedList.push({\n        id: notification.id,\n        checked: false\n      });\n    });\n    this.setState({\n      checkBoxesStatusList: _checkedList\n    });\n  }\n\n  updateCheckBoxesStatusList(id) {\n    let _checkedList = this.state.checkBoxesStatusList;\n\n    _checkedList.forEach(el => {\n      if (el.id === id) {\n        el.checked = !el.checked;\n      }\n    });\n\n    this.setState({\n      checkBoxesStatusList: _checkedList,\n      allCheckBoxesChecked: this.allCheckBoxesChecked(_checkedList)\n    });\n  }\n\n  allCheckBoxesChecked(list) {\n    let flag = true;\n    this.state.checkBoxesStatusList.forEach(el => {\n      if (!el.checked) flag = false;\n    });\n    return flag;\n  }\n\n  isAnyCheckBoxTrue() {\n    let _checkedList = this.state.checkBoxesStatusList;\n    let flag = false;\n\n    _checkedList.forEach(el => {\n      if (el.checked === true) {\n        flag = true;\n      }\n    });\n\n    return flag;\n  }\n\n  handleAllCheckedChange() {\n    let _checkedList = this.state.checkBoxesStatusList;\n\n    _checkedList.forEach(el => {\n      el.checked = !this.state.allCheckBoxesChecked;\n    });\n\n    this.setState({\n      allCheckBoxesChecked: !this.state.allCheckBoxesChecked,\n      checkBoxesStatusList: _checkedList\n    });\n  }\n\n  getCheckedStatus(id) {\n    let flag = false;\n    this.state.checkBoxesStatusList.forEach(el => {\n      if (el.id == id) flag = el.checked;\n    });\n    return flag;\n  } // createReuestColumnAndActionColumn(){\n  //   let requestCol = null;\n  //   let actionCol = null;\n  //   const rowData = NT_DATA.rows;\n  //\n  //   let dateCol = <span>{NT_DATA.rows}</span>;\n  //\n  //   if (rowData.type === \"buy-list\") {\n  //     requestCol = (\n  //       <>\n  //         <span className=\"user-sender\">\n  //           <Chip\n  //             link=\"/mollaahmadi.ir\"\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.sender}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         یک لیست نیازمندی در گروه\n  //         <span className=\"target-group\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.targetGroup}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         ایجاد کرده است.\n  //       </>\n  //     );\n  //     actionCol = (\n  //       <Button className=\"notification-table-row-btn\" color=\"primary\">\n  //         مشاهده لیست\n  //       </Button>\n  //     );\n  //   } else if (rowData.type === \"join-to-my-group\") {\n  //     requestCol = (\n  //       <>\n  //         <span className=\"user-sender\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.sender}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         درخواست پیوستن به گروه\n  //         <span className=\"target-group\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.targetGroup}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         را دارد.\n  //       </>\n  //     );\n  //     actionCol = (\n  //       <>\n  //         <Button className=\"notification-table-row-btn\" color=\"primary\">\n  //           قبول\n  //         </Button>\n  //         <Button className=\"notification-table-row-btn\" color=\"default\">\n  //           رد\n  //         </Button>\n  //       </>\n  //     );\n  //   } else if (rowData.type === \"join-me-to-other-group\") {\n  //     requestCol = (\n  //       <>\n  //         شما درخواست پیوستن به گروه\n  //         <span className=\"target-group\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.targetGroup}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         را از\n  //         <span className=\"user-sender\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.sender}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         دارید.\n  //       </>\n  //     );\n  //     actionCol = (\n  //       <Button className=\"notification-table-row-btn\" color=\"default\">\n  //         لغو درخواست\n  //       </Button>\n  //     );\n  //   } else if (rowData.type === \"disjoin-from-my-group\") {\n  //\n  //     requestCol = (\n  //       <>\n  //         <span className=\"user-sender\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.sender}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         درخواست تسویه حساب و خروج از گروه\n  //         <span className=\"target-group\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.targetGroup}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         را دارد.\n  //       </>\n  //     );\n  //     actionCol = (\n  //       <>\n  //         <Button className=\"notification-table-row-btn\" color=\"primary\">\n  //           قبول\n  //         </Button>\n  //         <Button className=\"notification-table-row-btn\" color=\"default\">\n  //           رد\n  //         </Button>\n  //       </>\n  //     );\n  //   } else if (rowData.type === \"disjoin-me-from-other-group\") {\n  //\n  //     requestCol = (\n  //       <>\n  //         شما درخواست تسویه حساب و خروج از گروه\n  //         <span className=\"target-group\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.targetGroup}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         را از\n  //         <span className=\"user-sender\">\n  //           <Chip\n  //             haveCloseButton=\"false\"\n  //             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n  //             label={rowData.sender}\n  //             // onDelete={() => this.deleteUser()}\n  //           />\n  //         </span>\n  //         دارید.\n  //       </>\n  //     );\n  //     actionCol = (\n  //       <Button className=\"notification-table-row-btn\" color=\"default\">\n  //         لغو درخواست\n  //       </Button>\n  //     );\n  //   } else {\n  //     requestCol = <Col lg=\"8\"/>;\n  //     actionCol = <Col lg=\"4\"/>;\n  //   }\n  //\n  //   this.setState({\n  //     dateCol: dateCol,\n  //     requestCol: requestCol,\n  //     actionCol: actionCol\n  //   });\n  // }\n  // componentDidMount(){\n  // this.createReuestColumnAndActionColumn();\n  // }\n\n\n  render() {\n    const rows = [];\n    this.props.data.forEach(row => {\n      rows.push(React.createElement(NotificationsTableRow, {\n        rowData: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(Card, {\n      \"data-aos\": \"fade-up\",\n      \"data-aos-duration\": \"1000\",\n      \"data-aos-delay\": \"50\",\n      className: \"card-profile shadow mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"\\u0644\\u06CC\\u0633\\u062A \\u0627\\u0639\\u0644\\u0627\\u0645 \\u0647\\u0627\"), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(TableTools, {\n      buttonTitle: \"\\u0627\\u06CC\\u062C\\u0627\\u062F \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\",\n      buttonLink: \"/create-new-request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }), React.createElement(TableFilters, {\n      data: FILTERS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"justify-content-center py-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(NotificationsTableHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }), rows))));\n  }\n\n}\n\nexport default NotificationsTable;","map":{"version":3,"sources":["/home/mohammad/Desktop/hesabeh/src/components/notifications-page/notification-table/notifications-table.js"],"names":["React","Card","CardHeader","CardBody","Container","Row","NotificationsTableHeader","NotificationsTableRow","TableTools","TableFilters","MyTable","AOS","FILTERS","NT_DATA","title","toolsButton","link","filters","header","numberOfColumns","columns","lg","value","rows","id","dateRequest","sender","type","targetGroup","buyList","name","description","NotificationsTable","Component","constructor","props","state","allCheckBoxesChecked","checkBoxesStatusList","updateCheckBoxesStatusList","bind","isAnyCheckBoxTrue","handleAllCheckedChange","getCheckedStatus","init","componentDidMount","_checkedList","notifications","forEach","notification","push","checked","setState","el","list","flag","render","data","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row\n} from \"reactstrap\";\nimport NotificationsTableHeader from './notifications-table-header'\nimport NotificationsTableRow from \"./notifications-table-row.js\";\nimport TableTools from \"../../common/table-tools/table-tools\";\nimport TableFilters from \"../../common/table-filters/table-filters\";\nimport MyTable from '../../common/my-table/my-table'\nimport AOS from 'aos';\nimport {FILTERS} from '../../../constants/constants'\n\nconst NT_DATA = {\n  title:'لیست اعلام ها',\n  toolsButton:{\n    title:'ایجاد درخواس',\n    link:'/create-new-request'\n  },\n  filters:FILTERS,\n  header:{\n    numberOfColumns:4,\n    columns:[\n      {\n        lg:'1',\n        value:'تاریخ'\n      },\n      {\n        lg:'8',\n        value:'درخواست'\n      },\n      {\n        lg:'2',\n        value:'عملیات'\n      }\n    ]\n  },\n  rows:[\n    {\n      id: \"1\",\n      dateRequest: \"شنبه 98/05/02\",\n      sender: \"mollaahmadi\",\n      type: \"buy-list\",\n      targetGroup: \"mollaahmadi-family\",\n      buyList: [\n        {\n          id: \"1\",\n          name: \"شامپو تخم مرغی صحت\",\n          description: \"نداشت نگیر\"\n        },\n        {\n          id: \"2\",\n          name: \"سس گوجه فرنگی\",\n          description: \"فقط دلپذیر باشه ها\"\n        }\n      ]\n    },\n    {\n      id: \"2\",\n      dateRequest: \"شنبه 98/05/02\",\n      sender: \"mahlagha\",\n      type: \"join-to-my-group\",\n      targetGroup: \"hamsayeha\",\n      buyList: []\n    },\n    {\n      id: \"3\",\n      dateRequest: \"شنبه 98/05/02\",\n      sender: \"ali\",\n      type: \"join-me-to-other-group\",\n      targetGroup: \"itc\",\n      buyList: []\n    },\n    {\n      id: \"4\",\n      dateRequest: \"شنبه 98/05/02\",\n      sender: \"sepanta\",\n      type: \"disjoin-from-my-group\",\n      targetGroup: \"khabgah\",\n      buyList: []\n    },\n    {\n      id: \"5\",\n      dateRequest: \"شنبه 98/05/02\",\n      sender: \"mahlagha\",\n      type: \"disjoin-me-from-other-group\",\n      targetGroup: \"غضنفر و دوستان\",\n      buyList: []\n    }\n  ]\n\n};\n\n\nclass NotificationsTable extends React.Component {\n  constructor(props){\n    super(props);\n    // this.state={\n    //   dateCol: null,\n    //   requestCol: null,\n    //   actionCol: null\n    // };\n    this.state = {\n      allCheckBoxesChecked: false,\n      checkBoxesStatusList: []\n    };\n    this.updateCheckBoxesStatusList = this.updateCheckBoxesStatusList.bind(this);\n    this.isAnyCheckBoxTrue = this.isAnyCheckBoxTrue.bind(this);\n    this.handleAllCheckedChange = this.handleAllCheckedChange.bind(this);\n    this.allCheckBoxesChecked = this.allCheckBoxesChecked.bind(this);\n    this.getCheckedStatus = this.getCheckedStatus.bind(this);\n    AOS.init();\n    // this.createReuestColumnAndActionColumn = this.createReuestColumnAndActionColumn.bind(this);\n  }\n  componentDidMount(){\n    let _checkedList = [];\n    this.props.notifications.forEach(notification => {\n      _checkedList.push({\n        id: notification.id,\n        checked: false\n      });\n    });\n    this.setState({\n      checkBoxesStatusList: _checkedList\n    });\n  }\n\n  updateCheckBoxesStatusList(id){\n    let _checkedList = this.state.checkBoxesStatusList;\n    _checkedList.forEach(el => {\n      if(el.id === id){\n        el.checked = !el.checked\n      }\n    });\n    this.setState({\n      checkBoxesStatusList: _checkedList,\n      allCheckBoxesChecked: this.allCheckBoxesChecked(_checkedList)\n    });\n  }\n  allCheckBoxesChecked(list){\n    let flag = true;\n    this.state.checkBoxesStatusList.forEach(el => {\n      if(!el.checked)\n        flag = false;\n    });\n    return flag;\n  }\n\n  isAnyCheckBoxTrue(){\n    let _checkedList = this.state.checkBoxesStatusList;\n    let flag = false;\n    _checkedList.forEach(el => {\n      if(el.checked === true){\n        flag = true;\n      }\n    });\n    return flag;\n  }\n\nhandleAllCheckedChange(){\n  let _checkedList = this.state.checkBoxesStatusList;\n  _checkedList.forEach(el => {\n      el.checked = !this.state.allCheckBoxesChecked\n  });\n  this.setState({\n    allCheckBoxesChecked: !this.state.allCheckBoxesChecked,\n    checkBoxesStatusList: _checkedList,\n  });\n}\ngetCheckedStatus(id){\n  let flag = false;\n  this.state.checkBoxesStatusList.forEach(el => {\n    if(el.id == id)\n      flag = el.checked;\n  });\n  return flag;\n}\n\n// createReuestColumnAndActionColumn(){\n//   let requestCol = null;\n//   let actionCol = null;\n//   const rowData = NT_DATA.rows;\n//\n//   let dateCol = <span>{NT_DATA.rows}</span>;\n//\n//   if (rowData.type === \"buy-list\") {\n//     requestCol = (\n//       <>\n//         <span className=\"user-sender\">\n//           <Chip\n//             link=\"/mollaahmadi.ir\"\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.sender}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         یک لیست نیازمندی در گروه\n//         <span className=\"target-group\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.targetGroup}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         ایجاد کرده است.\n//       </>\n//     );\n//     actionCol = (\n//       <Button className=\"notification-table-row-btn\" color=\"primary\">\n//         مشاهده لیست\n//       </Button>\n//     );\n//   } else if (rowData.type === \"join-to-my-group\") {\n//     requestCol = (\n//       <>\n//         <span className=\"user-sender\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.sender}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         درخواست پیوستن به گروه\n//         <span className=\"target-group\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.targetGroup}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         را دارد.\n//       </>\n//     );\n//     actionCol = (\n//       <>\n//         <Button className=\"notification-table-row-btn\" color=\"primary\">\n//           قبول\n//         </Button>\n//         <Button className=\"notification-table-row-btn\" color=\"default\">\n//           رد\n//         </Button>\n//       </>\n//     );\n//   } else if (rowData.type === \"join-me-to-other-group\") {\n//     requestCol = (\n//       <>\n//         شما درخواست پیوستن به گروه\n//         <span className=\"target-group\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.targetGroup}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         را از\n//         <span className=\"user-sender\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.sender}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         دارید.\n//       </>\n//     );\n//     actionCol = (\n//       <Button className=\"notification-table-row-btn\" color=\"default\">\n//         لغو درخواست\n//       </Button>\n//     );\n//   } else if (rowData.type === \"disjoin-from-my-group\") {\n//\n//     requestCol = (\n//       <>\n//         <span className=\"user-sender\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.sender}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         درخواست تسویه حساب و خروج از گروه\n//         <span className=\"target-group\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.targetGroup}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         را دارد.\n//       </>\n//     );\n//     actionCol = (\n//       <>\n//         <Button className=\"notification-table-row-btn\" color=\"primary\">\n//           قبول\n//         </Button>\n//         <Button className=\"notification-table-row-btn\" color=\"default\">\n//           رد\n//         </Button>\n//       </>\n//     );\n//   } else if (rowData.type === \"disjoin-me-from-other-group\") {\n//\n//     requestCol = (\n//       <>\n//         شما درخواست تسویه حساب و خروج از گروه\n//         <span className=\"target-group\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.targetGroup}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         را از\n//         <span className=\"user-sender\">\n//           <Chip\n//             haveCloseButton=\"false\"\n//             avatarSrc={require(\"../../../assets/img/users/user01.jpg\")}\n//             label={rowData.sender}\n//             // onDelete={() => this.deleteUser()}\n//           />\n//         </span>\n//         دارید.\n//       </>\n//     );\n//     actionCol = (\n//       <Button className=\"notification-table-row-btn\" color=\"default\">\n//         لغو درخواست\n//       </Button>\n//     );\n//   } else {\n//     requestCol = <Col lg=\"8\"/>;\n//     actionCol = <Col lg=\"4\"/>;\n//   }\n//\n//   this.setState({\n//     dateCol: dateCol,\n//     requestCol: requestCol,\n//     actionCol: actionCol\n//   });\n// }\n// componentDidMount(){\n// this.createReuestColumnAndActionColumn();\n// }\n  render() {\n    const rows = [];\n    this.props.data.forEach(row => {\n      rows.push(<NotificationsTableRow rowData={row}/>);\n    });\n\n    return (\n\n\n\n        <Container>\n          <Card data-aos=\"fade-up\"\n               data-aos-duration=\"1000\"\n               data-aos-delay=\"50\"\n          className=\"card-profile shadow mt-5\">\n            <CardHeader>\n              لیست اعلام ها\n            </CardHeader>\n            <CardBody>\n              <TableTools buttonTitle=\"ایجاد درخواست\" buttonLink=\"/create-new-request\"/>\n              <TableFilters data={FILTERS}/>\n              <Row className=\"justify-content-center py-1\">\n                <NotificationsTableHeader/>\n                {rows}\n              </Row>\n            </CardBody>\n          </Card>\n        </Container>\n\n\n\n    );\n  }\n}\n\nexport default NotificationsTable;\n"]},"metadata":{},"sourceType":"module"}