{
  "_from": "react-dropzone",
  "_id": "react-dropzone@10.1.10",
  "_inBundle": false,
  "_integrity": "sha512-vcLBdkYo7wgZpw1o4cz7uk8/Mmm+sYHeiTfFSshA/EGthz/TjjrTOrKwvFHm3o1p1LPk+x+KbDDlw5OeIo6eYA==",
  "_location": "/react-dropzone",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-dropzone",
    "fetchSpec": "latest",
    "name": "react-dropzone",
    "raw": "react-dropzone",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-dropzone/-/react-dropzone-10.1.10.tgz",
  "_shasum": "f340290dfc26ac09ad68abc020ab6232c23d6cf3",
  "_shrinkwrap": null,
  "_spec": "react-dropzone",
  "_where": "/home/mohammad/Desktop/hesabeh",
  "author": {
    "name": "Param Aggarwal"
  },
  "bugs": {
    "url": "https://github.com/react-dropzone/react-dropzone/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "@commitlint/prompt"
    }
  },
  "contributors": [
    {
      "name": "Andrey Okonetchnikov",
      "email": "andrey@okonet.ru",
      "url": "http://okonet.ru"
    },
    {
      "name": "Mike Olson",
      "email": "me@mwolson.org"
    },
    {
      "name": "Param Aggarwal"
    },
    {
      "name": "Tyler Waters",
      "email": "tyler.waters@gmail.com"
    },
    {
      "name": "Rick Markins",
      "email": "rmarkins@gmail.com"
    },
    {
      "name": "Roland Groza",
      "email": "rolandjitsu@gmail.com"
    }
  ],
  "dependencies": {
    "attr-accept": "^1.1.3",
    "file-selector": "^0.1.11",
    "prop-types": "^15.7.2"
  },
  "deprecated": false,
  "description": "Simple HTML5 drag-drop zone with React.js",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.3.4",
    "@babel/plugin-external-helpers": "^7.2.0",
    "@babel/plugin-proposal-do-expressions": "^7.2.0",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.2.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.2.0",
    "@babel/plugin-proposal-optional-chaining": "^7.2.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.3.2",
    "@babel/plugin-transform-runtime": "^7.3.4",
    "@babel/preset-env": "^7.3.4",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.0.0",
    "@commitlint/cli": "^7.0.0",
    "@commitlint/config-angular": "^7.0.1",
    "@commitlint/prompt": "^7.0.0",
    "@commitlint/prompt-cli": "^7.0.0",
    "@testing-library/dom": "^6.5.0",
    "@testing-library/jest-dom": "^4.1.0",
    "@testing-library/react": "^9.3.0",
    "@testing-library/react-hooks": "^2.0.3",
    "@types/react": "^16.9.0",
    "@types/react-dom": "^16.9.0",
    "babel-eslint": "*",
    "babel-jest": "^24.1.0",
    "babel-plugin-add-module-exports": "^1.0.0",
    "babel-plugin-dynamic-import-node": "^2.2.0",
    "commitizen": "^2.10.1",
    "cross-env": "^5.2.0",
    "eslint": "4.x",
    "eslint-config-okonet": "^7.0.2",
    "eslint-config-prettier": "2.x",
    "eslint-plugin-flowtype": "2.x",
    "eslint-plugin-import": "2.x",
    "eslint-plugin-jsx-a11y": "5.x",
    "eslint-plugin-node": "5.x",
    "eslint-plugin-prettier": "2.x",
    "eslint-plugin-react": "7.x",
    "eslint-plugin-react-hooks": "^1.0.2",
    "husky": "^0.14.3",
    "imagemin-cli": "^3.0.0",
    "imagemin-pngquant": "^6.0.0",
    "jest": "^24.1.0",
    "jest-dom": "^3.1.2",
    "lint-staged": "^7.2.2",
    "markdownlint-cli": "^0.13.0",
    "prettier": "*",
    "react": "^16.9.0",
    "react-dom": "^16.9.0",
    "react-styleguidist": "^9.0.1",
    "react-test-renderer": "^16.9.0",
    "rimraf": "^2.5.2",
    "rollup": "^1.3.0",
    "rollup-plugin-babel": "^4.3.2",
    "rollup-plugin-commonjs": "^9.2.1",
    "rollup-plugin-node-resolve": "^4.0.1",
    "rollup-plugin-uglify": "^6.0.2",
    "sinon": "^3.2.1",
    "size-limit": "^0.19.2",
    "style-loader": "^0.18.2",
    "styled-components": "^4.1.2",
    "tslint": "^5.9.1",
    "typescript": "^3.2.4",
    "webpack": "^4.29.5",
    "webpack-blocks": "^2.0.0-rc"
  },
  "engines": {
    "node": ">= 8"
  },
  "homepage": "https://github.com/react-dropzone/react-dropzone",
  "jest": {
    "clearMocks": true,
    "coveragePathIgnorePatterns": [
      "/dist/",
      "/node_modules/",
      "<rootDir>/testSetup.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/testSetup.js"
    ],
    "testPathIgnorePatterns": [
      "/dist/",
      "/node_modules/"
    ]
  },
  "keywords": [
    "drag",
    "drop",
    "react",
    "react-component",
    "upload"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ],
    "*.ts": [
      "tslint"
    ],
    "*.{svg,png}": [
      "git add",
      "imagemin"
    ]
  },
  "main": "dist/index.js",
  "module": "dist/es/index.js",
  "name": "react-dropzone",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 16.8"
  },
  "readme": "![react-dropzone logo](https://raw.githubusercontent.com/react-dropzone/react-dropzone/master/logo/logo.png)\n\n# react-dropzone\n\n[![npm](https://img.shields.io/npm/v/react-dropzone.svg?style=flat-square)](https://www.npmjs.com/package/react-dropzone)\n[![Build Status](https://img.shields.io/travis/react-dropzone/react-dropzone/master.svg?style=flat-square)](https://travis-ci.org/react-dropzone/react-dropzone)\n[![codecov](https://img.shields.io/codecov/c/gh/react-dropzone/react-dropzone/master.svg?style=flat-square)](https://codecov.io/gh/react-dropzone/react-dropzone)\n[![Open Collective](https://img.shields.io/opencollective/backers/react-dropzone.svg?style=flat-square)](#backers)\n[![Open Collective](https://img.shields.io/opencollective/sponsors/react-dropzone.svg?style=flat-square)](#sponsors)\n\nSimple React hook to create a HTML5-compliant drag'n'drop zone for files.\n\nDocumentation and examples at https://react-dropzone.js.org. Source code at https://github.com/react-dropzone/react-dropzone/.\n\n\n## Installation\n\nInstall it from npm and include it in your React build process (using [Webpack](http://webpack.github.io/), [Browserify](http://browserify.org/), etc).\n\n```bash\nnpm install --save react-dropzone\n```\nor:\n```bash\nyarn add react-dropzone\n```\n\n\n## Usage\nYou can either use the hook:\n\n```jsx static\nimport React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\n\nfunction MyDropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n    </div>\n  )\n}\n```\n\n**IMPORTANT**: Under the hood, this lib makes use of [hooks](https://reactjs.org/docs/hooks-intro.html), therefore, using it requires React `>= 16.8`.\n\nOr the wrapper component for the hook:\n```jsx static\nimport React from 'react'\nimport Dropzone from 'react-dropzone'\n\n<Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\n  {({getRootProps, getInputProps}) => (\n    <section>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n    </section>\n  )}\n</Dropzone>\n```\n\n\n**Warning**: On most recent browsers versions, the files given by `onDrop` won't have properties `path` or `fullPath`, see [this SO question](https://stackoverflow.com/a/23005925/2275818) and [this issue](https://github.com/react-dropzone/react-dropzone/issues/477).\n\nFurthermore, if you want to access file contents you have to use the [FileReader API](https://developer.mozilla.org/en-US/docs/Web/API/FileReader):\n\n```jsx static\nimport React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\n\nfunction MyDropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    const reader = new FileReader()\n\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      const binaryStr = reader.result\n      console.log(binaryStr)\n    }\n\n    acceptedFiles.forEach(file => reader.readAsArrayBuffer(file))\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  )\n}\n```\n\n\n## Dropzone Props Getters\n\nThe dropzone property getters are just two functions that return objects with properties which you need to use to create the drag 'n' drop zone.\nThe root properties can be applied to whatever element you want, whereas the input properties must be applied to an `<input>`:\n```jsx static\nimport React from 'react'\nimport {useDropzone} from 'react-dropzone'\n\nfunction MyDropzone() {\n  const {getRootProps, getInputProps} = useDropzone()\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  )\n}\n```\n\nNote that whatever other props you want to add to the element where the props from `getRootProps()` are set, you should always pass them through that function rather than applying them on the element itself.\nThis is in order to avoid your props being overridden (or overriding the props returned by `getRootProps()`):\n```jsx static\n<div\n  {...getRootProps({\n    onClick: event => console.log(event)\n  })}\n/>\n```\n\nIn the example above, the provided `{onClick}` handler will be invoked before the internal one, therefore, internal callbacks can be prevented by simply using [stopPropagation](https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation).\nSee [Events](https://react-dropzone.js.org#events) for more examples.\n\n*Important*: if you ommit rendering an `<input>` and/or binding the props from `getInputProps()`, opening a file dialog will not be possible.\n\n## Refs\n\nBoth `getRootProps` and `getInputProps` accept a custom `refKey` (defaults to `ref`) as one of the attributes passed down in the parameter.\n\nThis can be useful when the element you're trying to apply the props from either one of those fns does not expose a reference to the element, e.g.:\n\n```jsx static\nimport React from 'react'\nimport {useDropzone} from 'react-dropzone'\n// NOTE: After v4.0.0, styled components exposes a ref using forwardRef,\n// therefore, no need for using innerRef as refKey\nimport styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  // Some styling here\n`\nfunction Example() {\n  const {getRootProps, getInputProps} = useDropzone()\n  <StyledDiv {...getRootProps({ refKey: 'innerRef' })}>\n    <input {...getInputProps()} />\n    <p>Drag 'n' drop some files here, or click to select files</p>\n  </StyledDiv>\n}\n```\n\nIf you're working with [Material UI](https://material-ui.com) and would like to apply the root props on some component that does not expose a ref, use [RootRef](https://material-ui.com/api/root-ref):\n\n```jsx static\nimport React from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport RootRef from '@material-ui/core/RootRef'\n\nfunction PaperDropzone() {\n  const {getRootProps, getInputProps} = useDropzone()\n  const {ref, ...rootProps} = getRootProps()\n\n  <RootRef rootRef={ref}>\n    <Paper {...rootProps}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </Paper>\n  </RootRef>\n}\n```\n\n*Important*: do not set the `ref` prop on the elements where `getRootProps()`/`getInputProps()` props are set, instead, get the refs from the hook itself:\n\n```jsx static\nimport React from 'react'\nimport {useDropzone} from 'react-dropzone'\n\nfunction Refs() {\n  const {\n    getRootProps,\n    getInputProps,\n    rootRef, // Ref to the `<div>`\n    inputRef // Ref to the `<input>`\n  } = useDropzone()\n  <div {...getRootProps()}>\n    <input {...getInputProps()} />\n    <p>Drag 'n' drop some files here, or click to select files</p>\n  </div>\n}\n```\n\nIf you're using the `<Dropzone>` component, though, you can set the `ref` prop on the component itself which will expose the `{open}` prop that can be used to open the file dialog programmatically:\n\n```jsx static\nimport React, {createRef} from 'react'\nimport Dropzone from 'react-dropzone'\n\nconst dropzoneRef = createRef()\n\n<Dropzone ref={dropzoneRef}>\n  {({getRootProps, getInputProps}) => (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  )}\n</Dropzone>\n\ndropzoneRef.open()\n```\n\n\n## Testing\n\n*Important*: `react-dropzone` makes some of its drag 'n' drop callbacks asynchronous to enable promise based `getFilesFromEvent()` functions. In order to properly test this, you may want to utilize a helper function to run all promises like this:\n```js static\nconst flushPromises = () => new Promise(resolve => setImmediate(resolve))\n```\n\nExample with [react-testing-library](https://github.com/kentcdodds/react-testing-library):\n```js static\nimport React from 'react'\nimport Dropzone from 'react-dropzone'\nimport { fireEvent, render } from 'react-testing-library'\n\ntest('invoke onDragEnter when dragenter event occurs', async () => {\n  const file = new File([\n    JSON.stringify({ping: true})\n  ], 'ping.json', { type: 'application/json' })\n  const data = mockData([file])\n  const onDragEnter = jest.fn()\n\n  const ui = (\n    <Dropzone onDragEnter={onDragEnter}>\n      {({ getRootProps, getInputProps }) => (\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n        </div>\n      )}\n    </Dropzone>\n  )\n  const { container } = render(ui)\n  const dropzone = container.querySelector('div')\n\n  dispatchEvt(dropzone, 'dragenter', data)\n  await flushPromises(ui, container)\n\n  expect(onDragEnter).toHaveBeenCalled()\n})\n\nfunction flushPromises(ui, container) {\n  return new Promise(resolve =>\n    setImmediate(() => {\n      render(ui, { container })\n      resolve(container)\n    })\n  )\n}\n\nfunction dispatchEvt(node, type, data) {\n  const event = new Event(type, { bubbles: true })\n  Object.assign(event, data)\n  fireEvent(node, event)\n}\n\nfunction mockData(files) {\n  return {\n    dataTransfer: {\n      files,\n      items: files.map(file => ({\n        kind: 'file',\n        type: file.type,\n        getAsFile: () => file\n      })),\n      types: ['Files']\n    }\n  }\n}\n```\n\n*Note*: using [Enzyme](https://airbnb.io/enzyme) for testing is not supported at the moment, see [#2011](https://github.com/airbnb/enzyme/issues/2011).\n\nMore examples for this can be found in `react-dropzone`s own [test suites](https://github.com/react-dropzone/react-dropzone/blob/master/src/index.spec.js).\n\n\n## Support\n\n### Backers\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/react-dropzone#backer)]\n\n<a href=\"https://opencollective.com/react-dropzone/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/backer/29/avatar.svg\"></a>\n\n\n### Sponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/react-dropzone#sponsor)]\n\n<a href=\"https://opencollective.com/react-dropzone/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/react-dropzone/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/react-dropzone/sponsor/29/avatar.svg\"></a>\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-dropzone/react-dropzone.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build:umd && npm run build:es",
    "build:es": "cross-env BABEL_ENV=es babel ./src --out-dir ./dist/es --ignore '**/*.spec.js'",
    "build:umd": "cross-env NODE_ENV=es rollup -c",
    "ci": "git-cz",
    "clean": "rimraf ./dist",
    "commitmsg": "commitlint -e",
    "eslint:src": "eslint .",
    "imagemin": "imagemin --out-dir=logo --plugin=pngquant --plugin=svgo",
    "logo": "cd logo && sketchtool export artboards logo.sketch",
    "precommit": "lint-staged",
    "prepublish": "npm run build && npm run size",
    "size": "size-limit",
    "size:why": "size-limit --why",
    "start": "styleguidist server",
    "styleguide": "styleguidist build",
    "test": "cross-env NODE_ENV=test npm run eslint:src && jest --coverage && npm run typescript",
    "test:watch": "cross-env NODE_ENV=test jest --watch",
    "typescript": "tsc --project ./typings/tests"
  },
  "size-limit": [
    {
      "path": "dist/index.js",
      "limit": "7 KB"
    },
    {
      "path": "dist/es/index.js",
      "limit": "7 KB"
    }
  ],
  "typings": "typings/react-dropzone.d.ts",
  "version": "10.1.10"
}
